{"ast":null,"code":"import _objectSpread from \"/Users/kirancorreya/Site/Starlify/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/SystemDetails.js\";\nimport React, { Component } from \"react\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport { fetchSystemDetils } from \"../../../store/system/systemActions\";\nimport { fetchModel } from \"../../../store/model/modelActions\";\nimport { connect } from \"react-redux\";\nimport { Collapse, Modal, ModalBody, Input, Label } from \"reactstrap\";\nimport edit from \"../../../_assets/icons/icons/edit.svg\";\n\nclass SystemDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = target => {\n      this.setState(_objectSpread({}, this.state, {\n        [target]: !this.state[target]\n      }));\n    };\n\n    this.inputRefs = [];\n\n    this.setRef = ref => {\n      debugger;\n      this.inputRefs.push(ref);\n    };\n\n    this.systemInput = React.createRef();\n    this.subsystemInput = React.createRef();\n    this.serviceInput = React.createRef();\n    this.state = {\n      collapse: true,\n      systemCollapseId: false,\n      subSystemCollapseId: false,\n      modal: false,\n      editSubSystem: false,\n      details: {},\n      formData: {\n        name: \"\",\n        description: \"\",\n        supportLevel: \"\"\n      },\n      subsystemName: '',\n      serviceName: ''\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateSystem = this.updateSystem.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addUiToggle = this.addUiToggle.bind(this);\n    this.textInput = React.createRef();\n    this.focus = this.focus.bind(this);\n  }\n\n  componentWillUpdate() {\n    this.focus();\n  }\n\n  focus() {\n    setTimeout(() => {\n      if (this.systemInput.current) {\n        this.systemInput.current.focus();\n      }\n\n      if (this.serviceInput.current) {\n        this.serviceInput.current.focus();\n      }\n\n      if (this.subsystemInput.current) {\n        debugger;\n        document.getElementById(\"myAnchor\").focus();\n      }\n    }, 500); // Explicitly focus the text input using the raw DOM API\n    // Note: we're accessing \"current\" to get the DOM node\n  } //manage add more system/flow text box to ui\n\n\n  addUiToggle(event, type) {\n    if (type === \"system\") {\n      this.setState(state => ({\n        systemAdd: !state.systemAdd\n      }));\n    } else if (type === \"service\") {\n      this.setState(state => ({\n        serviceAdd: !state.serviceAdd\n      }));\n    } else if (type === \"reference\") {\n      this.setState(state => ({\n        referenceAdd: !state.referenceAdd\n      }));\n    }\n  }\n\n  editfield(key, title, type) {\n    if (type === \"subsystem\") {\n      this.focus();\n      this.setState({\n        [\"subsystem-\" + key]: true\n      });\n      this.setState({\n        [\"subsystem-value-\" + key]: title\n      });\n    } else if (type === \"service\") {\n      this.setState({\n        [\"service-\" + key]: true\n      });\n      this.setState({\n        [\"service-value-\" + key]: title\n      });\n    } else if (type === \"reference\") {\n      this.setState({\n        [\"reference-\" + key]: true\n      });\n      this.setState({\n        [\"reference-value-\" + key]: title\n      });\n    }\n  }\n\n  editFieldChange(key, type, event) {\n    if (type === \"subsystem\") {\n      this.setState({\n        [\"subsystem-\" + key]: true\n      });\n      this.setState({\n        [\"subsystem-value-\" + key]: event.target.value\n      });\n    } else if (type === \"service\") {\n      this.setState({\n        [\"service-\" + key]: true\n      });\n      this.setState({\n        [\"service-value-\" + key]: event.target.value\n      });\n    } else if (type === \"reference\") {\n      this.setState({\n        [\"reference-\" + key]: true\n      });\n      this.setState({\n        [\"reference-value-\" + key]: event.target.value\n      });\n    }\n  }\n\n  updateEntity(key, uri, type) {\n    var value = \"\";\n    var id = \"\";\n\n    if (type === \"system\") {\n      let splitArray = uri.split(\"/\");\n      if (splitArray.length > 0) id = splitArray[4];\n      this.setState({\n        [\"subsystem-\" + key]: false\n      });\n      value = this.state[\"subsystem-value-\".concat(key)];\n    } else if (type === \"service\") {\n      this.setState({\n        [\"service-\" + key]: false\n      });\n      id = uri;\n      value = this.state[\"service-value-\".concat(key)];\n    } else if (type === \"reference\") {\n      id = uri;\n      this.setState({\n        [\"reference-\" + key]: false\n      });\n      value = this.state[\"reference-value-\".concat(key)];\n    }\n\n    fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/\").concat(type, \"/\") + id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: value\n      })\n    }).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n    });\n  }\n\n  getAllSystems() {\n    return fetch(process.env.REACT_APP_API + \"/hypermedia/network/\" + this.props.activeModelId + \"/allsystems\").then(res => res.json()).then(response => {\n      this.setState({\n        systems: response\n      });\n    }).catch(error => console.log(error));\n  } //create Sub System\n\n\n  createSubSystem() {\n    if (this.state.subsystemName) {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/network/\".concat(this.props.activeModelId, \"/system/\").concat(this.props.activeSystem, \"/system\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"/hypermedia/network/\".concat(this.props.activeModelId, \"/system/\") + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: this.state.subsystemName\n          })\n        }).then(response => {\n          this.setState({\n            'subsystemName': ''\n          });\n          this.props.getSystems(this.props.activeModelId);\n          this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n        });\n      });\n    }\n  } //create service\n\n\n  createService(event) {\n    if (this.state.serviceName) {\n      fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/system/\").concat(this.props.activeSystem, \"/service\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/service/\") + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: this.state.serviceName\n          })\n        }).then(response => {\n          this.setState({\n            'serviceName': ''\n          });\n          this.props.getSystems(this.props.activeModelId);\n          this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n        });\n      });\n    }\n  } //create reference\n\n\n  createReference(event) {\n    let value = event.target.value;\n\n    if ((event.key === \"Enter\" || event.type === \"blur\") && value && this.state.serviceId) {\n      event.target.value = \"\";\n      fetch(process.env.REACT_APP_API + \"\".concat(this.props.activeModel, \"/system/\").concat(this.props.activeSystem, \"/reference/\").concat(this.state.serviceId), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: value\n        })\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"\".concat(this.props.activeModel, \"/reference/\") + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: value\n          })\n        }).then(response => {\n          this.props.getSystems(this.props.activeModelId);\n          this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n          this.getAllSystems();\n        });\n      });\n    }\n  } //Delete sub system\n\n\n  getSubSystemId(Uri, type) {\n    let splitArray = Uri.split(\"/\");\n\n    if (splitArray.length > 0) {\n      this.deleteEntity(splitArray[4]);\n    }\n  } //Delete entity\n\n\n  deleteEntity(id) {\n    return fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/modeled/\").concat(id), {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n    });\n  } //get systems and services list for adding new reference\n\n\n  getSystemService(event) {\n    let parents = this.state.systems;\n    let parent = parents.filter(parent => parent.name === event.target.value);\n    if (parent) this.setState({\n      servicesList: parent[0].services\n    });\n  }\n\n  handleChange(event) {\n    const formData = this.state.formData;\n    formData[event.target.name] = event.target.value;\n    this.setState({\n      formData\n    });\n  }\n\n  serviceHandleChange(event) {\n    this.setState({\n      serviceId: event.target.value\n    });\n  }\n\n  addHandleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.activeSystem !== nextProps.activeSystem) this.props.getSystemDetails(this.props.activeModel, nextProps.activeSystem);\n  }\n\n  componentWillMount() {\n    this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n    this.getAllSystems();\n  }\n\n  updateSystem() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n    fetch(process.env.REACT_APP_API + \"/hypermedia/network/\".concat(this.props.activeModelId, \"/system/\") + this.props.systemDetails.id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state.formData)\n    }).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(this.props.activeModel, this.props.systemDetails.id);\n    }).catch(error => console.log(error));\n  }\n\n  toggleDescription() {\n    this.setState(state => ({\n      collapse: !state.collapse\n    }));\n  } //Closes the system details section\n\n\n  close(menu, type) {\n    this.props.close(menu, type);\n  } //control right click modal\n\n\n  modalToggle(e, data) {\n    this.setState({\n      formData: {\n        name: this.props.systemDetails.name,\n        description: this.props.systemDetails.description\n      }\n    });\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    if (data) {\n      this.setState({\n        details: {\n          description: data.description\n        }\n      });\n    }\n  }\n\n  render() {\n    var _this$state = this.state,\n        formData = _this$state.formData,\n        systems = _this$state.systems;\n    return React.createElement(\"div\", {\n      className: \"org_browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper system-full-edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org-selector col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left float-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, \"Edit System Details\"), React.createElement(\"button\", {\n      className: \"btn grey-btn done-btn float-right\",\n      onClick: this.updateSystem.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-check-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }), \" Done\"))), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"system-detail-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      className: \"text-input\",\n      value: formData.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"description\",\n      className: \"text-input\",\n      value: formData.description || \"\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"ob-block row mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-white text-left mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \"Sub systems\", \" \", !this.state.systemAdd && React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon round-button\",\n      id: \"system\",\n      onClick: e => {\n        this.addUiToggle(e, \"system\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }), this.state.systemAdd && React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      className: \"bullet-line w-100 green-bullet extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"text-input form-control text-grey adding-text\",\n      type: \"text\",\n      id: \"system\",\n      ref: this.systemInput,\n      name: \"subsystemName\",\n      value: this.state.subsystemName,\n      onChange: this.addHandleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"round-button\",\n      onClick: e => {\n        this.addUiToggle(e, \"system\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      onClick: this.createSubSystem.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    })))), this.props.systemDetails.subsystemLinks ? this.props.systemDetails.subsystemLinks.map((subsystem, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"text-white text-left mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bullet-line text-grey green-bullet w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, !this.state[\"subsystem-\".concat(i)] && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, subsystem.title), this.state[\"subsystem-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"input\", {\n        className: \"text-input form-control text-grey adding-text\",\n        type: \"text\",\n        id: \"myAnchor\",\n        ref: this.subsystemInput,\n        onChange: this.editFieldChange.bind(this, i, \"subsystem\"),\n        value: this.state[\"subsystem-value-\".concat(i)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }))), this.state[\"subsystem-\".concat(i)] && React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        onClick: this.updateEntity.bind(this, i, subsystem.uri, \"system\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      })), !this.state[\"subsystem-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pencil-alt\",\n        onClick: this.editfield.bind(this, i, subsystem.title, \"subsystem\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash\",\n        onClick: this.getSubSystemId.bind(this, subsystem.uri),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      })))));\n    }) : \"\")), React.createElement(\"div\", {\n      className: \"ob-block row mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-white text-left mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }, \"Services\", \" \", !this.state.serviceAdd && React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon round-button\",\n      id: \"system\",\n      onClick: e => {\n        this.addUiToggle(e, \"service\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }), this.state.serviceAdd && React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bullet-line w-100 blue-bullet extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"text-input form-control text-grey adding-text\",\n      type: \"text\",\n      id: \"system\",\n      ref: this.serviceInput,\n      name: \"serviceName\",\n      onChange: this.addHandleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"round-button\",\n      onClick: e => {\n        this.addUiToggle(e, \"service\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      onClick: this.createService.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    })))), this.props.systemDetails.services ? this.props.systemDetails.services.map((service, i) => {\n      return React.createElement(\"div\", {\n        className: \"text-white text-left mb-2\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bullet-line text-grey blue-bullet w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }, !this.state[\"service-\".concat(i)] && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }, service.name), this.state[\"service-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"input\", {\n        className: \"text-input form-control text-grey adding-text\",\n        type: \"text\",\n        id: \"service\",\n        onChange: this.editFieldChange.bind(this, i, \"service\"),\n        value: this.state[\"service-value-\".concat(i)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }))), this.state[\"service-\".concat(i)] && React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        onClick: this.updateEntity.bind(this, i, service.id, \"service\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      })), !this.state[\"service-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pencil-alt\",\n        onClick: this.editfield.bind(this, i, service.name, \"service\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash\",\n        onClick: this.deleteEntity.bind(this, service.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      })))));\n    }) : \"\")), React.createElement(\"div\", {\n      className: \"ob-block row mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }, \"References\", \" \", !this.state.referenceAdd && React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon round-button\",\n      id: \"system\",\n      onClick: e => {\n        this.addUiToggle(e, \"reference\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685\n      },\n      __self: this\n    })), this.state.referenceAdd && React.createElement(\"div\", {\n      className: \" w-100 no-bullet extra-add mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }, \"Create new reference\"), React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"text-input no-border\",\n      type: \"select\",\n      name: \"select\",\n      onChange: this.getSystemService.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }, \"Systems\"), this.state.systems ? systems.map((system, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: system.name,\n        id: system.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712\n        },\n        __self: this\n      }, system.name);\n    }) : \"\")), React.createElement(\"div\", {\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"text-input no-border\",\n      type: \"select\",\n      name: \"select\",\n      id: \"exampleSelect\",\n      onChange: this.serviceHandleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732\n      },\n      __self: this\n    }, \"Service\"), this.state.servicesList ? this.state.servicesList.map((item, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }, item.name);\n    }) : \"\")), React.createElement(\"div\", {\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"text-input mt-0 no-border\",\n      type: \"text\",\n      name: \"text\",\n      id: \"example\",\n      placeholder: \"Add New Reference\",\n      onBlur: this.createReference.bind(this),\n      onKeyDown: this.createReference.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"round-button mt-2\",\n      onClick: e => {\n        this.addUiToggle(e, \"reference\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769\n      },\n      __self: this\n    }, this.props.systemDetails.references ? this.props.systemDetails.references.map((reference, i) => {\n      return React.createElement(\"div\", {\n        className: \"text-white text-left mb-2\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bullet-line text-grey arrow-bullet w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776\n        },\n        __self: this\n      }, !this.state[\"reference-\".concat(i)] && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778\n        },\n        __self: this\n      }, reference.name), this.state[\"reference-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"input\", {\n        className: \"text-input form-control text-grey adding-text\",\n        type: \"text\",\n        id: \"service\",\n        onChange: this.editFieldChange.bind(this, i, \"reference\"),\n        value: this.state[\"reference-value-\".concat(i)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783\n        },\n        __self: this\n      }))), this.state[\"reference-\".concat(i)] && React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        onClick: this.updateEntity.bind(this, i, reference.id, \"reference\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801\n        },\n        __self: this\n      })), !this.state[\"reference-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pencil-alt\",\n        onClick: this.editfield.bind(this, i, reference.name, \"reference\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash\",\n        onClick: this.deleteEntity.bind(this, reference.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827\n        },\n        __self: this\n      })))));\n    }) : \"\"))))), React.createElement(\"h3\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849\n      },\n      __self: this\n    }, \"System Details\", React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon browser_close\",\n      onClick: () => this.close(\"systemDetail\", \"menuDetail\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: edit,\n      alt: \"starlify\",\n      className: \"edit\",\n      onClick: () => this.modalToggle(this, this.props.systemDetails),\n      style: {\n        marginLeft: \"15px\",\n        marginTop: \"-3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      autoHide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"system-detail-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872\n      },\n      __self: this\n    }, this.props.systemDetails.name), React.createElement(\"i\", {\n      className: \"fas fa-chevron-down system-down-icon\",\n      onClick: this.toggleDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-md-6 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      isOpen: this.state.collapse,\n      className: \"systemDetailsDisc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888\n      },\n      __self: this\n    }, this.props.systemDetails.description ? this.props.systemDetails.description : \"No Description\"))), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897\n      },\n      __self: this\n    }, \"Sub systems\"), this.props.systemDetails.subsystemLinks ? this.props.systemDetails.subsystemLinks.map((subsystem, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 902\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"subsystemCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906\n        },\n        __self: this\n      }, subsystem.title))));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916\n      },\n      __self: this\n    }, \"Services\"), this.props.systemDetails.services ? this.props.systemDetails.services.map((services, i) => {\n      return React.createElement(\"div\", {\n        key: services.id,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 920\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"serviceCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"service-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925\n        },\n        __self: this\n      }, services.name))));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937\n      },\n      __self: this\n    }, \"References\"), this.props.systemDetails.references ? this.props.systemDetails.references.map((references, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 942\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"referenceArrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944\n        },\n        __self: this\n      }, \"\\u2192\"), React.createElement(\"span\", {\n        id: \"reference-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946\n        },\n        __self: this\n      }, references.name, \" \"))));\n    }) : \"\"))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getSystemDetails: (modelId, systemId) => {\n      dispatch(fetchSystemDetils(modelId, systemId));\n    },\n    getSystems: modelId => {\n      dispatch(fetchModel(modelId));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeModel: state.model.modelUri,\n    activeModelId: state.model.modelId,\n    systemDetails: state.system.systemDetails,\n    type: state.system.type\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemDetails);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/SystemDetails.js"],"names":["React","Component","VerticalScrollbars","fetchSystemDetils","fetchModel","connect","Collapse","Modal","ModalBody","Input","Label","SystemDetails","constructor","props","toggle","target","setState","state","inputRefs","setRef","ref","push","systemInput","createRef","subsystemInput","serviceInput","collapse","systemCollapseId","subSystemCollapseId","modal","editSubSystem","details","formData","name","description","supportLevel","subsystemName","serviceName","close","bind","toggleDescription","modalToggle","updateSystem","handleChange","addUiToggle","textInput","focus","componentWillUpdate","setTimeout","current","document","getElementById","event","type","systemAdd","serviceAdd","referenceAdd","editfield","key","title","editFieldChange","value","updateEntity","uri","id","splitArray","split","length","fetch","process","env","REACT_APP_API","activeModelId","method","headers","body","JSON","stringify","then","response","getSystems","getSystemDetails","activeModel","activeSystem","getAllSystems","res","json","systems","catch","error","console","log","createSubSystem","responseJson","createService","createReference","serviceId","getSubSystemId","Uri","deleteEntity","getSystemService","parents","parent","filter","servicesList","services","serviceHandleChange","addHandleChange","componentWillReceiveProps","nextProps","componentWillMount","prevState","systemDetails","menu","e","data","render","subsystemLinks","map","subsystem","i","service","system","item","references","reference","edit","marginLeft","marginTop","mapDispatchToProps","dispatch","modelId","systemId","mapStateToProps","model","modelUri"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport { fetchSystemDetils } from \"../../../store/system/systemActions\";\nimport { fetchModel } from \"../../../store/model/modelActions\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Modal,\n  ModalBody,\n  Input,\n  Label\n} from \"reactstrap\";\nimport edit from \"../../../_assets/icons/icons/edit.svg\";\n\nclass SystemDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.systemInput = React.createRef();\n    this.subsystemInput = React.createRef();\n    this.serviceInput = React.createRef();\n    this.state = {\n      collapse: true,\n      systemCollapseId: false,\n      subSystemCollapseId: false,\n      modal: false,\n      editSubSystem: false,\n      details: {},\n      formData: {\n        name: \"\",\n        description: \"\",\n        supportLevel: \"\"\n      },\n      subsystemName : '',\n      serviceName : ''\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateSystem = this.updateSystem.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addUiToggle = this.addUiToggle.bind(this);\n    this.textInput = React.createRef();\n    this.focus = this.focus.bind(this);\n  }\n  componentWillUpdate(){\n    this.focus()\n }\n  focus() {\n    setTimeout( () => {\n      if(this.systemInput.current){\n        this.systemInput.current.focus();\n      }\n      if(this.serviceInput.current){\n        this.serviceInput.current.focus();\n      }\n      if(this.subsystemInput.current){debugger\n        document.getElementById(\"myAnchor\").focus(); \n      }\n      \n  }, 500);\n    \n    // Explicitly focus the text input using the raw DOM API\n    // Note: we're accessing \"current\" to get the DOM node\n    \n    \n  }\n\n  //manage add more system/flow text box to ui\n  addUiToggle(event, type) {\n    if (type === \"system\") {\n      this.setState(state => ({ systemAdd: !state.systemAdd }));\n     \n    } else if (type === \"service\") {\n      this.setState(state => ({ serviceAdd: !state.serviceAdd }));\n    } else if (type === \"reference\") {\n      this.setState(state => ({ referenceAdd: !state.referenceAdd }));\n    }\n  }\n\n  editfield(key, title, type) {\n    if (type === \"subsystem\") {\n      this.focus()\n      \n      \n      this.setState({ [\"subsystem-\" + key]: true });\n      this.setState({ [\"subsystem-value-\" + key]: title });\n    } else if (type === \"service\") {\n      this.setState({ [\"service-\" + key]: true });\n      this.setState({ [\"service-value-\" + key]: title });\n    } else if (type === \"reference\") {\n      this.setState({ [\"reference-\" + key]: true });\n      this.setState({ [\"reference-value-\" + key]: title });\n    }\n  }\n\n  editFieldChange(key, type, event) {\n    if (type === \"subsystem\") {\n      this.setState({ [\"subsystem-\" + key]: true });\n      this.setState({ [\"subsystem-value-\" + key]: event.target.value });\n    } else if (type === \"service\") {\n      this.setState({ [\"service-\" + key]: true });\n      this.setState({ [\"service-value-\" + key]: event.target.value });\n    } else if (type === \"reference\") {\n      this.setState({ [\"reference-\" + key]: true });\n      this.setState({ [\"reference-value-\" + key]: event.target.value });\n    }\n  }\n\n  updateEntity(key, uri, type) {\n    var value = \"\";\n    var id = \"\";\n    if (type === \"system\") {\n      let splitArray = uri.split(\"/\");\n      if (splitArray.length > 0) id = splitArray[4];\n      this.setState({ [\"subsystem-\" + key]: false });\n      value = this.state[`subsystem-value-${key}`];\n    } else if (type === \"service\") {\n      this.setState({ [\"service-\" + key]: false });\n      id = uri;\n      value = this.state[`service-value-${key}`];\n    } else if (type === \"reference\") {\n      id = uri;\n      this.setState({ [\"reference-\" + key]: false });\n      value = this.state[`reference-value-${key}`];\n    }\n\n    fetch(\n      process.env.REACT_APP_API +\n      `/model/${this.props.activeModelId}/${type}/` +\n      id,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ name: value })\n      }\n    ).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(\n        this.props.activeModel,\n        this.props.activeSystem\n      );\n    });\n  }\n\n  getAllSystems() {\n    return fetch(\n      process.env.REACT_APP_API +\n      \"/hypermedia/network/\" +\n      this.props.activeModelId +\n      \"/allsystems\"\n    )\n      .then(res => res.json())\n      .then(response => {\n        this.setState({ systems: response });\n      })\n      .catch(error => console.log(error));\n  }\n\n  //create Sub System\n  createSubSystem() {\n    if(this.state.subsystemName) {\n      fetch(\n        process.env.REACT_APP_API +\n        `/hypermedia/network/${this.props.activeModelId}/system/${this.props.activeSystem}/system`,\n        { method: \"POST\", headers: { \"Content-Type\": \"application/json\" } }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          return fetch(\n            process.env.REACT_APP_API +\n            `/hypermedia/network/${this.props.activeModelId}/system/` +\n            responseJson.id,\n            {\n              method: \"PATCH\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ name: this.state.subsystemName })\n            }\n          ).then(response => {\n            this.setState({'subsystemName' : ''})\n            this.props.getSystems(this.props.activeModelId);\n            this.props.getSystemDetails(\n              this.props.activeModel,\n              this.props.activeSystem\n            );\n          });\n        });\n      }\n  }\n\n  //create service\n  createService(event) {\n    if(this.state.serviceName) {\n      fetch(\n        process.env.REACT_APP_API +\n        `/model/${this.props.activeModelId}/system/${this.props.activeSystem}/service`,\n        { method: \"POST\", headers: { \"Content-Type\": \"application/json\" } }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          return fetch(\n            process.env.REACT_APP_API +\n            `/model/${this.props.activeModelId}/service/` +\n            responseJson.id,\n            {\n              method: \"PATCH\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ name: this.state.serviceName })\n            }\n          ).then(response => {\n            this.setState({'serviceName' : ''})\n            this.props.getSystems(this.props.activeModelId);\n            this.props.getSystemDetails(\n              this.props.activeModel,\n              this.props.activeSystem\n            );\n          });\n        });\n      }\n  }\n\n  //create reference\n  createReference(event) {\n    let value = event.target.value;\n    if (\n      (event.key === \"Enter\" || event.type === \"blur\") &&\n      value &&\n      this.state.serviceId\n    ) {\n      event.target.value = \"\";\n      fetch(\n        process.env.REACT_APP_API +\n        `${this.props.activeModel}/system/${this.props.activeSystem}/reference/${this.state.serviceId}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ name: value })\n        }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          return fetch(\n            process.env.REACT_APP_API +\n            `${this.props.activeModel}/reference/` +\n            responseJson.id,\n\n            {\n              method: \"PATCH\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({ name: value })\n            }\n          ).then(response => {\n            this.props.getSystems(this.props.activeModelId);\n            this.props.getSystemDetails(\n              this.props.activeModel,\n              this.props.activeSystem\n            );\n            this.getAllSystems();\n          });\n        });\n    }\n  }\n\n  //Delete sub system\n  getSubSystemId(Uri, type) {\n    let splitArray = Uri.split(\"/\");\n    if (splitArray.length > 0) {\n      this.deleteEntity(splitArray[4]);\n    }\n  }\n\n  //Delete entity\n  deleteEntity(id) {\n    return fetch(\n      process.env.REACT_APP_API +\n      `/model/${this.props.activeModelId}/modeled/${id}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    ).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(\n        this.props.activeModel,\n        this.props.activeSystem\n      );\n    });\n  }\n  //get systems and services list for adding new reference\n  getSystemService(event) {\n    let parents = this.state.systems;\n    let parent = parents.filter(parent => parent.name === event.target.value);\n    if (parent) this.setState({ servicesList: parent[0].services });\n  }\n  handleChange(event) {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({\n      formData\n    });\n  }\n\n  serviceHandleChange(event) {\n    this.setState({ serviceId: event.target.value });\n  }\n\n  addHandleChange(event) {\n    this.setState({[event.target.name] : event.target.value});\n  }\n\n  toggle = target => {\n    this.setState({\n      ...this.state,\n      [target]: !this.state[target]\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.activeSystem !== nextProps.activeSystem)\n      this.props.getSystemDetails(\n        this.props.activeModel,\n        nextProps.activeSystem\n      );\n  }\n\n  componentWillMount() {\n    this.props.getSystemDetails(\n      this.props.activeModel,\n      this.props.activeSystem\n    );\n    this.getAllSystems();\n  }\n\n  updateSystem() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n    fetch(\n      process.env.REACT_APP_API +\n      `/hypermedia/network/${this.props.activeModelId}/system/` +\n      this.props.systemDetails.id,\n      {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(this.state.formData)\n      }\n    )\n      .then(response => {\n        this.props.getSystems(this.props.activeModelId);\n        this.props.getSystemDetails(\n          this.props.activeModel,\n          this.props.systemDetails.id\n        )\n      }\n        \n      )\n      .catch(error => console.log(error));\n  }\n\n  toggleDescription() {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n\n  //Closes the system details section\n  close(menu, type) {\n    this.props.close(menu, type);\n  }\n\n  //control right click modal\n  modalToggle(e, data) {\n    this.setState({\n      formData: {\n        name: this.props.systemDetails.name,\n        description: this.props.systemDetails.description\n      }\n    });\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    if (data) {\n      this.setState({\n        details: { description: data.description }\n      });\n    }\n  }\n\n  inputRefs = [];\n  \n  setRef = (ref) => {debugger\n    this.inputRefs.push(ref);\n  };\n\n  render() {\n    var { formData, systems } = this.state;\n    return (\n      <div className=\"org_browser\">  \n        <Modal isOpen={this.state.modal} toggle={this.modalToggle}>\n          <ModalBody>\n            <div className=\"browser_wrapper system-full-edit\">\n              <div className=\"row\">\n                <div className=\"org-selector col-md-12\">\n                  <p className=\"text-white text-left float-left\">\n                    Edit System Details\n                </p>\n                  <button className=\"btn grey-btn done-btn float-right\"  onClick={this.updateSystem.bind(this)}>\n                    <i className=\"fas fa-check-circle\"></i> Done\n                </button>\n                </div>\n              </div>\n              <div className=\"ob-block row\">\n                <div className=\"col-md-8 m-b-20\">\n                  <p className=\"text-white text-left\">\n                    <span id=\"system-detail-name\">\n                      <Label for=\"name\">Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"name\"\n                        className=\"text-input\"\n                        value={formData.name}\n                        onChange={this.handleChange}\n                      />\n                    </span>\n                  </p>\n\n                  <p className=\"text-white\">\n                    <Label for=\"name\">Description</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"description\"\n                      className=\"text-input\"\n                      value={formData.description || \"\"}\n                      onChange={this.handleChange}\n                    />\n                  </p>\n                </div>\n              </div>\n              <div className=\"ob-block row mb-3\">\n                <div className=\"col-md-8\">\n                  <div className=\"text-white text-left mb-2\">\n                    Sub systems{\" \"}\n                    {!this.state.systemAdd && (\n                      <i\n                        className=\"fas fa-plus system-down-icon round-button\"\n                        id=\"system\"\n                        onClick={e => {\n                          this.addUiToggle(e, \"system\");\n                        }}\n                      />\n                    )}\n                    {this.state.systemAdd && (\n                      <div className=\"d-flex\">\n                        {\" \"}\n                        <div className=\"bullet-line w-100 green-bullet extra-add\">\n                          <input\n                            className=\"text-input form-control text-grey adding-text\"\n                            type=\"text\"\n                            id=\"system\"\n                            ref={this.systemInput}\n                            name = 'subsystemName'\n                            value = {this.state.subsystemName}\n                            onChange = {this.addHandleChange.bind(this)}\n                            \n                          />\n                        \n                        </div>\n                        <div\n                          className=\"round-button\"\n                          onClick={e => {\n                            this.addUiToggle(e, \"system\");\n                          }}\n                        >\n                          <i className=\"fas fa-check\" onClick={this.createSubSystem.bind(this)}></i>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n\n\n                  {this.props.systemDetails.subsystemLinks\n                    ? this.props.systemDetails.subsystemLinks.map(\n                      (subsystem, i) => {\n                        return (\n                          <div key = {i} className=\"text-white text-left mb-2\">\n                            <div className=\"d-flex\">\n                              \n                              <div className=\"bullet-line text-grey green-bullet w-100\">\n                                {!this.state[`subsystem-${i}`] && (\n                                  <span>{subsystem.title}</span>\n                                )}\n\n                                {this.state[`subsystem-${i}`] && (\n                                  <>\n                                    <input\n                                      className=\"text-input form-control text-grey adding-text\"\n                                      type=\"text\"\n                                      id=\"myAnchor\"\n                                      ref={this.subsystemInput}\n                                      onChange={this.editFieldChange.bind(\n                                        this,\n                                        i,\n                                        \"subsystem\"\n                                      )}\n                                      value={this.state[`subsystem-value-${i}`]}\n                                    />\n\n                                  </>\n                                )}\n                              </div>\n\n                              {this.state[`subsystem-${i}`] && (\n                                <span className=\"action-button\">\n\n                                  <i\n                                    className=\"fas fa-check\"\n                                    onClick={this.updateEntity.bind(\n                                      this,\n                                      i,\n                                      subsystem.uri,\n                                      \"system\"\n                                    )}\n                                  ></i>\n\n                                </span>\n                              )}\n                              {!this.state[`subsystem-${i}`] && (\n                                <>\n                                  <span className=\"action-button\">\n                                    <i\n                                      className=\"fas fa-pencil-alt\"\n                                      onClick={this.editfield.bind(\n                                        this,\n                                        i,\n                                        subsystem.title,\n                                        \"subsystem\"\n                                      )}\n                                    ></i>\n                                  </span>\n                                  <span className=\"action-button\">\n                                    <i\n                                      className=\"fas fa-trash\"\n                                      onClick={this.getSubSystemId.bind(\n                                        this,\n                                        subsystem.uri\n                                      )}\n                                    ></i>\n                                  </span>\n                                </>\n                              )}\n                            </div>\n                          </div>\n\n\n                        );\n                      }\n                    )\n                    : \"\"}\n                </div>\n              </div>\n              <div className=\"ob-block row mb-3\">\n                <div className=\"col-md-8\">\n                  <div className=\"text-white text-left mb-2\">\n                    Services{\" \"}\n                    {!this.state.serviceAdd && (\n                      <i\n                        className=\"fas fa-plus system-down-icon round-button\"\n                        id=\"system\"\n                        onClick={e => {\n                          this.addUiToggle(e, \"service\");\n                        }}\n                      />\n                    )}\n                    {this.state.serviceAdd && (\n                      <div className=\"d-flex\">\n                        <div className=\"bullet-line w-100 blue-bullet extra-add\">\n                          <input\n                            className=\"text-input form-control text-grey adding-text\"\n                            type=\"text\"\n                            id=\"system\"\n                            ref={this.serviceInput}\n                            name = \"serviceName\"\n                            onChange={this.addHandleChange.bind(this)}\n                          />\n\n                        </div>\n                        <div\n                          className=\"round-button\"\n                          onClick={e => {\n                            this.addUiToggle(e, \"service\");\n                          }}\n                        >\n                          <i className=\"fas fa-check\" onClick={this.createService.bind(this)}/>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  {this.props.systemDetails.services\n                    ? this.props.systemDetails.services.map((service, i) => {\n                      return (\n                        <div className=\"text-white text-left mb-2\" key = {i}>\n                          <div className=\"d-flex\">\n                            <div className=\"bullet-line text-grey blue-bullet w-100\">\n                              {!this.state[`service-${i}`] && (\n                                <span>{service.name}</span>\n                              )}\n\n                              {this.state[`service-${i}`] && (\n                                <>\n                                  <input\n                                    className=\"text-input form-control text-grey adding-text\"\n                                    type=\"text\"\n                                    id=\"service\"\n                                    onChange={this.editFieldChange.bind(\n                                      this,\n                                      i,\n                                      \"service\"\n                                    )}\n                                    value={this.state[`service-value-${i}`]}\n                                  />\n\n                                </>\n                              )}\n                            </div>\n                            {this.state[`service-${i}`] && (\n                              <span className=\"action-button\">\n                                <i\n                                  className=\"fas fa-check\"\n                                  onClick={this.updateEntity.bind(\n                                    this,\n                                    i,\n                                    service.id,\n                                    \"service\"\n                                  )}\n                                ></i>\n                              </span>\n                            )}\n\n                            {!this.state[`service-${i}`] && (\n                              <>\n                                <span className=\"action-button\">\n                                  <i\n                                    className=\"fas fa-pencil-alt\"\n                                    onClick={this.editfield.bind(\n                                      this,\n                                      i,\n                                      service.name,\n                                      \"service\"\n                                    )}\n                                  ></i>\n                                </span>\n                                <span className=\"action-button\">\n                                  <i\n                                    className=\"fas fa-trash\"\n                                    onClick={this.deleteEntity.bind(\n                                      this,\n                                      service.id\n                                    )}\n                                  ></i>\n                                </span>\n                              </>\n                            )}\n                          </div>\n                        </div>\n\n                      );\n                    })\n                    : \"\"}\n                </div>\n              </div>\n              <div className=\"ob-block row mb-3\">\n                <div className=\"col-md-12\">\n                  <p className=\"text-white text-left\">\n                    References{\" \"}\n                    {!this.state.referenceAdd && (\n                      <i\n                        className=\"fas fa-plus system-down-icon round-button\"\n                        id=\"system\"\n                        onClick={e => {\n                          this.addUiToggle(e, \"reference\");\n                        }}\n                      />\n                    )}\n                  </p>\n\n                  {this.state.referenceAdd && (\n                    <div className=\" w-100 no-bullet extra-add mb-3\">\n                      \n                      <div className=\"text-grey\">Create new reference</div>\n\n                      <div className=\"d-flex\">\n                        <div className=\"mr-2\">\n                          <Input\n                            className=\"text-input no-border\"\n                            type=\"select\"\n                            name=\"select\"\n                            onChange={this.getSystemService.bind(this)}\n                          >\n                            <option>Systems</option>\n                            {this.state.systems\n                              ? systems.map((system, i) => {\n                                return (\n                                  <option\n                                    key={i}\n                                    value={system.name}\n                                    id={system.id}\n                                  >\n                                    {system.name}\n                                  </option>\n                                );\n                              })\n                              : \"\"}\n                          </Input>\n                        </div>\n                        <div className=\"mr-2\">\n                          <Input\n                            className=\"text-input no-border\"\n                            type=\"select\"\n                            name=\"select\"\n                            id=\"exampleSelect\"\n                            onChange={this.serviceHandleChange.bind(this)}\n                          >\n                            <option>Service</option>\n                            {this.state.servicesList\n                              ? this.state.servicesList.map((item, i) => {\n                                return (\n                                  <option key={i} value={item.id}>\n                                    {item.name}\n                                  </option>\n                                );\n                              })\n                              : \"\"}\n                          </Input>\n                        </div>\n                        <div className=\"mr-2\">\n                          <Input\n                            className=\"text-input mt-0 no-border\"\n                            type=\"text\"\n                            name=\"text\"\n                            id=\"example\"\n                            placeholder=\"Add New Reference\"\n                            onBlur={this.createReference.bind(this)}\n                            onKeyDown={this.createReference.bind(this)}\n                          />\n                        </div>\n                        <div>\n                          <div\n                            className=\"round-button mt-2\"\n                            onClick={e => {\n                              this.addUiToggle(e, \"reference\");\n                            }}\n                          >\n                            <i className=\"fas fa-check\" />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className=\"col-md-8\">\n                  {this.props.systemDetails.references\n                    ? this.props.systemDetails.references.map(\n                      (reference, i) => {\n                        return (\n                          <div className=\"text-white text-left mb-2\" key = {i}>\n                            <div className=\"d-flex\">\n                              <div className=\"bullet-line text-grey arrow-bullet w-100\">\n                                {!this.state[`reference-${i}`] && (\n                                  <span>{reference.name}</span>\n                                )}\n\n                                {this.state[`reference-${i}`] && (\n                                  <>\n                                    <input\n                                      className=\"text-input form-control text-grey adding-text\"\n                                      type=\"text\"\n                                      id=\"service\"\n                                      onChange={this.editFieldChange.bind(\n                                        this,\n                                        i,\n                                        \"reference\"\n                                      )}\n                                      value={this.state[`reference-value-${i}`]}\n                                    />\n\n                                  </>\n                                )}\n\n                              </div>\n                              {this.state[`reference-${i}`] && (\n                                <span className=\"action-button\">\n                                  <i\n                                    className=\"fas fa-check\"\n                                    onClick={this.updateEntity.bind(\n                                      this,\n                                      i,\n                                      reference.id,\n                                      \"reference\"\n                                    )}\n                                  ></i>\n                                </span>\n                              )}\n\n                              {!this.state[`reference-${i}`] && (\n                                <>\n                                  <span className=\"action-button\">\n                                    <i\n                                      className=\"fas fa-pencil-alt\"\n                                      onClick={this.editfield.bind(\n                                        this,\n                                        i,\n                                        reference.name,\n                                        \"reference\"\n                                      )}\n                                    ></i>\n                                  </span>\n                                  <span className=\"action-button\">\n                                    <i\n                                      className=\"fas fa-trash\"\n                                      onClick={this.deleteEntity.bind(\n                                        this,\n                                        reference.id\n                                      )}\n                                    ></i>\n                                  </span>\n                                </>\n                              )}\n                            </div>\n                          </div>\n\n                        );\n                      }\n                    )\n                    : \"\"}\n                </div>\n              </div>\n            </div>\n          </ModalBody>\n        </Modal>\n        <h3 className=\"text-white\">\n          System Details\n          <i\n            className=\"fas fa-times system-down-icon browser_close\"\n            onClick={() => this.close(\"systemDetail\", \"menuDetail\")}\n          />\n          <img\n              src={edit}\n              alt=\"starlify\"\n              className=\"edit\"\n            onClick={() => this.modalToggle(this, this.props.systemDetails)}\n            style={{ marginLeft: \"15px\", marginTop: \"-3px\"}}\n            />\n        </h3>\n\n        <VerticalScrollbars autoHide>\n          <div className=\"browser_wrapper\">\n            <div className=\"org-selector\">\n              <p className=\"text-white text-left\"></p>\n            </div>\n            <div className=\"ob-block row\">\n              <div className=\"col-md-6 m-b-20\">\n                <p className=\"text-white text-left\">\n                  <span id=\"system-detail-name\">\n                    {this.props.systemDetails.name}\n                   \n                  </span>\n\n                  <i\n                    className=\"fas fa-chevron-down system-down-icon\"\n                    onClick={this.toggleDescription}\n                  />\n                </p>\n              </div>\n              <div className=\"col-md-6 m-b-20\"></div>\n              <Collapse\n                isOpen={this.state.collapse}\n                className=\"systemDetailsDisc\"\n              >\n                <p className=\"text-grey\">\n                  {this.props.systemDetails.description\n                    ? this.props.systemDetails.description\n                    : \"No Description\"}\n                </p>\n              </Collapse>\n            </div>\n\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">Sub systems</p>\n              {this.props.systemDetails.subsystemLinks\n                ? this.props.systemDetails.subsystemLinks.map(\n                  (subsystem, i) => {\n                    return (\n                      <div key={i} className=\"d-flex w-100\">\n                        <div className=\"col-md-12\">\n                          <p className=\"text-grey text-left\">\n                            <span className=\"subsystemCircle\"></span>\n                            <span>{subsystem.title}</span>\n                          </p>\n                        </div>\n                      </div>\n                    );\n                  }\n                )\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">Services</p>\n              {this.props.systemDetails.services\n                ? this.props.systemDetails.services.map((services, i) => {\n                  return (\n                    <div key={services.id} className=\"d-flex w-100\">\n                      <div className=\"col-md-12\">\n                        <p className=\"text-grey text-left\">\n                          <span className=\"serviceCircle\" />\n\n                          <span id={`service-${i}`}>\n                            {services.name}\n                          \n                          </span>\n                        </p>\n                      </div>\n                    </div>\n                  );\n                })\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">References</p>\n              {this.props.systemDetails.references\n                ? this.props.systemDetails.references.map((references, i) => {\n                  return (\n                    <div key={i} className=\"d-flex w-100\">\n                      <div className=\"col-md-12\">\n                        <p className=\"text-grey text-left\">\n                          <span className=\"referenceArrow\">→</span>\n\n                          <span id={`reference-${i}`}>\n                            {references.name}{\" \"}\n                           \n                          </span>\n                        </p>\n                      </div>\n                    </div>\n                  );\n                })\n                : \"\"}\n            </div>\n          </div>\n        </VerticalScrollbars>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getSystemDetails: (modelId, systemId) => {\n      dispatch(fetchSystemDetils(modelId, systemId));\n    },\n    getSystems: modelId => {\n      dispatch(fetchModel(modelId));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeModel: state.model.modelUri,\n    activeModelId: state.model.modelId,\n    systemDetails: state.system.systemDetails,\n    type: state.system.type\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SystemDetails);\n"]},"metadata":{},"sourceType":"module"}