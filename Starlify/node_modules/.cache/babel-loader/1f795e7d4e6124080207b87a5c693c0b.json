{"ast":null,"code":"import _objectSpread from \"/Users/kirancorreya/Site/Starlify/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/SystemDetails.js\";\nimport React, { Component } from \"react\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport { fetchSystemDetils } from \"../../../store/system/systemActions\";\nimport { fetchModel } from \"../../../store/model/modelActions\";\nimport { connect } from \"react-redux\";\nimport { Collapse, Modal, ModalBody, Input, Label } from \"reactstrap\";\nimport edit from \"../../../_assets/icons/icons/edit.svg\";\nimport closeIcon from \"../../../_assets/icons/icons/exitwhite.svg\";\n\nclass SystemDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = target => {\n      this.setState(_objectSpread({}, this.state, {\n        [target]: !this.state[target]\n      }));\n    };\n\n    this.systemInput = React.createRef();\n    this.serviceInput = React.createRef();\n    this.state = {\n      collapse: true,\n      systemCollapseId: false,\n      subSystemCollapseId: false,\n      modal: false,\n      editSubSystem: false,\n      details: {},\n      formData: {\n        name: \"\",\n        description: \"\",\n        supportLevel: \"\"\n      },\n      subsystemName: \"\",\n      serviceName: \"\"\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateSystem = this.updateSystem.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addUiToggle = this.addUiToggle.bind(this);\n    this.textInput = React.createRef();\n    this.focus = this.focus.bind(this);\n  }\n\n  componentWillUpdate() {\n    this.focus();\n  }\n\n  focus() {\n    setTimeout(() => {\n      if (this.systemInput.current) {\n        this.systemInput.current.focus();\n      }\n\n      if (this.serviceInput.current) {\n        this.serviceInput.current.focus();\n      }\n    }, 500); // Explicitly focus the text input using the raw DOM API\n    // Note: we're accessing \"current\" to get the DOM node\n  } //manage add more system/flow text box to ui\n\n\n  addUiToggle(event, type) {\n    if (type === \"system\") {\n      this.setState(state => ({\n        systemAdd: !state.systemAdd\n      }));\n    } else if (type === \"service\") {\n      this.setState(state => ({\n        serviceAdd: !state.serviceAdd\n      }));\n    } else if (type === \"reference\") {\n      this.setState(state => ({\n        referenceAdd: !state.referenceAdd\n      }));\n    }\n  }\n\n  editfield(key, title, type) {\n    if (type === \"subsystem\") {\n      this.setState({\n        [\"subsystem-\" + key]: true\n      });\n      this.setState({\n        [\"subsystem-value-\" + key]: title\n      });\n    } else if (type === \"service\") {\n      this.setState({\n        [\"service-\" + key]: true\n      });\n      this.setState({\n        [\"service-value-\" + key]: title\n      });\n    } else if (type === \"reference\") {\n      this.setState({\n        [\"reference-\" + key]: true\n      });\n      this.setState({\n        [\"reference-value-\" + key]: title\n      });\n    }\n  }\n\n  editFieldChange(key, type, event) {\n    if (type === \"subsystem\") {\n      this.setState({\n        [\"subsystem-\" + key]: true\n      });\n      this.setState({\n        [\"subsystem-value-\" + key]: event.target.value\n      });\n    } else if (type === \"service\") {\n      this.setState({\n        [\"service-\" + key]: true\n      });\n      this.setState({\n        [\"service-value-\" + key]: event.target.value\n      });\n    } else if (type === \"reference\") {\n      this.setState({\n        [\"reference-\" + key]: true\n      });\n      this.setState({\n        [\"reference-value-\" + key]: event.target.value\n      });\n    }\n  }\n\n  updateEntity(key, uri, type) {\n    var value = \"\";\n    var id = \"\";\n\n    if (type === \"system\") {\n      let splitArray = uri.split(\"/\");\n      if (splitArray.length > 0) id = splitArray[4];\n      this.setState({\n        [\"subsystem-\" + key]: false\n      });\n      value = this.state[\"subsystem-value-\".concat(key)];\n    } else if (type === \"service\") {\n      this.setState({\n        [\"service-\" + key]: false\n      });\n      id = uri;\n      value = this.state[\"service-value-\".concat(key)];\n    } else if (type === \"reference\") {\n      id = uri;\n      this.setState({\n        [\"reference-\" + key]: false\n      });\n      value = this.state[\"reference-value-\".concat(key)];\n    }\n\n    fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/\").concat(type, \"/\") + id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: value\n      })\n    }).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n    });\n  }\n\n  getAllSystems() {\n    return fetch(process.env.REACT_APP_API + \"/hypermedia/network/\" + this.props.activeModelId + \"/allsystems\").then(res => res.json()).then(response => {\n      this.setState({\n        systems: response\n      });\n    }).catch(error => console.log(error));\n  } //create Sub System\n\n\n  createSubSystem() {\n    if (this.state.subsystemName) {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/network/\".concat(this.props.activeModelId, \"/system/\").concat(this.props.activeSystem, \"/system\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"/hypermedia/network/\".concat(this.props.activeModelId, \"/system/\") + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: this.state.subsystemName\n          })\n        }).then(response => {\n          this.setState({\n            subsystemName: \"\"\n          });\n          this.props.getSystems(this.props.activeModelId);\n          this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n        });\n      });\n    }\n  } //create service\n\n\n  createService(event) {\n    if (this.state.serviceName) {\n      fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/system/\").concat(this.props.activeSystem, \"/service\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/service/\") + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: this.state.serviceName\n          })\n        }).then(response => {\n          this.setState({\n            serviceName: \"\"\n          });\n          this.props.getSystems(this.props.activeModelId);\n          this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n        });\n      });\n    }\n  } //create reference\n\n\n  createReference(event) {\n    let value = event.target.value;\n\n    if ((event.key === \"Enter\" || event.type === \"blur\") && value && this.state.serviceId) {\n      event.target.value = \"\";\n      fetch(process.env.REACT_APP_API + \"\".concat(this.props.activeModel, \"/system/\").concat(this.props.activeSystem, \"/reference/\").concat(this.state.serviceId), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: value\n        })\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"\".concat(this.props.activeModel, \"/reference/\") + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: value\n          })\n        }).then(response => {\n          this.props.getSystems(this.props.activeModelId);\n          this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n          this.getAllSystems();\n        });\n      });\n    }\n  } //Delete sub system\n\n\n  getSubSystemId(Uri, type) {\n    let splitArray = Uri.split(\"/\");\n\n    if (splitArray.length > 0) {\n      this.deleteEntity(splitArray[4]);\n    }\n  } //Delete entity\n\n\n  deleteEntity(id) {\n    return fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/modeled/\").concat(id), {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n    });\n  } //get systems and services list for adding new reference\n\n\n  getSystemService(event) {\n    let parents = this.state.systems;\n    let parent = parents.filter(parent => parent.name === event.target.value);\n    if (parent) this.setState({\n      servicesList: parent[0].services\n    });\n  }\n\n  handleChange(event) {\n    const formData = this.state.formData;\n    formData[event.target.name] = event.target.value;\n    this.setState({\n      formData\n    });\n  }\n\n  serviceHandleChange(event) {\n    this.setState({\n      serviceId: event.target.value\n    });\n  }\n\n  addHandleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.activeSystem !== nextProps.activeSystem) this.props.getSystemDetails(this.props.activeModel, nextProps.activeSystem);\n  }\n\n  componentWillMount() {\n    this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n    this.getAllSystems();\n  }\n\n  updateSystem() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n    fetch(process.env.REACT_APP_API + \"/hypermedia/network/\".concat(this.props.activeModelId, \"/system/\") + this.props.systemDetails.id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state.formData)\n    }).then(response => this.props.getSystemDetails(this.props.activeModel, this.props.systemDetails.id)).catch(error => console.log(error));\n  }\n\n  toggleDescription() {\n    this.setState(state => ({\n      collapse: !state.collapse\n    }));\n  } //Closes the system details section\n\n\n  close(menu, type) {\n    this.props.close(menu, type);\n  } //control right click modal\n\n\n  modalToggle(e, data) {\n    this.setState({\n      formData: {\n        name: this.props.systemDetails.name,\n        description: this.props.systemDetails.description\n      }\n    });\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    if (data) {\n      this.setState({\n        details: {\n          description: data.description\n        }\n      });\n    }\n  }\n\n  render() {\n    var _this$state = this.state,\n        formData = _this$state.formData,\n        systems = _this$state.systems;\n    return React.createElement(\"div\", {\n      className: \"org_browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.modalToggle,\n      className: \"modal-dialog-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper system-full-edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org-selector col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-white text-left float-left\",\n      style: {\n        marginBottom: \"35px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"Edit System Details\"), React.createElement(\"button\", {\n      className: \"btn grey-btn done-btn float-right\",\n      onClick: this.updateSystem.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-check-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), \" Done\"))), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"system-detail-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      className: \"text-input\",\n      value: formData.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"description\",\n      className: \"text-input\",\n      value: formData.description || \"\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"ob-block row mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-white text-left mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, \"Sub systems\", !this.state.systemAdd && React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon round-button\",\n      id: \"system\",\n      onClick: e => {\n        this.addUiToggle(e, \"system\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    })), this.state.systemAdd && React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      className: \"bullet-line w-100 green-bullet extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"text-input form-control text-grey adding-text\",\n      type: \"text\",\n      id: \"system\",\n      ref: this.systemInput,\n      name: \"subsystemName\",\n      value: this.state.subsystemName,\n      onChange: this.addHandleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"round-button\",\n      onClick: e => {\n        this.addUiToggle(e, \"system\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      onClick: this.createSubSystem.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    })))), this.props.systemDetails.subsystemLinks ? this.props.systemDetails.subsystemLinks.map((subsystem, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"text-white text-left mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bullet-line text-grey green-bullet w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, !this.state[\"subsystem-\".concat(i)] && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, subsystem.title), this.state[\"subsystem-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"input\", {\n        className: \"text-input form-control text-grey adding-text\",\n        type: \"text\",\n        id: \"system\",\n        onChange: this.editFieldChange.bind(this, i, \"subsystem\"),\n        value: this.state[\"subsystem-value-\".concat(i)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }))), this.state[\"subsystem-\".concat(i)] && React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        onClick: this.updateEntity.bind(this, i, subsystem.uri, \"system\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      })), !this.state[\"subsystem-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pencil-alt\",\n        onClick: this.editfield.bind(this, i, subsystem.title, \"subsystem\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash-alt\",\n        onClick: this.getSubSystemId.bind(this, subsystem.uri),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      })))));\n    }) : \"\")), React.createElement(\"div\", {\n      className: \"ob-block row mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-white text-left mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, \"Services\", !this.state.serviceAdd && React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon round-button\",\n      id: \"system\",\n      onClick: e => {\n        this.addUiToggle(e, \"service\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    })), this.state.serviceAdd && React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bullet-line w-100 blue-bullet extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"text-input form-control text-grey adding-text\",\n      type: \"text\",\n      id: \"system\",\n      ref: this.serviceInput,\n      name: \"serviceName\",\n      onChange: this.addHandleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"round-button\",\n      onClick: e => {\n        this.addUiToggle(e, \"service\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      onClick: this.createService.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    })))), this.props.systemDetails.services ? this.props.systemDetails.services.map((service, i) => {\n      return React.createElement(\"div\", {\n        className: \"text-white text-left mb-2\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bullet-line text-grey green-bullet w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, !this.state[\"service-\".concat(i)] && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, service.name), this.state[\"service-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"input\", {\n        className: \"text-input form-control text-grey adding-text\",\n        type: \"text\",\n        id: \"service\",\n        onChange: this.editFieldChange.bind(this, i, \"service\"),\n        value: this.state[\"service-value-\".concat(i)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }))), this.state[\"service-\".concat(i)] && React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        onClick: this.updateEntity.bind(this, i, service.id, \"service\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      })), !this.state[\"service-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pencil-alt\",\n        onClick: this.editfield.bind(this, i, service.name, \"service\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash-alt\",\n        onClick: this.deleteEntity.bind(this, service.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      })))));\n    }) : \"\")), React.createElement(\"div\", {\n      className: \"ob-block row mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }, \"References\", \" \", !this.state.referenceAdd && React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon round-button\",\n      id: \"system\",\n      onClick: e => {\n        this.addUiToggle(e, \"reference\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668\n      },\n      __self: this\n    })), this.state.referenceAdd && React.createElement(\"div\", {\n      className: \" w-100 no-bullet extra-add mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }, \"Create new reference\"), React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"text-input no-border\",\n      type: \"select\",\n      name: \"select\",\n      onChange: this.getSystemService.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }, \"Systems\"), this.state.systems ? systems.map((system, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: system.name,\n        id: system.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694\n        },\n        __self: this\n      }, system.name);\n    }) : \"\")), React.createElement(\"div\", {\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"text-input no-border\",\n      type: \"select\",\n      name: \"select\",\n      id: \"exampleSelect\",\n      onChange: this.serviceHandleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714\n      },\n      __self: this\n    }, \"Service\"), this.state.servicesList ? this.state.servicesList.map((item, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }, item.name);\n    }) : \"\")), React.createElement(\"div\", {\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"text-input mt-0 no-border\",\n      type: \"text\",\n      name: \"text\",\n      id: \"example\",\n      placeholder: \"Add New Reference\",\n      onBlur: this.createReference.bind(this),\n      onKeyDown: this.createReference.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"round-button mt-2\",\n      onClick: e => {\n        this.addUiToggle(e, \"reference\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751\n      },\n      __self: this\n    }, this.props.systemDetails.references ? this.props.systemDetails.references.map((reference, i) => {\n      return React.createElement(\"div\", {\n        className: \"text-white text-left mb-2\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bullet-line text-grey arrow-bullet w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758\n        },\n        __self: this\n      }, !this.state[\"reference-\".concat(i)] && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760\n        },\n        __self: this\n      }, reference.name), this.state[\"reference-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"input\", {\n        className: \"text-input form-control text-grey adding-text\",\n        type: \"text\",\n        id: \"service\",\n        onChange: this.editFieldChange.bind(this, i, \"reference\"),\n        value: this.state[\"reference-value-\".concat(i)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765\n        },\n        __self: this\n      }))), this.state[\"reference-\".concat(i)] && React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        onClick: this.updateEntity.bind(this, i, reference.id, \"reference\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783\n        },\n        __self: this\n      })), !this.state[\"reference-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pencil-alt\",\n        onClick: this.editfield.bind(this, i, reference.name, \"reference\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash-alt\",\n        onClick: this.deleteEntity.bind(this, reference.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809\n        },\n        __self: this\n      })))));\n    }) : \"\"))))), React.createElement(\"h3\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-user-cog\",\n      style: {\n        fontSize: \"20px\",\n        marginRight: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832\n      },\n      __self: this\n    }), \"System Details\", React.createElement(\"img\", {\n      src: closeIcon,\n      alt: \"starlify\",\n      className: \"system-down-icon browser_close\",\n      onClick: () => this.close(\"systemDetail\", \"menuDetail\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: edit,\n      alt: \"starlify\",\n      className: \"edit\",\n      onClick: () => this.modalToggle(this, this.props.systemDetails),\n      style: {\n        marginLeft: \"15px\",\n        marginTop: \"-3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      autoHide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"text-left text-grey m-b-0 text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 856\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"system-detail-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858\n      },\n      __self: this\n    }, this.props.systemDetails.name))), React.createElement(\"div\", {\n      className: \"col-md-4 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"systemDetailsDisc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"text-left text-grey m-b-0 text-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"p\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868\n      },\n      __self: this\n    }, this.props.systemDetails.description ? this.props.systemDetails.description : \"No Description\"))), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"text-left text-grey m-b-0 text-title col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877\n      },\n      __self: this\n    }, \"Sub systems\"), this.props.systemDetails.subsystemLinks ? this.props.systemDetails.subsystemLinks.map((subsystem, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-white text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"subsystemCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 888\n        },\n        __self: this\n      }, subsystem.title))));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"text-left text-grey m-b-0 text-title col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 898\n      },\n      __self: this\n    }, \"Services\"), this.props.systemDetails.services ? this.props.systemDetails.services.map((services, i) => {\n      return React.createElement(\"div\", {\n        key: services.id,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-white text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"serviceCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"service-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909\n        },\n        __self: this\n      }, services.name))));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"text-left text-grey m-b-0 text-title col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918\n      },\n      __self: this\n    }, \"References\"), this.props.systemDetails.references ? this.props.systemDetails.references.map((references, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-white text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"referenceArrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 927\n        },\n        __self: this\n      }, \"\\u2192\"), React.createElement(\"span\", {\n        id: \"reference-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929\n        },\n        __self: this\n      }, references.name, \" \"))));\n    }) : \"\"))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getSystemDetails: (modelId, systemId) => {\n      dispatch(fetchSystemDetils(modelId, systemId));\n    },\n    getSystems: modelId => {\n      dispatch(fetchModel(modelId));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeModel: state.model.modelUri,\n    activeModelId: state.model.modelId,\n    systemDetails: state.system.systemDetails,\n    type: state.system.type\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemDetails);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/SystemDetails.js"],"names":["React","Component","VerticalScrollbars","fetchSystemDetils","fetchModel","connect","Collapse","Modal","ModalBody","Input","Label","SystemDetails","constructor","props","toggle","target","setState","state","systemInput","createRef","serviceInput","collapse","systemCollapseId","subSystemCollapseId","modal","editSubSystem","details","formData","name","description","supportLevel","subsystemName","serviceName","close","bind","toggleDescription","modalToggle","updateSystem","handleChange","addUiToggle","textInput","focus","componentWillUpdate","setTimeout","current","event","type","systemAdd","serviceAdd","referenceAdd","editfield","key","title","editFieldChange","value","updateEntity","uri","id","splitArray","split","length","fetch","process","env","REACT_APP_API","activeModelId","method","headers","body","JSON","stringify","then","response","getSystems","getSystemDetails","activeModel","activeSystem","getAllSystems","res","json","systems","catch","error","console","log","createSubSystem","responseJson","createService","createReference","serviceId","getSubSystemId","Uri","deleteEntity","getSystemService","parents","parent","filter","servicesList","services","serviceHandleChange","addHandleChange","componentWillReceiveProps","nextProps","componentWillMount","prevState","systemDetails","menu","e","data","render","marginBottom","subsystemLinks","map","subsystem","i","service","system","item","references","reference","fontSize","marginRight","closeIcon","edit","marginLeft","marginTop","mapDispatchToProps","dispatch","modelId","systemId","mapStateToProps","model","modelUri"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport { fetchSystemDetils } from \"../../../store/system/systemActions\";\nimport { fetchModel } from \"../../../store/model/modelActions\";\nimport { connect } from \"react-redux\";\nimport { Collapse, Modal, ModalBody, Input, Label } from \"reactstrap\";\nimport edit from \"../../../_assets/icons/icons/edit.svg\";\nimport closeIcon from \"../../../_assets/icons/icons/exitwhite.svg\";\n\nclass SystemDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.systemInput = React.createRef();\n    this.serviceInput = React.createRef();\n    this.state = {\n      collapse: true,\n      systemCollapseId: false,\n      subSystemCollapseId: false,\n      modal: false,\n      editSubSystem: false,\n      details: {},\n      formData: {\n        name: \"\",\n        description: \"\",\n        supportLevel: \"\"\n      },\n      subsystemName: \"\",\n      serviceName: \"\"\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateSystem = this.updateSystem.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addUiToggle = this.addUiToggle.bind(this);\n    this.textInput = React.createRef();\n    this.focus = this.focus.bind(this);\n  }\n  componentWillUpdate() {\n    this.focus();\n  }\n  focus() {\n    setTimeout(() => {\n      if (this.systemInput.current) {\n        this.systemInput.current.focus();\n      }\n      if (this.serviceInput.current) {\n        this.serviceInput.current.focus();\n      }\n    }, 500);\n\n    // Explicitly focus the text input using the raw DOM API\n    // Note: we're accessing \"current\" to get the DOM node\n  }\n\n  //manage add more system/flow text box to ui\n  addUiToggle(event, type) {\n    if (type === \"system\") {\n      this.setState(state => ({ systemAdd: !state.systemAdd }));\n    } else if (type === \"service\") {\n      this.setState(state => ({ serviceAdd: !state.serviceAdd }));\n    } else if (type === \"reference\") {\n      this.setState(state => ({ referenceAdd: !state.referenceAdd }));\n    }\n  }\n\n  editfield(key, title, type) {\n    if (type === \"subsystem\") {\n      this.setState({ [\"subsystem-\" + key]: true });\n      this.setState({ [\"subsystem-value-\" + key]: title });\n    } else if (type === \"service\") {\n      this.setState({ [\"service-\" + key]: true });\n      this.setState({ [\"service-value-\" + key]: title });\n    } else if (type === \"reference\") {\n      this.setState({ [\"reference-\" + key]: true });\n      this.setState({ [\"reference-value-\" + key]: title });\n    }\n  }\n\n  editFieldChange(key, type, event) {\n    if (type === \"subsystem\") {\n      this.setState({ [\"subsystem-\" + key]: true });\n      this.setState({ [\"subsystem-value-\" + key]: event.target.value });\n    } else if (type === \"service\") {\n      this.setState({ [\"service-\" + key]: true });\n      this.setState({ [\"service-value-\" + key]: event.target.value });\n    } else if (type === \"reference\") {\n      this.setState({ [\"reference-\" + key]: true });\n      this.setState({ [\"reference-value-\" + key]: event.target.value });\n    }\n  }\n\n  updateEntity(key, uri, type) {\n    var value = \"\";\n    var id = \"\";\n    if (type === \"system\") {\n      let splitArray = uri.split(\"/\");\n      if (splitArray.length > 0) id = splitArray[4];\n      this.setState({ [\"subsystem-\" + key]: false });\n      value = this.state[`subsystem-value-${key}`];\n    } else if (type === \"service\") {\n      this.setState({ [\"service-\" + key]: false });\n      id = uri;\n      value = this.state[`service-value-${key}`];\n    } else if (type === \"reference\") {\n      id = uri;\n      this.setState({ [\"reference-\" + key]: false });\n      value = this.state[`reference-value-${key}`];\n    }\n\n    fetch(\n      process.env.REACT_APP_API +\n        `/model/${this.props.activeModelId}/${type}/` +\n        id,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ name: value })\n      }\n    ).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(\n        this.props.activeModel,\n        this.props.activeSystem\n      );\n    });\n  }\n\n  getAllSystems() {\n    return fetch(\n      process.env.REACT_APP_API +\n        \"/hypermedia/network/\" +\n        this.props.activeModelId +\n        \"/allsystems\"\n    )\n      .then(res => res.json())\n      .then(response => {\n        this.setState({ systems: response });\n      })\n      .catch(error => console.log(error));\n  }\n\n  //create Sub System\n  createSubSystem() {\n    if (this.state.subsystemName) {\n      fetch(\n        process.env.REACT_APP_API +\n          `/hypermedia/network/${this.props.activeModelId}/system/${this.props.activeSystem}/system`,\n        { method: \"POST\", headers: { \"Content-Type\": \"application/json\" } }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          return fetch(\n            process.env.REACT_APP_API +\n              `/hypermedia/network/${this.props.activeModelId}/system/` +\n              responseJson.id,\n            {\n              method: \"PATCH\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ name: this.state.subsystemName })\n            }\n          ).then(response => {\n            this.setState({ subsystemName: \"\" });\n            this.props.getSystems(this.props.activeModelId);\n            this.props.getSystemDetails(\n              this.props.activeModel,\n              this.props.activeSystem\n            );\n          });\n        });\n    }\n  }\n\n  //create service\n  createService(event) {\n    if (this.state.serviceName) {\n      fetch(\n        process.env.REACT_APP_API +\n          `/model/${this.props.activeModelId}/system/${this.props.activeSystem}/service`,\n        { method: \"POST\", headers: { \"Content-Type\": \"application/json\" } }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          return fetch(\n            process.env.REACT_APP_API +\n              `/model/${this.props.activeModelId}/service/` +\n              responseJson.id,\n            {\n              method: \"PATCH\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ name: this.state.serviceName })\n            }\n          ).then(response => {\n            this.setState({ serviceName: \"\" });\n            this.props.getSystems(this.props.activeModelId);\n            this.props.getSystemDetails(\n              this.props.activeModel,\n              this.props.activeSystem\n            );\n          });\n        });\n    }\n  }\n\n  //create reference\n  createReference(event) {\n    let value = event.target.value;\n    if (\n      (event.key === \"Enter\" || event.type === \"blur\") &&\n      value &&\n      this.state.serviceId\n    ) {\n      event.target.value = \"\";\n      fetch(\n        process.env.REACT_APP_API +\n          `${this.props.activeModel}/system/${this.props.activeSystem}/reference/${this.state.serviceId}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ name: value })\n        }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          return fetch(\n            process.env.REACT_APP_API +\n              `${this.props.activeModel}/reference/` +\n              responseJson.id,\n\n            {\n              method: \"PATCH\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({ name: value })\n            }\n          ).then(response => {\n            this.props.getSystems(this.props.activeModelId);\n            this.props.getSystemDetails(\n              this.props.activeModel,\n              this.props.activeSystem\n            );\n            this.getAllSystems();\n          });\n        });\n    }\n  }\n\n  //Delete sub system\n  getSubSystemId(Uri, type) {\n    let splitArray = Uri.split(\"/\");\n    if (splitArray.length > 0) {\n      this.deleteEntity(splitArray[4]);\n    }\n  }\n\n  //Delete entity\n  deleteEntity(id) {\n    return fetch(\n      process.env.REACT_APP_API +\n        `/model/${this.props.activeModelId}/modeled/${id}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    ).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(\n        this.props.activeModel,\n        this.props.activeSystem\n      );\n    });\n  }\n  //get systems and services list for adding new reference\n  getSystemService(event) {\n    let parents = this.state.systems;\n    let parent = parents.filter(parent => parent.name === event.target.value);\n    if (parent) this.setState({ servicesList: parent[0].services });\n  }\n  handleChange(event) {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({\n      formData\n    });\n  }\n\n  serviceHandleChange(event) {\n    this.setState({ serviceId: event.target.value });\n  }\n\n  addHandleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  toggle = target => {\n    this.setState({\n      ...this.state,\n      [target]: !this.state[target]\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.activeSystem !== nextProps.activeSystem)\n      this.props.getSystemDetails(\n        this.props.activeModel,\n        nextProps.activeSystem\n      );\n  }\n\n  componentWillMount() {\n    this.props.getSystemDetails(\n      this.props.activeModel,\n      this.props.activeSystem\n    );\n    this.getAllSystems();\n  }\n\n  updateSystem() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n    fetch(\n      process.env.REACT_APP_API +\n        `/hypermedia/network/${this.props.activeModelId}/system/` +\n        this.props.systemDetails.id,\n      {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(this.state.formData)\n      }\n    )\n      .then(response =>\n        this.props.getSystemDetails(\n          this.props.activeModel,\n          this.props.systemDetails.id\n        )\n      )\n      .catch(error => console.log(error));\n  }\n\n  toggleDescription() {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n\n  //Closes the system details section\n  close(menu, type) {\n    this.props.close(menu, type);\n  }\n\n  //control right click modal\n  modalToggle(e, data) {\n    this.setState({\n      formData: {\n        name: this.props.systemDetails.name,\n        description: this.props.systemDetails.description\n      }\n    });\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    if (data) {\n      this.setState({\n        details: { description: data.description }\n      });\n    }\n  }\n\n  render() {\n    var { formData, systems } = this.state;\n    return (\n      <div className=\"org_browser\">\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.modalToggle}\n          className=\"modal-dialog-centered\"\n        >\n          <ModalBody>\n            <div className=\"browser_wrapper system-full-edit\">\n              <div className=\"row\">\n                <div className=\"org-selector col-md-12\">\n                  <h4\n                    className=\"text-white text-left float-left\"\n                    style={{ marginBottom: \"35px\" }}\n                  >\n                    Edit System Details\n                  </h4>\n                  <button\n                    className=\"btn grey-btn done-btn float-right\"\n                    onClick={this.updateSystem.bind(this)}\n                  >\n                    <i className=\"fas fa-check-circle\"></i> Done\n                  </button>\n                </div>\n              </div>\n              <div className=\"ob-block row\">\n                <div className=\"col-md-8 m-b-20\">\n                  <p className=\"text-white text-left\">\n                    <span id=\"system-detail-name\">\n                      <Label for=\"name\">Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"name\"\n                        className=\"text-input\"\n                        value={formData.name}\n                        onChange={this.handleChange}\n                      />\n                    </span>\n                  </p>\n\n                  <p className=\"text-white\">\n                    <Label for=\"name\">Description</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"description\"\n                      className=\"text-input\"\n                      value={formData.description || \"\"}\n                      onChange={this.handleChange}\n                    />\n                  </p>\n                </div>\n              </div>\n              <div className=\"ob-block row mb-3\">\n                <div className=\"col-md-8\">\n                  <div className=\"text-white text-left mb-2\">\n                    <h5 className=\"text-title\">\n                      Sub systems\n                      {!this.state.systemAdd && (\n                        <i\n                          className=\"fas fa-plus system-down-icon round-button\"\n                          id=\"system\"\n                          onClick={e => {\n                            this.addUiToggle(e, \"system\");\n                          }}\n                        />\n                      )}\n                    </h5>\n                    {this.state.systemAdd && (\n                      <div className=\"d-flex\">\n                        {\" \"}\n                        <div className=\"bullet-line w-100 green-bullet extra-add\">\n                          <input\n                            className=\"text-input form-control text-grey adding-text\"\n                            type=\"text\"\n                            id=\"system\"\n                            ref={this.systemInput}\n                            name=\"subsystemName\"\n                            value={this.state.subsystemName}\n                            onChange={this.addHandleChange.bind(this)}\n                          />\n                        </div>\n                        <div\n                          className=\"round-button\"\n                          onClick={e => {\n                            this.addUiToggle(e, \"system\");\n                          }}\n                        >\n                          <i\n                            className=\"fas fa-check\"\n                            onClick={this.createSubSystem.bind(this)}\n                          ></i>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  {this.props.systemDetails.subsystemLinks\n                    ? this.props.systemDetails.subsystemLinks.map(\n                        (subsystem, i) => {\n                          return (\n                            <div key={i} className=\"text-white text-left mb-2\">\n                              <div className=\"d-flex\">\n                                <div className=\"bullet-line text-grey green-bullet w-100\">\n                                  {!this.state[`subsystem-${i}`] && (\n                                    <span>{subsystem.title}</span>\n                                  )}\n\n                                  {this.state[`subsystem-${i}`] && (\n                                    <>\n                                      <input\n                                        className=\"text-input form-control text-grey adding-text\"\n                                        type=\"text\"\n                                        id=\"system\"\n                                        onChange={this.editFieldChange.bind(\n                                          this,\n                                          i,\n                                          \"subsystem\"\n                                        )}\n                                        value={\n                                          this.state[`subsystem-value-${i}`]\n                                        }\n                                      />\n                                    </>\n                                  )}\n                                </div>\n\n                                {this.state[`subsystem-${i}`] && (\n                                  <span className=\"action-button\">\n                                    <i\n                                      className=\"fas fa-check\"\n                                      onClick={this.updateEntity.bind(\n                                        this,\n                                        i,\n                                        subsystem.uri,\n                                        \"system\"\n                                      )}\n                                    ></i>\n                                  </span>\n                                )}\n                                {!this.state[`subsystem-${i}`] && (\n                                  <>\n                                    <span className=\"action-button\">\n                                      <i\n                                        className=\"fas fa-pencil-alt\"\n                                        onClick={this.editfield.bind(\n                                          this,\n                                          i,\n                                          subsystem.title,\n                                          \"subsystem\"\n                                        )}\n                                      ></i>\n                                    </span>\n                                    <span className=\"action-button\">\n                                      <i\n                                        className=\"fas fa-trash-alt\"\n                                        onClick={this.getSubSystemId.bind(\n                                          this,\n                                          subsystem.uri\n                                        )}\n                                      ></i>\n                                    </span>\n                                  </>\n                                )}\n                              </div>\n                            </div>\n                          );\n                        }\n                      )\n                    : \"\"}\n                </div>\n              </div>\n              <div className=\"ob-block row mb-3\">\n                <div className=\"col-md-8\">\n                  <div className=\"text-white text-left mb-2\">\n                    <h5 className=\"text-title\">\n                      Services\n                      {!this.state.serviceAdd && (\n                        <i\n                          className=\"fas fa-plus system-down-icon round-button\"\n                          id=\"system\"\n                          onClick={e => {\n                            this.addUiToggle(e, \"service\");\n                          }}\n                        />\n                      )}\n                    </h5>\n                    {this.state.serviceAdd && (\n                      <div className=\"d-flex\">\n                        <div className=\"bullet-line w-100 blue-bullet extra-add\">\n                          <input\n                            className=\"text-input form-control text-grey adding-text\"\n                            type=\"text\"\n                            id=\"system\"\n                            ref={this.serviceInput}\n                            name=\"serviceName\"\n                            onChange={this.addHandleChange.bind(this)}\n                          />\n                        </div>\n                        <div\n                          className=\"round-button\"\n                          onClick={e => {\n                            this.addUiToggle(e, \"service\");\n                          }}\n                        >\n                          <i\n                            className=\"fas fa-check\"\n                            onClick={this.createService.bind(this)}\n                          />\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  {this.props.systemDetails.services\n                    ? this.props.systemDetails.services.map((service, i) => {\n                        return (\n                          <div className=\"text-white text-left mb-2\" key={i}>\n                            <div className=\"d-flex\">\n                              <div className=\"bullet-line text-grey green-bullet w-100\">\n                                {!this.state[`service-${i}`] && (\n                                  <span>{service.name}</span>\n                                )}\n\n                                {this.state[`service-${i}`] && (\n                                  <>\n                                    <input\n                                      className=\"text-input form-control text-grey adding-text\"\n                                      type=\"text\"\n                                      id=\"service\"\n                                      onChange={this.editFieldChange.bind(\n                                        this,\n                                        i,\n                                        \"service\"\n                                      )}\n                                      value={this.state[`service-value-${i}`]}\n                                    />\n                                  </>\n                                )}\n                              </div>\n                              {this.state[`service-${i}`] && (\n                                <span className=\"action-button\">\n                                  <i\n                                    className=\"fas fa-check\"\n                                    onClick={this.updateEntity.bind(\n                                      this,\n                                      i,\n                                      service.id,\n                                      \"service\"\n                                    )}\n                                  ></i>\n                                </span>\n                              )}\n\n                              {!this.state[`service-${i}`] && (\n                                <>\n                                  <span className=\"action-button\">\n                                    <i\n                                      className=\"fas fa-pencil-alt\"\n                                      onClick={this.editfield.bind(\n                                        this,\n                                        i,\n                                        service.name,\n                                        \"service\"\n                                      )}\n                                    ></i>\n                                  </span>\n                                  <span className=\"action-button\">\n                                    <i\n                                      className=\"fas fa-trash-alt\"\n                                      onClick={this.deleteEntity.bind(\n                                        this,\n                                        service.id\n                                      )}\n                                    ></i>\n                                  </span>\n                                </>\n                              )}\n                            </div>\n                          </div>\n                        );\n                      })\n                    : \"\"}\n                </div>\n              </div>\n              <div className=\"ob-block row mb-3\">\n                <div className=\"col-md-12\">\n                  <h5 className=\"text-title\">\n                    References{\" \"}\n                    {!this.state.referenceAdd && (\n                      <i\n                        className=\"fas fa-plus system-down-icon round-button\"\n                        id=\"system\"\n                        onClick={e => {\n                          this.addUiToggle(e, \"reference\");\n                        }}\n                      />\n                    )}\n                  </h5>\n\n                  {this.state.referenceAdd && (\n                    <div className=\" w-100 no-bullet extra-add mb-3\">\n                      <div className=\"text-grey\">Create new reference</div>\n\n                      <div className=\"d-flex\">\n                        <div className=\"mr-2\">\n                          <Input\n                            className=\"text-input no-border\"\n                            type=\"select\"\n                            name=\"select\"\n                            onChange={this.getSystemService.bind(this)}\n                          >\n                            <option>Systems</option>\n                            {this.state.systems\n                              ? systems.map((system, i) => {\n                                  return (\n                                    <option\n                                      key={i}\n                                      value={system.name}\n                                      id={system.id}\n                                    >\n                                      {system.name}\n                                    </option>\n                                  );\n                                })\n                              : \"\"}\n                          </Input>\n                        </div>\n                        <div className=\"mr-2\">\n                          <Input\n                            className=\"text-input no-border\"\n                            type=\"select\"\n                            name=\"select\"\n                            id=\"exampleSelect\"\n                            onChange={this.serviceHandleChange.bind(this)}\n                          >\n                            <option>Service</option>\n                            {this.state.servicesList\n                              ? this.state.servicesList.map((item, i) => {\n                                  return (\n                                    <option key={i} value={item.id}>\n                                      {item.name}\n                                    </option>\n                                  );\n                                })\n                              : \"\"}\n                          </Input>\n                        </div>\n                        <div className=\"mr-2\">\n                          <Input\n                            className=\"text-input mt-0 no-border\"\n                            type=\"text\"\n                            name=\"text\"\n                            id=\"example\"\n                            placeholder=\"Add New Reference\"\n                            onBlur={this.createReference.bind(this)}\n                            onKeyDown={this.createReference.bind(this)}\n                          />\n                        </div>\n                        <div>\n                          <div\n                            className=\"round-button mt-2\"\n                            onClick={e => {\n                              this.addUiToggle(e, \"reference\");\n                            }}\n                          >\n                            <i className=\"fas fa-check\" />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className=\"col-md-8\">\n                  {this.props.systemDetails.references\n                    ? this.props.systemDetails.references.map(\n                        (reference, i) => {\n                          return (\n                            <div className=\"text-white text-left mb-2\" key={i}>\n                              <div className=\"d-flex\">\n                                <div className=\"bullet-line text-grey arrow-bullet w-100\">\n                                  {!this.state[`reference-${i}`] && (\n                                    <span>{reference.name}</span>\n                                  )}\n\n                                  {this.state[`reference-${i}`] && (\n                                    <>\n                                      <input\n                                        className=\"text-input form-control text-grey adding-text\"\n                                        type=\"text\"\n                                        id=\"service\"\n                                        onChange={this.editFieldChange.bind(\n                                          this,\n                                          i,\n                                          \"reference\"\n                                        )}\n                                        value={\n                                          this.state[`reference-value-${i}`]\n                                        }\n                                      />\n                                    </>\n                                  )}\n                                </div>\n                                {this.state[`reference-${i}`] && (\n                                  <span className=\"action-button\">\n                                    <i\n                                      className=\"fas fa-check\"\n                                      onClick={this.updateEntity.bind(\n                                        this,\n                                        i,\n                                        reference.id,\n                                        \"reference\"\n                                      )}\n                                    ></i>\n                                  </span>\n                                )}\n\n                                {!this.state[`reference-${i}`] && (\n                                  <>\n                                    <span className=\"action-button\">\n                                      <i\n                                        className=\"fas fa-pencil-alt\"\n                                        onClick={this.editfield.bind(\n                                          this,\n                                          i,\n                                          reference.name,\n                                          \"reference\"\n                                        )}\n                                      ></i>\n                                    </span>\n                                    <span className=\"action-button\">\n                                      <i\n                                        className=\"fas fa-trash-alt\"\n                                        onClick={this.deleteEntity.bind(\n                                          this,\n                                          reference.id\n                                        )}\n                                      ></i>\n                                    </span>\n                                  </>\n                                )}\n                              </div>\n                            </div>\n                          );\n                        }\n                      )\n                    : \"\"}\n                </div>\n              </div>\n            </div>\n          </ModalBody>\n        </Modal>\n\n        <h3 className=\"text-white\">\n          <i\n            className=\"fas fa-user-cog\"\n            style={{ fontSize: \"20px\", marginRight: \"15px\" }}\n          ></i>\n          System Details\n          <img\n            src={closeIcon}\n            alt=\"starlify\"\n            className=\"system-down-icon browser_close\"\n            onClick={() => this.close(\"systemDetail\", \"menuDetail\")}\n          />\n          <img\n            src={edit}\n            alt=\"starlify\"\n            className=\"edit\"\n            onClick={() => this.modalToggle(this, this.props.systemDetails)}\n            style={{ marginLeft: \"15px\", marginTop: \"-3px\" }}\n          />\n        </h3>\n\n        <VerticalScrollbars autoHide>\n          <div className=\"browser_wrapper\">\n            <div className=\"ob-block row\">\n              <div className=\"col-md-8 m-b-20\">\n                <h5 className=\"text-left text-grey m-b-0 text-title\">Name</h5>\n                <p className=\"text-white text-left\">\n                  <span id=\"system-detail-name\">\n                    {this.props.systemDetails.name}\n                  </span>\n                </p>\n              </div>\n              <div className=\"col-md-4 m-b-20\"></div>\n              <div className=\"systemDetailsDisc\">\n                <h5 className=\"text-left text-grey m-b-0 text-title\">\n                  Description\n                </h5>\n                <p className=\"text-white\">\n                  {this.props.systemDetails.description\n                    ? this.props.systemDetails.description\n                    : \"No Description\"}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"ob-block row\">\n              <h5 className=\"text-left text-grey m-b-0 text-title col-md-12\">\n                Sub systems\n              </h5>\n              {this.props.systemDetails.subsystemLinks\n                ? this.props.systemDetails.subsystemLinks.map(\n                    (subsystem, i) => {\n                      return (\n                        <div key={i} className=\"d-flex w-100\">\n                          <div className=\"col-md-12\">\n                            <p className=\"text-white text-left\">\n                              <span className=\"subsystemCircle\"></span>\n                              <span>{subsystem.title}</span>\n                            </p>\n                          </div>\n                        </div>\n                      );\n                    }\n                  )\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <h5 className=\"text-left text-grey m-b-0 text-title col-md-12\">\n                Services\n              </h5>\n              {this.props.systemDetails.services\n                ? this.props.systemDetails.services.map((services, i) => {\n                    return (\n                      <div key={services.id} className=\"d-flex w-100\">\n                        <div className=\"col-md-12\">\n                          <p className=\"text-white text-left\">\n                            <span className=\"serviceCircle\" />\n\n                            <span id={`service-${i}`}>{services.name}</span>\n                          </p>\n                        </div>\n                      </div>\n                    );\n                  })\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <h5 className=\"text-left text-grey m-b-0 text-title col-md-12\">\n                References\n              </h5>\n              {this.props.systemDetails.references\n                ? this.props.systemDetails.references.map((references, i) => {\n                    return (\n                      <div key={i} className=\"d-flex w-100\">\n                        <div className=\"col-md-12\">\n                          <p className=\"text-white text-left\">\n                            <span className=\"referenceArrow\">→</span>\n\n                            <span id={`reference-${i}`}>\n                              {references.name}{\" \"}\n                            </span>\n                          </p>\n                        </div>\n                      </div>\n                    );\n                  })\n                : \"\"}\n            </div>\n          </div>\n        </VerticalScrollbars>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getSystemDetails: (modelId, systemId) => {\n      dispatch(fetchSystemDetils(modelId, systemId));\n    },\n    getSystems: modelId => {\n      dispatch(fetchModel(modelId));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeModel: state.model.modelUri,\n    activeModelId: state.model.modelId,\n    systemDetails: state.system.systemDetails,\n    type: state.system.type\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SystemDetails);\n"]},"metadata":{},"sourceType":"module"}