{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/Systems.js\";\nimport React, { Component } from \"react\";\nimport { Collapse } from \"reactstrap\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport subsystem from \"../../../_assets/images/subsystem.png\";\nimport services from \"../../../_assets/images/services.png\";\nimport reference from \"../../../_assets/images/reference.png\";\n\nclass Systems extends Component {\n  constructor(props) {\n    super(props);\n    this.systemMenuToggle = this.systemMenuToggle.bind(this);\n    this.flowsMenuToggle = this.flowsMenuToggle.bind(this);\n    this.systemToggle = this.systemToggle.bind(this);\n    this.flowsToggle = this.flowsToggle.bind(this);\n    this.subSystemToggle = this.subSystemToggle.bind(this);\n    this.searchSystem = this.searchSystem.bind(this);\n    this.systemSelected = this.systemSelected.bind(this);\n    this.close = this.close.bind(this);\n    this.flowsSelected = this.flowsSelected.bind(this);\n    this.state = {\n      addClass: false,\n      romoveClass: false,\n      flowsCollapse: true,\n      systemsCollapse: true,\n      collapseSystem: false,\n      collapseSubSystem: false,\n      currentSystemIndex: \"\",\n      currentSubSystemIndex: \"\",\n      currentFlowIndex: \"\",\n      systemData: {\n        system: \"\"\n      },\n      showsystemDetail: false,\n      showflowDetail: false,\n      systemDetails: {},\n      flowDetails: {},\n      values: [],\n      system: [],\n      flow: [],\n      searchString: \"\",\n      ids: [],\n      search: false\n    };\n  }\n\n  componentWillMount() {\n    return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(responseJson => {\n      this.setState({\n        systemData: responseJson\n      });\n    });\n  }\n\n  createSystem() {\n    return this.state.system ? this.state.system.map((el, i) => React.createElement(\"div\", {\n      key: i,\n      className: \"extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"system\",\n      onBlur: this.handleChange.bind(this, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.removeClick.bind(this, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-times\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })))) : \"\";\n  }\n\n  createFlow() {\n    return this.state.flow ? this.state.flow.map((el, i) => React.createElement(\"div\", {\n      key: i,\n      className: \"extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"flow\",\n      onBlur: this.handleChange.bind(this, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.removeClick.bind(this, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-times\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })))) : \"\";\n  }\n\n  handleChange(i, event) {\n    let type = event.target.id;\n    let systemName = event.target.value;\n\n    if (type === \"system\") {\n      let values = [...this.state.system];\n      values[i] = event.target.value;\n      this.setState({\n        values\n      });\n      this.state.system.splice(i, 1);\n      return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/\" + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: systemName\n          })\n        }).then(response => response.json()).then(responseJson => {});\n      });\n    } else {\n      let values = [...this.state.flow];\n      values[i] = event.target.value;\n      this.setState({\n        values\n      });\n      this.state.flow.splice(i, 1);\n      return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow/\" + responseJson.id, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: systemName\n          })\n        }).then(response => response.json()).then(responseJson => {});\n      });\n    }\n  }\n\n  addClick(event) {\n    if (event.target.id === \"system\") this.setState(prevState => ({\n      system: [...prevState.system, \"\"]\n    }));else this.setState(prevState => ({\n      flow: [...prevState.flow, \"\"]\n    }));\n  }\n\n  removeClick(i) {//let value = [...this.state.values];\n    //value.splice(i, 1);\n    //this.setState({ values : value });\n    // console.log(values)\n  }\n\n  systemSelected(systemId) {\n    this.props.systemSelected(systemId);\n  }\n\n  close(type) {\n    this.props.close(type);\n  }\n\n  flowsSelected(flowId) {\n    this.props.flowsSelected(flowId);\n  }\n\n  systemMenuToggle() {\n    this.setState(state => ({\n      systemsCollapse: !state.systemsCollapse\n    }));\n  }\n\n  flowsMenuToggle() {\n    this.setState(state => ({\n      flowsCollapse: !state.flowsCollapse\n    }));\n  }\n\n  flowsToggle(flowId) {\n    //this.setState(state => ({ flowsCollapse: !state.flowsCollapse }));\n    this.flowsSelected(flowId); //this.setState({ collapse: !this.state.collapse });\n\n    if (this.state.currentFlowIndex === flowId || !this.state.showflowDetail && this.state.search) {\n      this.setState({\n        search: false\n      });\n      this.setState({\n        currentFlowIndex: 0\n      });\n    } else {\n      this.setState({\n        currentFlowIndex: flowId\n      });\n      this.setState({\n        showflowDetail: true\n      });\n      return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow/72ad974f-e4e2-41c2-8838-79ebd240f315\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        this.setState({\n          flowDetail: responseJson\n        });\n      });\n    }\n  }\n\n  systemToggle(systemId) {\n    this.systemSelected(systemId);\n    this.setState({\n      collapse: !this.state.collapse\n    });\n\n    if (this.state.currentSystemIndex === systemId || !this.state.showsystemDetail && this.state.search) {\n      this.setState({\n        search: false\n      });\n      this.setState({\n        currentSystemIndex: 0\n      }); //this.state.search = false;\n      //this.state.currentSystemIndex = 0;\n    } else {\n      this.setState({\n        currentSystemIndex: systemId\n      });\n      this.setState({\n        showsystemDetail: true\n      });\n      return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/f1dc3452-e1a5-4a4e-9ae4-5fee3b34b647\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        this.setState({\n          systemDetails: responseJson\n        });\n      });\n    }\n  }\n\n  subSystemToggle(systemId) {\n    this.setState({\n      collapseSubSystem: !this.state.collapseSubSystem\n    });\n\n    if (this.state.currentSubSystemIndex === systemId) {\n      this.setState({\n        currentSubSystemIndex: 0\n      }); //this.state.currentSubSystemIndex = 0;\n    } else {\n      this.setState({\n        currentSubSystemIndex: systemId\n      });\n    }\n  }\n\n  searchSystem(event) {\n    this.setState({\n      ids: []\n    });\n    var stringText;\n    this.setState({\n      search: true\n    });\n    var lis = [];\n    lis = document.getElementById(\"systemListing\").getElementsByTagName(\"span\");\n\n    for (var i = 0; i < lis.length; i++) {\n      stringText = lis[i].innerHTML;\n\n      if (event.currentTarget.value && stringText.includes(event.currentTarget.value)) {\n        this.state.ids.push(lis[i].id);\n      }\n    }\n\n    lis = document.getElementById(\"FlowListing\").getElementsByTagName(\"span\");\n\n    for (var j = 0; j < lis.length; j++) {\n      stringText = lis[i].innerHTML;\n\n      if (event.currentTarget.value && stringText.includes(event.currentTarget.value)) {\n        this.state.ids.push(lis[i].id);\n      }\n    }\n  }\n\n  toggle() {\n    this.setState({\n      addClass: !this.state.addClass\n    });\n  }\n\n  removeToggle() {\n    this.setState({\n      romoveClass: !this.state.romoveClass\n    });\n  }\n\n  render() {\n    let boxClass = [\"_search\"];\n\n    if (this.state.addClass) {\n      boxClass.push(\"active\");\n    }\n\n    let box1Class = [\"_search\"];\n\n    if (this.state.romoveClass) {\n      box1Class.push(\"active\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"org_browser\",\n      onClick: this.removeToggle.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Systems and Flows\", \" \", React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon browser_close\",\n      onClick: () => this.close('system'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      style: {\n        width: 350\n      },\n      autoHide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Selector\"), React.createElement(\"div\", {\n      className: (boxClass.join(\" \"), box1Class.join(\" \")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-input\",\n      onKeyUp: this.searchSystem,\n      onClick: this.toggle.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"icon icon-Search search-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"systems w-100 d-inline-block montserrat text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"system-search montserrat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-white click\",\n      style: {\n        marginBottom: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.systemMenuToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Systems\", React.createElement(\"i\", {\n      className: \"fas fa-chevron-down system-down-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    })), React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon\",\n      id: \"system\",\n      onClick: this.addClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      style: {\n        height: 220\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, this.createSystem(), React.createElement(Collapse, {\n      isOpen: this.state.systemsCollapse,\n      id: \"systemListing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, this.state.systemData.systems ? this.state.systemData.systems.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey click\",\n        onClick: () => this.systemToggle(item.id),\n        style: {\n          marginBottom: \"1rem\",\n          marginLeft: \"1rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-chevron-down system-down-icon left text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        src: subsystem,\n        alt: \"starlify\",\n        className: \"m-r-15 m-b-5 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: item.id,\n        className: this.state.ids.includes(item.id) ? \"highlight\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, item.name ? item.name : \"Empty System Name\")), React.createElement(Collapse, {\n        isOpen: this.state.currentSystemIndex === item.id || this.state.search ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, item.services ? item.services.map((service, i) => {\n        return React.createElement(\"div\", {\n          id: service.id,\n          key: service.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-grey click\",\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"3rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: services,\n          alt: \"starlify\",\n          className: \"m-r-15 m-b-5 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407\n          },\n          __self: this\n        }), service.name ? service.name : \"Empty Service Name\"));\n      }) : \"\", item.references ? item.references.map((referenceData, i) => {\n        return React.createElement(\"p\", {\n          key: referenceData.id,\n          className: \"text-grey click\",\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"3rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: reference,\n          alt: \"starlify\",\n          className: \"m-r-15 m-b-5 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431\n          },\n          __self: this\n        }), referenceData.name ? referenceData.name : \"Empty Reference Name\");\n      }) : \"\", item.subSystems ? item.subSystems.map((subSystems, i) => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-grey click\",\n          onClick: () => this.subSystemToggle(subSystems.id),\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"3rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: subsystem,\n          alt: \"starlify\",\n          className: \"m-r-15 m-b-5 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          id: subSystems.id,\n          className: this.state.ids.includes(subSystems.id) ? \"highlight\" : \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464\n          },\n          __self: this\n        }, \" \", subSystems.name ? subSystems.name : \"Empty Subsystem Name\")), React.createElement(Collapse, {\n          isOpen: this.state.currentSubSystemIndex === subSystems.id ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480\n          },\n          __self: this\n        }, subSystems.services ? subSystems.services.map((service, i) => {\n          return React.createElement(\"div\", {\n            id: service.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 493\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-grey click\",\n            style: {\n              marginBottom: \"1rem\",\n              marginLeft: \"4rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 494\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: services,\n            alt: \"starlify\",\n            className: \"m-r-15 m-b-5 \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 502\n            },\n            __self: this\n          }), service.name ? service.name : \"Empty Service Name\"));\n        }) : \"\", subSystems.references ? subSystems.references.map((references, i) => {\n          return React.createElement(\"div\", {\n            id: references.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 520\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-grey click\",\n            style: {\n              marginBottom: \"1rem\",\n              marginLeft: \"4rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 521\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: reference,\n            alt: \"starlify\",\n            className: \"m-r-15 m-b-5 \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 529\n            },\n            __self: this\n          }), references.name ? reference.name : \"Empty Reference Name\"));\n        }) : \"\"));\n      }) : \"\"));\n    }) : \"\"))), React.createElement(\"div\", {\n      className: \"flows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white click\",\n      style: {\n        marginBottom: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, \"Flows \", React.createElement(\"i\", {\n      className: \"fas fa-chevron-down system-down-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon\",\n      id: \"flows\",\n      onClick: this.addClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      style: {\n        height: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, this.createFlow(), React.createElement(Collapse, {\n      isOpen: this.state.flowsCollapse,\n      id: \"FlowListing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, this.state.systemData.flow ? this.state.systemData.flow.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey click\",\n        style: {\n          marginBottom: \"1rem\",\n          marginLeft: \"2rem\"\n        },\n        onClick: () => this.flowsToggle(item.id) //onClick={this.flowsToggle(item.id)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: item.id,\n        className: this.state.ids.includes(item.id) ? \"highlight\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, item.name ? item.name : \"Empty Flow Name\")));\n    }) : \"\")))))));\n  }\n\n}\n\nexport default Systems;","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/Systems.js"],"names":["React","Component","Collapse","VerticalScrollbars","subsystem","services","reference","Systems","constructor","props","systemMenuToggle","bind","flowsMenuToggle","systemToggle","flowsToggle","subSystemToggle","searchSystem","systemSelected","close","flowsSelected","state","addClass","romoveClass","flowsCollapse","systemsCollapse","collapseSystem","collapseSubSystem","currentSystemIndex","currentSubSystemIndex","currentFlowIndex","systemData","system","showsystemDetail","showflowDetail","systemDetails","flowDetails","values","flow","searchString","ids","search","componentWillMount","fetch","process","env","REACT_APP_API","method","headers","then","response","json","responseJson","setState","createSystem","map","el","i","handleChange","removeClick","createFlow","event","type","target","id","systemName","value","splice","body","JSON","stringify","name","addClick","prevState","systemId","flowId","flowDetail","collapse","stringText","lis","document","getElementById","getElementsByTagName","length","innerHTML","currentTarget","includes","push","j","toggle","removeToggle","render","boxClass","box1Class","width","join","marginBottom","height","systems","item","index","marginLeft","service","references","referenceData","subSystems"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Collapse } from \"reactstrap\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport subsystem from \"../../../_assets/images/subsystem.png\";\nimport services from \"../../../_assets/images/services.png\";\nimport reference from \"../../../_assets/images/reference.png\";\n\nclass Systems extends Component {\n  constructor(props) {\n    super(props);\n    this.systemMenuToggle = this.systemMenuToggle.bind(this);\n    this.flowsMenuToggle = this.flowsMenuToggle.bind(this);\n    this.systemToggle = this.systemToggle.bind(this);\n    this.flowsToggle = this.flowsToggle.bind(this);\n    this.subSystemToggle = this.subSystemToggle.bind(this);\n    this.searchSystem = this.searchSystem.bind(this);\n    this.systemSelected = this.systemSelected.bind(this);\n    this.close = this.close.bind(this);\n    this.flowsSelected = this.flowsSelected.bind(this);\n    this.state = {\n      addClass: false,\n      romoveClass: false,\n      flowsCollapse: true,\n      systemsCollapse: true,\n      collapseSystem: false,\n      collapseSubSystem: false,\n      currentSystemIndex: \"\",\n      currentSubSystemIndex: \"\",\n      currentFlowIndex: \"\",\n      systemData: { system: \"\" },\n      showsystemDetail: false,\n      showflowDetail: false,\n      systemDetails: {},\n      flowDetails: {},\n      values: [],\n      system: [],\n      flow: [],\n      searchString: \"\",\n      ids: [],\n      search: false\n    };\n  }\n\n  componentWillMount() {\n    return fetch(\n      process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c\",\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    )\n      .then(response => response.json())\n      .then(responseJson => {\n        this.setState({ systemData: responseJson });\n      });\n  }\n\n  createSystem() {\n    return this.state.system\n      ? this.state.system.map((el, i) => (\n          <div key={i} className=\"extra-add\">\n            <input\n              type=\"text\"\n              id=\"system\"\n              onBlur={this.handleChange.bind(this, i)}\n            />\n            <button type=\"button\" onClick={this.removeClick.bind(this, i)}>\n              <i class=\"fas fa-times\" />\n            </button>\n          </div>\n        ))\n      : \"\";\n  }\n\n  createFlow() {\n    return this.state.flow\n      ? this.state.flow.map((el, i) => (\n          <div key={i} className=\"extra-add\">\n            <input\n              type=\"text\"\n              id=\"flow\"\n              onBlur={this.handleChange.bind(this, i)}\n            />\n            <button type=\"button\" onClick={this.removeClick.bind(this, i)}>\n              <i class=\"fas fa-times\" />\n            </button>\n          </div>\n        ))\n      : \"\";\n  }\n\n  handleChange(i, event) {\n    let type = event.target.id;\n    let systemName = event.target.value;\n\n    if (type === \"system\") {\n      let values = [...this.state.system];\n      values[i] = event.target.value;\n      this.setState({ values });\n      this.state.system.splice(i, 1);\n      return fetch(\n        process.env.REACT_APP_API +\n          \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          return fetch(\n            process.env.REACT_APP_API +\n              \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/\" +\n              responseJson.id,\n            {\n              method: \"PATCH\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({ name: systemName })\n            }\n          )\n            .then(response => response.json())\n            .then(responseJson => {});\n        });\n    } else {\n      let values = [...this.state.flow];\n      values[i] = event.target.value;\n      this.setState({ values });\n      this.state.flow.splice(i, 1);\n      return fetch(\n        process.env.REACT_APP_API +\n          \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          return fetch(\n            process.env.REACT_APP_API +\n              \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow/\" +\n              responseJson.id,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({ name: systemName })\n            }\n          )\n            .then(response => response.json())\n            .then(responseJson => {});\n        });\n    }\n  }\n\n  addClick(event) {\n    if (event.target.id === \"system\")\n      this.setState(prevState => ({ system: [...prevState.system, \"\"] }));\n    else this.setState(prevState => ({ flow: [...prevState.flow, \"\"] }));\n  }\n\n  removeClick(i) {\n    //let value = [...this.state.values];\n    //value.splice(i, 1);\n    //this.setState({ values : value });\n    // console.log(values)\n  }\n\n  systemSelected(systemId) {\n    this.props.systemSelected(systemId);\n  }\n\n  close(type) {\n    this.props.close(type);\n  }\n\n  flowsSelected(flowId) {\n    this.props.flowsSelected(flowId);\n  }\n\n  systemMenuToggle() {\n    this.setState(state => ({ systemsCollapse: !state.systemsCollapse }));\n  }\n  flowsMenuToggle() {\n    this.setState(state => ({ flowsCollapse: !state.flowsCollapse }));\n  }\n\n  flowsToggle(flowId) {\n    //this.setState(state => ({ flowsCollapse: !state.flowsCollapse }));\n    this.flowsSelected(flowId);\n    //this.setState({ collapse: !this.state.collapse });\n    if (\n      this.state.currentFlowIndex === flowId ||\n      (!this.state.showflowDetail && this.state.search)\n    ) {\n      this.setState({search : false})\n      this.setState({currentFlowIndex : 0})\n;\n    } else {\n      this.setState({ currentFlowIndex: flowId });\n      this.setState({ showflowDetail: true });\n      return fetch(\n        process.env.REACT_APP_API +\n          \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow/72ad974f-e4e2-41c2-8838-79ebd240f315\",\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          this.setState({ flowDetail: responseJson });\n        });\n    }\n  }\n\n  systemToggle(systemId) {\n    this.systemSelected(systemId);\n    this.setState({ collapse: !this.state.collapse });\n    if (\n      this.state.currentSystemIndex === systemId ||\n      (!this.state.showsystemDetail && this.state.search)\n    ) {\n        this.setState({search : false})\n        this.setState({currentSystemIndex : 0})\n        //this.state.search = false;\n      //this.state.currentSystemIndex = 0;\n    } else {\n      this.setState({ currentSystemIndex: systemId });\n      this.setState({ showsystemDetail: true });\n      return fetch(\n        process.env.REACT_APP_API +\n          \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/f1dc3452-e1a5-4a4e-9ae4-5fee3b34b647\",\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          this.setState({ systemDetails: responseJson });\n        });\n    }\n  }\n\n  subSystemToggle(systemId) {\n    this.setState({ collapseSubSystem: !this.state.collapseSubSystem });\n    if (this.state.currentSubSystemIndex === systemId) {\n        this.setState({currentSubSystemIndex : 0})\n      //this.state.currentSubSystemIndex = 0;\n    } else {\n      this.setState({ currentSubSystemIndex: systemId });\n    }\n  }\n\n  searchSystem(event) {\n    this.setState({ids :  []})\n    var stringText;\n    this.setState({ search: true });\n    var lis = [];\n\n     lis = document\n      .getElementById(\"systemListing\")\n      .getElementsByTagName(\"span\");\n    for (var i = 0; i < lis.length; i++) {\n      stringText = lis[i].innerHTML;\n      if (\n        event.currentTarget.value &&\n        stringText.includes(event.currentTarget.value)\n      ) {\n        this.state.ids.push(lis[i].id);\n      }\n    }\n\n     lis = document\n      .getElementById(\"FlowListing\")\n      .getElementsByTagName(\"span\");\n    for (var j = 0; j < lis.length; j++) {\n      stringText = lis[i].innerHTML;\n      if (\n        event.currentTarget.value &&\n        stringText.includes(event.currentTarget.value)\n      ) {\n        this.state.ids.push(lis[i].id);\n      }\n    }\n  }\n  toggle() {\n    this.setState({ addClass: !this.state.addClass });\n  }\n  removeToggle() {\n    this.setState({ romoveClass: !this.state.romoveClass });\n  }\n  render() {\n    let boxClass = [\"_search\"];\n    if (this.state.addClass) {\n      boxClass.push(\"active\");\n    }\n    let box1Class = [\"_search\"];\n    if (this.state.romoveClass) {\n      box1Class.push(\"active\");\n    }\n    return (\n      <div className=\"org_browser\" onClick={this.removeToggle.bind(this)}>\n        <h3 className=\"text-center text-white\">\n          Systems and Flows{\" \"}\n          <i className=\"fas fa-times system-down-icon browser_close\"  onClick={() => this.close('system')}/>\n        </h3>\n        <VerticalScrollbars style={{ width: 350 }} autoHide>\n          <div className=\"browser_wrapper\">\n            <div className=\"org-selector\">\n              <p className=\"text-white text-left\">Selector</p>\n              <div className={(boxClass.join(\" \"), box1Class.join(\" \"))}>\n                <input\n                  type=\"text\"\n                  className=\"search-input\"\n                  onKeyUp={this.searchSystem}\n                  onClick={this.toggle.bind(this)}\n                />\n                <span className=\"icon icon-Search search-icon\" />\n              </div>\n              <div className=\"systems w-100 d-inline-block montserrat text-grey\">\n                <div className=\"system-search montserrat\" />\n\n                <p\n                  className=\"text-white click\"\n                  style={{ marginBottom: \"1rem\" }}\n                >\n                  <span onClick={this.systemMenuToggle}>\n                    Systems\n                    <i className=\"fas fa-chevron-down system-down-icon\" />\n                  </span>\n                  <i\n                    className=\"fas fa-plus system-down-icon\"\n                    id=\"system\"\n                    onClick={this.addClick.bind(this)}\n                  />\n                </p>\n                <VerticalScrollbars style={{ height: 220 }}>\n                  {this.createSystem()}\n\n                  <Collapse\n                    isOpen={this.state.systemsCollapse}\n                    id=\"systemListing\"\n                  >\n                    {this.state.systemData.systems\n                      ? this.state.systemData.systems.map((item, index) => {\n                          return (\n                            <div key={item.id}>\n                              <p\n                                className=\"text-grey click\"\n                                onClick={() => this.systemToggle(item.id)}\n                                style={{\n                                  marginBottom: \"1rem\",\n                                  marginLeft: \"1rem\"\n                                }}\n                              >\n                                <i className=\"fas fa-chevron-down system-down-icon left text-white\" />\n                                <img\n                                  src={subsystem}\n                                  alt=\"starlify\"\n                                  className=\"m-r-15 m-b-5 \"\n                                />\n                                <span\n                                  id={item.id}\n                                  className={\n                                    this.state.ids.includes(item.id)\n                                      ? \"highlight\"\n                                      : \"\"\n                                  }\n                                >\n                                  {item.name ? item.name : \"Empty System Name\"}\n                                </span>\n                              </p>\n                              <Collapse\n                                isOpen={\n                                  this.state.currentSystemIndex === item.id ||\n                                  this.state.search\n                                    ? true\n                                    : false\n                                }\n                              >\n                                {item.services\n                                  ? item.services.map((service, i) => {\n                                      return (\n                                        <div id={service.id} key={service.id}>\n                                          <p\n                                            className=\"text-grey click\"\n                                            style={{\n                                              marginBottom: \"1rem\",\n                                              marginLeft: \"3rem\"\n                                            }}\n                                          >\n                                            <img\n                                              src={services}\n                                              alt=\"starlify\"\n                                              className=\"m-r-15 m-b-5 \"\n                                            />\n                                            {service.name\n                                              ? service.name\n                                              : \"Empty Service Name\"}\n                                          </p>\n                                        </div>\n                                      );\n                                    })\n                                  : \"\"}\n\n                                {item.references\n                                  ? item.references.map((referenceData, i) => {\n                                      return (\n                                        <p key={referenceData.id}\n                                          className=\"text-grey click\"\n                                          style={{\n                                            marginBottom: \"1rem\",\n                                            marginLeft: \"3rem\"\n                                          }}\n                                        >\n                                          <img\n                                            src={reference}\n                                            alt=\"starlify\"\n                                            className=\"m-r-15 m-b-5 \"\n                                          />\n                                          {referenceData.name\n                                            ? referenceData.name\n                                            : \"Empty Reference Name\"}\n                                        </p>\n                                      );\n                                    })\n                                  : \"\"}\n                                {item.subSystems\n                                  ? item.subSystems.map((subSystems, i) => {\n                                      return (\n                                        <div>\n                                          <p\n                                            className=\"text-grey click\"\n                                            onClick={() =>\n                                              this.subSystemToggle(\n                                                subSystems.id\n                                              )\n                                            }\n                                            style={{\n                                              marginBottom: \"1rem\",\n                                              marginLeft: \"3rem\"\n                                            }}\n                                          >\n                                            <img\n                                              src={subsystem}\n                                              alt=\"starlify\"\n                                              className=\"m-r-15 m-b-5 \"\n                                            />\n                                            <span\n                                              id={subSystems.id}\n                                              className={\n                                                this.state.ids.includes(\n                                                  subSystems.id\n                                                )\n                                                  ? \"highlight\"\n                                                  : \"\"\n                                              }\n                                            >\n                                              {\" \"}\n                                              {subSystems.name\n                                                ? subSystems.name\n                                                : \"Empty Subsystem Name\"}\n                                            </span>\n                                          </p>\n                                          <Collapse\n                                            isOpen={\n                                              this.state\n                                                .currentSubSystemIndex ===\n                                              subSystems.id\n                                                ? true\n                                                : false\n                                            }\n                                          >\n                                            {subSystems.services\n                                              ? subSystems.services.map(\n                                                  (service, i) => {\n                                                    return (\n                                                      <div id={service.id}>\n                                                        <p\n                                                          className=\"text-grey click\"\n                                                          style={{\n                                                            marginBottom:\n                                                              \"1rem\",\n                                                            marginLeft: \"4rem\"\n                                                          }}\n                                                        >\n                                                          <img\n                                                            src={services}\n                                                            alt=\"starlify\"\n                                                            className=\"m-r-15 m-b-5 \"\n                                                          />\n                                                          {service.name\n                                                            ? service.name\n                                                            : \"Empty Service Name\"}\n                                                        </p>\n                                                      </div>\n                                                    );\n                                                  }\n                                                )\n                                              : \"\"}\n                                            {subSystems.references\n                                              ? subSystems.references.map(\n                                                  (references, i) => {\n                                                    return (\n                                                      <div id={references.id}>\n                                                        <p\n                                                          className=\"text-grey click\"\n                                                          style={{\n                                                            marginBottom:\n                                                              \"1rem\",\n                                                            marginLeft: \"4rem\"\n                                                          }}\n                                                        >\n                                                          <img\n                                                            src={reference}\n                                                            alt=\"starlify\"\n                                                            className=\"m-r-15 m-b-5 \"\n                                                          />\n                                                          {references.name\n                                                            ? reference.name\n                                                            : \"Empty Reference Name\"}\n                                                        </p>\n                                                      </div>\n                                                    );\n                                                  }\n                                                )\n                                              : \"\"}\n                                          </Collapse>\n                                        </div>\n                                      );\n                                    })\n                                  : \"\"}\n                              </Collapse>\n                            </div>\n                          );\n                        })\n                      : \"\"}\n                  </Collapse>\n                </VerticalScrollbars>\n              </div>\n              <div className=\"flows\">\n                <p\n                  className=\"text-white click\"\n                  style={{ marginBottom: \"1rem\" }}\n                >\n                  Flows <i className=\"fas fa-chevron-down system-down-icon\" />\n                  <i\n                    className=\"fas fa-plus system-down-icon\"\n                    id=\"flows\"\n                    onClick={this.addClick.bind(this)}\n                  />\n                </p>\n                <VerticalScrollbars style={{ height: 200 }}>\n                  {this.createFlow()}\n                  <Collapse isOpen={this.state.flowsCollapse} id=\"FlowListing\">\n                    {this.state.systemData.flow\n                      ? this.state.systemData.flow.map((item, index) => {\n                          return (\n                            <div key={item.id}>\n                              <p\n                                className=\"text-grey click\"\n                                style={{\n                                  marginBottom: \"1rem\",\n                                  marginLeft: \"2rem\"\n                                }}\n                                onClick={() => this.flowsToggle(item.id)}\n                                //onClick={this.flowsToggle(item.id)}\n                              >\n                                <span\n                                  id={item.id}\n                                  className={\n                                    this.state.ids.includes(item.id)\n                                      ? \"highlight\"\n                                      : \"\"\n                                  }\n                                >\n                                  {item.name ? item.name : \"Empty Flow Name\"}\n                                </span>\n                              </p>\n                            </div>\n                          );\n                        })\n                      : \"\"}\n                  </Collapse>\n                </VerticalScrollbars>\n              </div>\n            </div>\n          </div>\n        </VerticalScrollbars>\n      </div>\n    );\n  }\n}\n\nexport default Systems;\n"]},"metadata":{},"sourceType":"module"}