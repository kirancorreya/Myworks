{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/App.js\";\nimport React, { useContext, Suspense } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { UserContext } from \"./contexts/User\";\nimport { DefaultProviders } from \"./contexts\";\nimport './scss/_default.scss';\nimport PrivateRoute from \"./components/PrivateRoute\";\nconst MainPage = React.lazy(() => import('./components/pages/Main'));\nconst LoginPage = React.lazy(() => import('./components/pages/Login'));\nconst SettingsPage = React.lazy(() => import('./components/pages/Settings'));\n\nfunction DefaultRouters() {\n  return React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    component: LoginPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n}\n\nfunction AuthenticatedRouters() {\n  return React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(PrivateRoute, {\n    path: \"/Settings\",\n    component: SettingsPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/:type/:id\",\n    component: MainPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/\",\n    component: MainPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}\n\nfunction IsAuthenticated() {\n  let userContext = useContext(UserContext);\n  let _userContext$state = userContext.state,\n      state = _userContext$state === void 0 ? {} : _userContext$state;\n  let _state$authenticated = state.authenticated,\n      authenticated = _state$authenticated === void 0 ? false : _state$authenticated;\n  let Router = authenticated ? AuthenticatedRouters : DefaultRouters;\n  return React.createElement(Suspense, {\n    fallback: null,\n    maxDuration: 1500,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(HashRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Router, {\n    authenticated: authenticated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))));\n}\n\nexport default function App() {\n  return React.createElement(DefaultProviders, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(IsAuthenticated, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/App.js"],"names":["React","useContext","Suspense","HashRouter","Switch","Route","UserContext","DefaultProviders","PrivateRoute","MainPage","lazy","LoginPage","SettingsPage","DefaultRouters","AuthenticatedRouters","IsAuthenticated","userContext","state","authenticated","Router","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,KAA7B,QAA0C,kBAA1C;AACA,SAAQC,WAAR,QAA0B,iBAA1B;AACA,SAAQC,gBAAR,QAA+B,YAA/B;AACA,OAAO,sBAAP;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,MAAMC,QAAQ,GAAGT,KAAK,CAACU,IAAN,CAAW,MAAM,OAAO,yBAAP,CAAjB,CAAjB;AACA,MAAMC,SAAS,GAAGX,KAAK,CAACU,IAAN,CAAW,MAAM,OAAO,0BAAP,CAAjB,CAAlB;AACA,MAAME,YAAY,GAAGZ,KAAK,CAACU,IAAN,CAAW,MAAM,OAAO,6BAAP,CAAjB,CAArB;;AAEA,SAASG,cAAT,GAA0B;AACtB,SAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAEF,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CAAP;AAGH;;AACD,SAASG,oBAAT,GAAgC;AAC5B,SAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,SAAS,EAAEF,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAEH,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,SAAS,EAAEH,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,EAGH,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,GAAnB;AAAuB,IAAA,SAAS,EAAEA,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHG,CAAP;AAKH;;AACD,SAASM,eAAT,GAA2B;AACvB,MAAIC,WAAW,GAAGf,UAAU,CAACK,WAAD,CAA5B;AADuB,2BAEJU,WAFI,CAElBC,KAFkB;AAAA,MAElBA,KAFkB,mCAEV,EAFU;AAAA,6BAGOA,KAHP,CAGlBC,aAHkB;AAAA,MAGlBA,aAHkB,qCAGF,KAHE;AAIvB,MAAIC,MAAM,GAAID,aAAD,GAAkBJ,oBAAlB,GAAyCD,cAAtD;AACA,SAAO,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,IAApB;AAA0B,IAAA,WAAW,EAAE,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAEK,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADG,CAAP;AAOH;;AACD,eAAe,SAASE,GAAT,GAAe;AAC1B,SAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CAAP;AAGH","sourcesContent":["import React, { useContext, Suspense } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport {UserContext} from \"./contexts/User\";\nimport {DefaultProviders} from \"./contexts\";\nimport './scss/_default.scss';\nimport PrivateRoute from \"./components/PrivateRoute\";\nconst MainPage = React.lazy(() => import('./components/pages/Main'));\nconst LoginPage = React.lazy(() => import('./components/pages/Login'));\nconst SettingsPage = React.lazy(() => import('./components/pages/Settings'));\n\nfunction DefaultRouters() {\n    return <Switch>\n        <Route path='/' component={LoginPage} />\n    </Switch>;\n}\nfunction AuthenticatedRouters() {\n    return <Switch>\n        <PrivateRoute path='/Settings' component={SettingsPage} />\n        <PrivateRoute path='/:type/:id' component={MainPage} />\n        <PrivateRoute path='/' component={MainPage} />\n    </Switch>;\n}\nfunction IsAuthenticated() {\n    let userContext = useContext(UserContext);\n    let {state = {}} = userContext;\n    let {authenticated = false} = state;\n    let Router = (authenticated) ? AuthenticatedRouters : DefaultRouters;\n    return <Suspense fallback={null} maxDuration={1500}>\n        <HashRouter>\n            <Switch>\n                <Router authenticated={authenticated} />\n            </Switch>\n        </HashRouter>\n    </Suspense>\n}\nexport default function App() {\n    return <DefaultProviders>\n        <IsAuthenticated/>\n    </DefaultProviders>\n}\n"]},"metadata":{},"sourceType":"module"}