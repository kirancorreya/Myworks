{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/_partials/usermenu/Usermenu.js\";\nimport React, { Component } from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport photo from \"../../_assets/images/photo.jpg\";\nimport { connect } from \"react-redux\";\nimport { fetchModel } from \"../../store/model/modelActions\";\nimport { fetchFlows } from \"../../store/system/systemActions\";\n\nclass Usermenu extends Component {\n  constructor() {\n    super();\n\n    this.domainChange = e => {\n      this.props.onDomainSelect(e);\n\n      if (e.target.value !== \"\") {\n        this.fetchModels(e.target.value);\n      } else {\n        this.setState({\n          models: []\n        });\n      }\n    };\n\n    this.fetchModels = domainID => {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainID).then(res => res.json()).then(async domain => {\n        this.setState({\n          models: domain.links\n        });\n      });\n    };\n\n    this.fetchModels = this.fetchModels.bind(this);\n    this.state = {\n      domains: [],\n      models: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(process.env.REACT_APP_API + \"/hypermedia/domains\").then(res => res.json()).then(result => {\n      this.setState({\n        domains: result\n      });\n    });\n\n    if (this.props.domain !== \"\") {\n      this.fetchModels(this.props.domain);\n    }\n  }\n\n  render() {\n    const domains = this.state.domains;\n    const models = this.state.models;\n    return React.createElement(\"div\", {\n      className: \"usermenu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Your Profile\"), React.createElement(Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"profileSwitch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"userarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: photo,\n      alt: \"starlify\",\n      className: \"photo-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \" \", React.createElement(\"span\", {\n      className: \"name text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Name Surname\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"select-css\",\n      type: \"select\",\n      name: \"domain\",\n      onChange: this.domainChange.bind(this),\n      value: this.props.domain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Select Domain\"), domains.length !== 0 && domains.map(item => React.createElement(\"option\", {\n      key: item.id,\n      value: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, item.name))))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"select-css\",\n      type: \"select\",\n      name: \"model\",\n      onChange: this.props.onModelSelect,\n      value: this.props.model,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Select Model\"), models && models.length !== 0 && models.map(item => React.createElement(\"option\", {\n      \"data-key\": item.params.id,\n      key: item.uri,\n      value: item.uri,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, item.title))))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"text-grey no-border m-t-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon icon-Megaphone submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), \"News\"), React.createElement(\"li\", {\n      className: \"text-grey no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon icon-Layers submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), \"Subscriptions\"), React.createElement(\"li\", {\n      className: \"text-grey no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon icon-Settings submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \"Options\"), React.createElement(\"li\", {\n      className: \"text-grey no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon icon-Exit submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), \"Sign out\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain,\n    model: state.model.modelUri\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onDomainSelect: e => {\n      const action = {\n        type: \"SELECTDOMAIN\",\n        domain: e.target.value\n      };\n      dispatch(action);\n    },\n    onModelSelect: e => {\n      const selectedIndex = e.target.options.selectedIndex;\n      const modelId = e.target.options[selectedIndex].getAttribute(\"data-key\");\n      const action = {\n        type: \"SELECTMODEL\",\n        model: e.target.value,\n        modelId: modelId\n      };\n      dispatch(fetchModel(modelId));\n      dispatch(fetchFlows(modelId));\n      dispatch(action);\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Usermenu);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/_partials/usermenu/Usermenu.js"],"names":["React","Component","FormGroup","Input","photo","connect","fetchModel","fetchFlows","Usermenu","constructor","domainChange","e","props","onDomainSelect","target","value","fetchModels","setState","models","domainID","fetch","process","env","REACT_APP_API","then","res","json","domain","links","bind","state","domains","componentDidMount","result","render","length","map","item","id","name","onModelSelect","model","params","uri","title","mapStateToProps","modelUri","mapDispatchToProps","dispatch","action","type","selectedIndex","options","modelId","getAttribute"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,UAAT,QAA2B,kCAA3B;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC/BQ,EAAAA,WAAW,GAAG;AACZ;;AADY,SAoBdC,YApBc,GAoBCC,CAAC,IAAI;AAClB,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,CAA1B;;AACA,UAAIA,CAAC,CAACG,MAAF,CAASC,KAAT,KAAmB,EAAvB,EAA2B;AACzB,aAAKC,WAAL,CAAiBL,CAAC,CAACG,MAAF,CAASC,KAA1B;AACD,OAFD,MAEO;AACL,aAAKE,QAAL,CAAc;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD;AACF,KA3Ba;;AAAA,SA6BdF,WA7Bc,GA6BAG,QAAQ,IAAI;AACxBC,MAAAA,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,aAAZ,GAA4B,qBAA5B,GAAoDJ,QAArD,CAAL,CACGK,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQ,MAAMG,MAAN,IAAgB;AACpB,aAAKV,QAAL,CAAc;AAAEC,UAAAA,MAAM,EAAES,MAAM,CAACC;AAAjB,SAAd;AACD,OAJH;AAKD,KAnCa;;AAEZ,SAAKZ,WAAL,GAAmB,KAAKA,WAAL,CAAiBa,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXb,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAEDc,EAAAA,iBAAiB,GAAG;AAClBZ,IAAAA,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,aAAZ,GAA4B,qBAA7B,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQS,MAAM,IAAI;AACd,WAAKhB,QAAL,CAAc;AAAEc,QAAAA,OAAO,EAAEE;AAAX,OAAd;AACD,KAJH;;AAKA,QAAI,KAAKrB,KAAL,CAAWe,MAAX,KAAsB,EAA1B,EAA8B;AAC5B,WAAKX,WAAL,CAAiB,KAAKJ,KAAL,CAAWe,MAA5B;AACD;AACF;;AAmBDO,EAAAA,MAAM,GAAG;AACP,UAAMH,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMb,MAAM,GAAG,KAAKY,KAAL,CAAWZ,MAA1B;AACA,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAFF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEd,KAAV;AAAiB,MAAA,GAAG,EAAC,UAArB;AAAgC,MAAA,SAAS,EAAC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAC4D,GAD5D,EAEE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,QAAQ,EAAE,KAAKM,YAAL,CAAkBmB,IAAlB,CAAuB,IAAvB,CAJZ;AAKE,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWe,MALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,EAQGI,OAAO,CAACI,MAAR,KAAmB,CAAnB,IACCJ,OAAO,CAACK,GAAR,CAAYC,IAAI,IACd;AAAQ,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAlB;AAAsB,MAAA,KAAK,EAAED,IAAI,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,IADR,CADF,CATJ,CADF,CADF,CALF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,QAAQ,EAAE,KAAK3B,KAAL,CAAW4B,aAJvB;AAKE,MAAA,KAAK,EAAE,KAAK5B,KAAL,CAAW6B,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,EAQGvB,MAAM,IACLA,MAAM,CAACiB,MAAP,KAAkB,CADnB,IAECjB,MAAM,CAACkB,GAAP,CAAWC,IAAI,IACb;AACE,kBAAUA,IAAI,CAACK,MAAL,CAAYJ,EADxB;AAEE,MAAA,GAAG,EAAED,IAAI,CAACM,GAFZ;AAGE,MAAA,KAAK,EAAEN,IAAI,CAACM,GAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGN,IAAI,CAACO,KALR,CADF,CAVJ,CADF,CADF,CAxBF,EAgDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,kCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,SADF,EAKE;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,kBALF,EASE;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,iCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,YATF,EAaE;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,aAbF,CAhDF,CAVF,CADF;AAgFD;;AAzH8B;;AA4HjC,SAASC,eAAT,CAAyBf,KAAzB,EAAgC;AAC9B,SAAO;AACLH,IAAAA,MAAM,EAAEG,KAAK,CAACW,KAAN,CAAYd,MADf;AAELc,IAAAA,KAAK,EAAEX,KAAK,CAACW,KAAN,CAAYK;AAFd,GAAP;AAID;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLnC,IAAAA,cAAc,EAAEF,CAAC,IAAI;AACnB,YAAMsC,MAAM,GAAG;AAAEC,QAAAA,IAAI,EAAE,cAAR;AAAwBvB,QAAAA,MAAM,EAAEhB,CAAC,CAACG,MAAF,CAASC;AAAzC,OAAf;AACAiC,MAAAA,QAAQ,CAACC,MAAD,CAAR;AACD,KAJI;AAMLT,IAAAA,aAAa,EAAE7B,CAAC,IAAI;AAClB,YAAMwC,aAAa,GAAGxC,CAAC,CAACG,MAAF,CAASsC,OAAT,CAAiBD,aAAvC;AACA,YAAME,OAAO,GAAG1C,CAAC,CAACG,MAAF,CAASsC,OAAT,CAAiBD,aAAjB,EAAgCG,YAAhC,CAA6C,UAA7C,CAAhB;AACA,YAAML,MAAM,GAAG;AACbC,QAAAA,IAAI,EAAE,aADO;AAEbT,QAAAA,KAAK,EAAE9B,CAAC,CAACG,MAAF,CAASC,KAFH;AAGbsC,QAAAA,OAAO,EAAEA;AAHI,OAAf;AAKAL,MAAAA,QAAQ,CAAC1C,UAAU,CAAC+C,OAAD,CAAX,CAAR;AACAL,MAAAA,QAAQ,CAACzC,UAAU,CAAC8C,OAAD,CAAX,CAAR;AACAL,MAAAA,QAAQ,CAACC,MAAD,CAAR;AACD;AAjBI,GAAP;AAmBD;;AAED,eAAe5C,OAAO,CACpBwC,eADoB,EAEpBE,kBAFoB,CAAP,CAGbvC,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport photo from \"../../_assets/images/photo.jpg\";\nimport { connect } from \"react-redux\";\nimport { fetchModel } from \"../../store/model/modelActions\";\nimport { fetchFlows } from \"../../store/system/systemActions\";\n\nclass Usermenu extends Component {\n  constructor() {\n    super();\n    this.fetchModels = this.fetchModels.bind(this);\n    this.state = {\n      domains: [],\n      models: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(process.env.REACT_APP_API + \"/hypermedia/domains\")\n      .then(res => res.json())\n      .then(result => {\n        this.setState({ domains: result });\n      });\n    if (this.props.domain !== \"\") {\n      this.fetchModels(this.props.domain);\n    }\n  }\n\n  domainChange = e => {\n    this.props.onDomainSelect(e);\n    if (e.target.value !== \"\") {\n      this.fetchModels(e.target.value);\n    } else {\n      this.setState({ models: [] });\n    }\n  };\n\n  fetchModels = domainID => {\n    fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainID)\n      .then(res => res.json())\n      .then(async domain => {\n        this.setState({ models: domain.links });\n      });\n  };\n\n  render() {\n    const domains = this.state.domains;\n    const models = this.state.models;\n    return (\n      <div className=\"usermenu\">\n        <Row>\n          <Col md=\"6\">Your Profile</Col>\n          <Col md=\"6\">\n            <ul className=\"profileSwitch\">\n              <li></li>\n              <li></li>\n            </ul>\n          </Col>\n        </Row>\n        <ul>\n          <li className=\"userarea\">\n            <img src={photo} alt=\"starlify\" className=\"photo-icon\" />{\" \"}\n            <span className=\"name text-white\">Name Surname</span>\n          </li>\n          <li>\n            <FormGroup>\n              <Input\n                className=\"select-css\"\n                type=\"select\"\n                name=\"domain\"\n                onChange={this.domainChange.bind(this)}\n                value={this.props.domain}\n              >\n                <option value=\"\">Select Domain</option>\n                {domains.length !== 0 &&\n                  domains.map(item => (\n                    <option key={item.id} value={item.id}>\n                      {item.name}\n                    </option>\n                  ))}\n              </Input>\n            </FormGroup>\n          </li>\n          <li>\n            <FormGroup>\n              <Input\n                className=\"select-css\"\n                type=\"select\"\n                name=\"model\"\n                onChange={this.props.onModelSelect}\n                value={this.props.model}\n              >\n                <option value=\"\">Select Model</option>\n                {models &&\n                  models.length !== 0 &&\n                  models.map(item => (\n                    <option\n                      data-key={item.params.id}\n                      key={item.uri}\n                      value={item.uri}\n                    >\n                      {item.title}\n                    </option>\n                  ))}\n              </Input>\n            </FormGroup>\n          </li>\n          <ul>\n            <li className=\"text-grey no-border m-t-15\">\n              <span className=\"icon icon-Megaphone submenu-icon\" />\n              News\n            </li>\n            <li className=\"text-grey no-border\">\n              <span className=\"icon icon-Layers submenu-icon\" />\n              Subscriptions\n            </li>\n            <li className=\"text-grey no-border\">\n              <span className=\"icon icon-Settings submenu-icon\" />\n              Options\n            </li>\n            <li className=\"text-grey no-border\">\n              <span className=\"icon icon-Exit submenu-icon\" />\n              Sign out\n            </li>\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain,\n    model: state.model.modelUri\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onDomainSelect: e => {\n      const action = { type: \"SELECTDOMAIN\", domain: e.target.value };\n      dispatch(action);\n    },\n\n    onModelSelect: e => {\n      const selectedIndex = e.target.options.selectedIndex;\n      const modelId = e.target.options[selectedIndex].getAttribute(\"data-key\");\n      const action = {\n        type: \"SELECTMODEL\",\n        model: e.target.value,\n        modelId: modelId\n      };\n      dispatch(fetchModel(modelId));\n      dispatch(fetchFlows(modelId));\n      dispatch(action);\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Usermenu);\n"]},"metadata":{},"sourceType":"module"}