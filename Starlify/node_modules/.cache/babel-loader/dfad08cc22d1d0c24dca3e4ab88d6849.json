{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/Userblock/Userblock.js\";\nimport React, { Component } from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport photo from \"../../../_assets/images/photo.jpg\";\nimport { connect } from 'react-redux';\nimport { fetchModel } from '../../../store/model/modelActions';\n\nclass Userblock extends Component {\n  constructor() {\n    super();\n\n    this.domainChange = e => {\n      this.props.onDomainSelect(e);\n\n      if (e.target.value !== \"\") {\n        this.fetchModels(e.target.value);\n      } else {\n        this.setState({\n          models: []\n        });\n      }\n    };\n\n    this.fetchModels = domainID => {\n      fetch(process.env.REACT_APP_API + \"/domain/\" + domainID).then(res => res.json()).then(async domain => {\n        this.setState({\n          models: domain.links\n        });\n      });\n    };\n\n    this.fetchModels = this.fetchModels.bind(this);\n    this.state = {\n      domains: [],\n      models: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(process.env.REACT_APP_API + \"/domain\").then(res => res.json()).then(async domains => {\n      var domainJsn = [];\n\n      for (let i = 0; i < domains.length; i++) {\n        const domainID = domains[i];\n        await fetch(process.env.REACT_APP_API + \"/domain/\" + domainID).then(res => res.json()).then(domain => {\n          domainJsn.push(domain);\n        });\n      }\n\n      this.setState({\n        domains: domainJsn\n      });\n    });\n\n    if (this.props.domain !== \"\") {\n      this.fetchModels(this.props.domain);\n    }\n  }\n\n  render() {\n    const domains = this.state.domains;\n    const models = this.state.models;\n    return React.createElement(\"div\", {\n      className: \"usermenu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"userarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: photo,\n      alt: \"starlify\",\n      className: \"photo-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \" \", React.createElement(\"span\", {\n      className: \"name text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Name Surname\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"domain\",\n      onChange: this.domainChange.bind(this),\n      value: this.props.domain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Select Domain\"), domains.map(item => React.createElement(\"option\", {\n      key: item.id,\n      value: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, item.name))))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"model\",\n      onChange: this.props.onModelSelect,\n      value: this.props.model,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Select Model\"), models.map(item => React.createElement(\"option\", {\n      key: item.uri,\n      value: item.uri,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, item.title))))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"text-grey no-border m-t-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon icon-Megaphone submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \"News\"), React.createElement(\"li\", {\n      className: \"text-grey no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon icon-Layers submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), \"Subscriptions\"), React.createElement(\"li\", {\n      className: \"text-grey no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon icon-Settings submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), \"Options\"), React.createElement(\"li\", {\n      className: \"text-grey no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon icon-Exit submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), \"Sign out\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain,\n    model: state.model.modelUri\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onDomainSelect: e => {\n      const action = {\n        type: \"SELECTDOMAIN\",\n        domain: e.target.value\n      };\n      dispatch(action);\n    },\n    onModelSelect: e => {\n      const action = {\n        type: \"SELECTMODEL\",\n        model: e.target.value\n      };\n      dispatch(fetchModel(e.target.value));\n      dispatch(action);\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Userblock);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/Userblock/Userblock.js"],"names":["React","Component","FormGroup","Input","photo","connect","fetchModel","Userblock","constructor","domainChange","e","props","onDomainSelect","target","value","fetchModels","setState","models","domainID","fetch","process","env","REACT_APP_API","then","res","json","domain","links","bind","state","domains","componentDidMount","domainJsn","i","length","push","render","map","item","id","name","onModelSelect","model","uri","title","mapStateToProps","modelUri","mapDispatchToProps","dispatch","action","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport photo from \"../../../_assets/images/photo.jpg\";\nimport { connect } from 'react-redux';\nimport { fetchModel } from '../../../store/model/modelActions'\n\nclass Userblock extends Component {\n\n  constructor(){\n    super();\n    this.fetchModels = this.fetchModels.bind(this);\n    this.state = {\n      domains: [],\n      models: []\n    }\n  }\n  \n  componentDidMount(){\n    fetch(process.env.REACT_APP_API + \"/domain\")\n    .then(res => res.json())\n    .then(async (domains) => {\n      var domainJsn = [];\n      for (let i = 0; i < domains.length; i++) {\n        const domainID = domains[i];\n        await fetch(process.env.REACT_APP_API + \"/domain/\" + domainID)\n        .then(res => res.json())\n        .then((domain) => {\n          domainJsn.push(domain);\n        })\n      }\n      this.setState({domains: domainJsn});\n    });\n\n    if(this.props.domain !== \"\"){\n      this.fetchModels(this.props.domain);\n    }\n\n  }\n\n  domainChange = (e) => {\n    this.props.onDomainSelect(e);\n    if(e.target.value !== \"\"){\n      this.fetchModels(e.target.value);\n    }else{\n      this.setState({models: []});\n    }\n  }\n\n  fetchModels = (domainID) =>{\n    fetch(process.env.REACT_APP_API + \"/domain/\" + domainID)\n    .then(res => res.json())\n    .then(async (domain) => {\n      this.setState({models: domain.links});\n    });\n  }\n\n  render() {\n    const domains = this.state.domains;\n    const models = this.state.models;    \n    return (\n      <div className=\"usermenu\">\n        <ul>\n          <li className=\"userarea\">\n            <img src={photo} alt=\"starlify\" className=\"photo-icon\" />{\" \"}\n            <span className=\"name text-white\">Name Surname</span>\n          </li>\n          <li>\n            <FormGroup>\n              <Input type=\"select\" name=\"domain\" onChange={this.domainChange.bind(this)} value={this.props.domain}>\n                <option value=\"\">Select Domain</option>\n                {domains.map(item => (\n                  <option key={item.id} value={item.id}>{item.name}</option>\n                ))}\n              </Input>\n            </FormGroup>\n          </li>\n          <li>\n            <FormGroup>\n              <Input type=\"select\" name=\"model\" onChange={this.props.onModelSelect} value={this.props.model}>\n                <option value=\"\">Select Model</option>\n                {models.map((item) => (\n                  <option key={item.uri} value={item.uri}>{item.title}</option>\n                ))}\n              </Input>\n            </FormGroup>\n          </li>\n          <ul>\n            <li className=\"text-grey no-border m-t-15\">\n              <span className=\"icon icon-Megaphone submenu-icon\" />\n              News\n            </li>\n            <li className=\"text-grey no-border\">\n              <span className=\"icon icon-Layers submenu-icon\" />\n              Subscriptions\n            </li>\n            <li className=\"text-grey no-border\">\n              <span className=\"icon icon-Settings submenu-icon\" />\n              Options\n            </li>\n            <li className=\"text-grey no-border\">\n              <span className=\"icon icon-Exit submenu-icon\" />\n              Sign out\n            </li>\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state){  \n  return{\n    domain: state.model.domain,\n    model: state.model.modelUri\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onDomainSelect: (e) => {\n        const action = { type: \"SELECTDOMAIN\", domain: e.target.value };\n        dispatch(action);\n    },\n\n    onModelSelect: (e) => {\n      const action = { type: \"SELECTMODEL\", model: e.target.value };\n      dispatch(fetchModel(e.target.value));\n      dispatch(action);\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Userblock);"]},"metadata":{},"sourceType":"module"}