{"ast":null,"code":"module.exports = InsertStack;\n/**\n * Our implementation of QuadTree is non-recursive to avoid GC hit\n * This data structure represent stack of elements\n * which we are trying to insert into quad tree.\n */\n\nfunction InsertStack() {\n  this.stack = [];\n  this.popIdx = 0;\n}\n\nInsertStack.prototype = {\n  isEmpty: function () {\n    return this.popIdx === 0;\n  },\n  push: function (node, body) {\n    var item = this.stack[this.popIdx];\n\n    if (!item) {\n      // we are trying to avoid memory pressure: create new element\n      // only when absolutely necessary\n      this.stack[this.popIdx] = new InsertStackElement(node, body);\n    } else {\n      item.node = node;\n      item.body = body;\n    }\n\n    ++this.popIdx;\n  },\n  pop: function () {\n    if (this.popIdx > 0) {\n      return this.stack[--this.popIdx];\n    }\n  },\n  reset: function () {\n    this.popIdx = 0;\n  }\n};\n\nfunction InsertStackElement(node, body) {\n  this.node = node; // QuadTree node\n\n  this.body = body; // physical body which needs to be inserted to node\n}","map":null,"metadata":{},"sourceType":"script"}