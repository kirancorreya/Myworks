{"ast":null,"code":"import _slicedToArray from \"/Users/kirancorreya/Site/Starlify/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/components/Profile.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { DomainContext, ModelContext, UserContext } from \"../contexts\";\nimport '../scss/components/Profile.scss';\nimport useBooleanState from \"../hooks/useBooleanState\";\nimport fetchJSONDataFromURL from \"../lib/utilities/fetchJSONDataFromURL\";\nimport { ReactComponent as NewsIcon } from \"@svgr/webpack?-svgo,+ref!./Menu/inbox.svg\";\nimport { ReactComponent as SubscriptionIcon } from \"@svgr/webpack?-svgo,+ref!./Menu/inbox.svg\";\nimport { ReactComponent as OptionsIcon } from \"@svgr/webpack?-svgo,+ref!./Menu/inbox.svg\";\nimport { ReactComponent as SignOutIcon } from \"@svgr/webpack?-svgo,+ref!./Menu/inbox.svg\";\n\nfunction ChooseModel(props) {\n  const _props$onChange = props.onChange,\n        onChange = _props$onChange === void 0 ? () => {} : _props$onChange,\n        _props$defaultValue = props.defaultValue,\n        defaultValue = _props$defaultValue === void 0 ? '' : _props$defaultValue,\n        _props$domain = props.domain,\n        domain = _props$domain === void 0 ? '' : _props$domain;\n\n  let _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      options = _useState2[0],\n      setOptions = _useState2[1];\n\n  const onChangeSelect = e => {\n    let option = options.find(option => option.model === e.target.value);\n\n    if (!option) {\n      onChange({\n        model: undefined\n      });\n      return;\n    }\n\n    console.log('Selected model', option);\n    onChange(option);\n  };\n\n  useEffect(() => {\n    if (!domain) {\n      setOptions([]);\n      return;\n    }\n\n    (async function () {\n      try {\n        let url = \"/starlify/resources/domain/\".concat(domain);\n        let response = await fetch(url);\n        let data = await response.json();\n        let _data$landscapeModels = data.landscapeModels,\n            newCustomers = _data$landscapeModels === void 0 ? [] : _data$landscapeModels;\n        setOptions(newCustomers);\n      } catch (e) {\n        console.info(\"Can't fetch customers right now\");\n      }\n    })();\n  }, [0, domain]);\n\n  if (options.length === 0) {\n    return null;\n  }\n\n  const $options = options.map((option, key) => {\n    return React.createElement(\"option\", {\n      key: key,\n      value: option.model,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, option.name);\n  });\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    onChange: onChangeSelect,\n    defaultValue: defaultValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Model\"), $options));\n}\n\nfunction ChooseSystem(props) {\n  const _props$onChange2 = props.onChange,\n        onChange = _props$onChange2 === void 0 ? () => {} : _props$onChange2,\n        _props$model = props.model,\n        model = _props$model === void 0 ? '' : _props$model,\n        _props$defaultValue2 = props.defaultValue,\n        defaultValue = _props$defaultValue2 === void 0 ? '' : _props$defaultValue2;\n\n  let _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      options = _useState4[0],\n      setOptions = _useState4[1];\n\n  const onChangeSelect = e => {\n    let option = options.find(option => option.model === e.target.value);\n\n    if (!option) {\n      return;\n    }\n\n    console.log('Selected system', option);\n    onChange(option);\n  };\n\n  useEffect(() => {\n    if (!model) {\n      setOptions([]);\n      return;\n    }\n\n    (async function () {\n      try {\n        let url = \"/starlify/resources/model/\".concat(model);\n        let response = await fetchJSONDataFromURL(url);\n        let _response$topLevelSys = response.topLevelSystems,\n            newSystemRows = _response$topLevelSys === void 0 ? [] : _response$topLevelSys;\n        setOptions(newSystemRows);\n      } catch (e) {}\n    })();\n  }, [0, model]);\n\n  if (options.length === 0) {\n    return null;\n  }\n\n  const $options = options.map((option, key) => {\n    return React.createElement(\"option\", {\n      key: key,\n      value: option.model,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, option.name);\n  });\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    onChange: onChangeSelect,\n    defaultValue: defaultValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"System\"), $options));\n}\n\nfunction ChooseDomain(props) {\n  const _props$onChange3 = props.onChange,\n        onChange = _props$onChange3 === void 0 ? () => {} : _props$onChange3,\n        _props$defaultValue3 = props.defaultValue,\n        defaultValue = _props$defaultValue3 === void 0 ? '' : _props$defaultValue3;\n\n  let _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      options = _useState6[0],\n      setOptions = _useState6[1];\n\n  const onChangeSelect = e => {\n    let option = options.find(option => option.domain === e.target.value);\n\n    if (!option) {\n      onChange({\n        domain: undefined\n      });\n      return;\n    }\n\n    console.log('Selected domain', option);\n    onChange(option);\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        let url = \"/starlify/resources/administration/domains\";\n        let domains = await fetchJSONDataFromURL(url);\n        setOptions(domains);\n      } catch (e) {//alert(e.message);\n      }\n    })();\n  }, []);\n\n  if (options.length === 0) {\n    return null;\n  }\n\n  const $options = options.map((option, key) => {\n    return React.createElement(\"option\", {\n      key: key,\n      value: option.domain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, option.name);\n  });\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    onChange: onChangeSelect,\n    defaultValue: defaultValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Domain\"), $options));\n}\n\nexport default function Profile() {\n  let domainContext = useContext(DomainContext);\n  let modelContext = useContext(ModelContext);\n  let userContext = useContext(UserContext);\n  let user = userContext.state.user;\n\n  let _useBooleanState = useBooleanState(false),\n      _useBooleanState2 = _slicedToArray(_useBooleanState, 3),\n      open = _useBooleanState2[0],\n      _ = _useBooleanState2[1],\n      toggleOpen = _useBooleanState2[2];\n\n  const onClickLogout = e => {\n    userContext.setAuthenticated(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: 'profile-container',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'profile',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, user.name, React.createElement(\"img\", {\n    src: user.image,\n    alt: \"Avatar\",\n    width: 40,\n    height: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, modelContext.state.name, \"@\", domainContext.state.name), React.createElement(\"i\", {\n    className: 'fas fa-caret-down __clickable',\n    onClick: () => toggleOpen(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    role: \"menu\",\n    \"data-hidden\": !open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: user.image,\n    alt: \"Avatar\",\n    width: 50,\n    height: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), user.name), React.createElement(\"div\", {\n    className: 'quick-settings',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(ChooseDomain, {\n    defaultValue: domainContext.state.domain,\n    onChange: domainContext.setDomain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(ChooseModel, {\n    defaultValue: modelContext.state.model,\n    domain: domainContext.state.domain,\n    onChange: modelContext.setModel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(NewsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), \"News\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(SubscriptionIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), \"Subscriptions\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(OptionsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), \"Options\"), React.createElement(\"li\", {\n    onClick: onClickLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(SignOutIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), \"Sign out\")))));\n}","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/components/Profile.js"],"names":["React","useContext","useEffect","useState","DomainContext","ModelContext","UserContext","useBooleanState","fetchJSONDataFromURL","ChooseModel","props","onChange","defaultValue","domain","options","setOptions","onChangeSelect","e","option","find","model","target","value","undefined","console","log","url","response","fetch","data","json","landscapeModels","newCustomers","info","length","$options","map","key","name","ChooseSystem","topLevelSystems","newSystemRows","ChooseDomain","domains","Profile","domainContext","modelContext","userContext","user","state","open","_","toggleOpen","onClickLogout","setAuthenticated","image","setDomain","setModel"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {DomainContext, ModelContext, UserContext} from \"../contexts\";\r\nimport '../scss/components/Profile.scss';\r\nimport useBooleanState from \"../hooks/useBooleanState\";\r\nimport fetchJSONDataFromURL from \"../lib/utilities/fetchJSONDataFromURL\";\r\nimport {ReactComponent as NewsIcon} from \"./Menu/inbox.svg\";\r\nimport {ReactComponent as SubscriptionIcon} from \"./Menu/inbox.svg\";\r\nimport {ReactComponent as OptionsIcon} from \"./Menu/inbox.svg\";\r\nimport {ReactComponent as SignOutIcon} from \"./Menu/inbox.svg\";\r\n\r\nfunction ChooseModel(props) {\r\n    const {onChange = () => {}, defaultValue = '', domain = ''} = props;\r\n    let [options, setOptions] = useState([]);\r\n\r\n    const onChangeSelect = e => {\r\n        let option = options.find(option => option.model === e.target.value);\r\n        if (!option) {\r\n            onChange({\r\n                model: undefined\r\n            });\r\n            return;\r\n        }\r\n        console.log('Selected model', option);\r\n        onChange(option);\r\n    }\r\n    useEffect(() => {\r\n        if (!domain) {\r\n            setOptions([]);\r\n            return;\r\n        }\r\n        (async function() {\r\n            try {\r\n                let url = `/starlify/resources/domain/${domain}`;\r\n                let response = await fetch(url);\r\n                let data = await response.json();\r\n\r\n                let {landscapeModels: newCustomers = []} = data;\r\n                setOptions(newCustomers);\r\n            } catch(e) {\r\n                console.info(`Can't fetch customers right now`);\r\n            }\r\n        }());\r\n    }, [0, domain]);\r\n    if (options.length === 0) {\r\n        return null;\r\n    }\r\n    const $options = options.map((option, key) => {\r\n        return <option key={key} value={option.model}>{option.name}</option>\r\n    });\r\n    return <React.Fragment>\r\n        <select onChange={onChangeSelect} defaultValue={defaultValue}>\r\n            <option value={undefined}>Model</option>\r\n            {$options}\r\n        </select>\r\n    </React.Fragment>\r\n}\r\nfunction ChooseSystem(props) {\r\n    const {onChange = () => {}, model = '', defaultValue = ''} = props;\r\n    let [options, setOptions] = useState([]);\r\n\r\n    const onChangeSelect = e => {\r\n        let option = options.find(option => option.model === e.target.value);\r\n        if (!option) {\r\n            return;\r\n        }\r\n        console.log('Selected system', option);\r\n        onChange(option);\r\n    };\r\n    useEffect(() => {\r\n        if (!model)  {\r\n            setOptions([]);\r\n            return;\r\n        }\r\n        (async function() {\r\n            try {\r\n                let url = `/starlify/resources/model/${model}`;\r\n                let response = await fetchJSONDataFromURL(url);\r\n                let {topLevelSystems: newSystemRows = []} = response;\r\n                setOptions(newSystemRows);\r\n            } catch (e) {\r\n\r\n            }\r\n        }());\r\n    }, [0, model]);\r\n    if (options.length === 0) {\r\n        return null;\r\n    }\r\n    const $options = options.map((option, key) => {\r\n        return <option key={key} value={option.model}>{option.name}</option>\r\n    });\r\n    return <React.Fragment>\r\n        <select onChange={onChangeSelect} defaultValue={defaultValue}>\r\n            <option value={undefined}>System</option>\r\n            {$options}\r\n        </select>\r\n    </React.Fragment>\r\n}\r\nfunction ChooseDomain(props) {\r\n    const {onChange = () => {}, defaultValue = ''} = props;\r\n    let [options, setOptions] = useState([]);\r\n\r\n    const onChangeSelect = e => {\r\n        let option = options.find(option => option.domain === e.target.value);\r\n        if (!option) {\r\n            onChange({\r\n                domain: undefined\r\n            });\r\n            return;\r\n        }\r\n        console.log('Selected domain', option);\r\n        onChange(option);\r\n    };\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                let url = `/starlify/resources/administration/domains`;\r\n                let domains = await fetchJSONDataFromURL(url);\r\n                setOptions(domains);\r\n            } catch (e) {\r\n                //alert(e.message);\r\n            }\r\n        })();\r\n    }, []);\r\n    if (options.length === 0) {\r\n        return null;\r\n    }\r\n    const $options = options.map((option, key) => {\r\n        return <option key={key} value={option.domain}>{option.name}</option>\r\n    });\r\n    return <React.Fragment>\r\n        <select onChange={onChangeSelect} defaultValue={defaultValue}>\r\n            <option value={undefined}>Domain</option>\r\n            {$options}\r\n        </select>\r\n    </React.Fragment>\r\n}\r\nexport default function Profile() {\r\n    let domainContext = useContext(DomainContext);\r\n    let modelContext = useContext(ModelContext);\r\n    let userContext = useContext(UserContext);\r\n    let user = userContext.state.user;\r\n    let [open, _, toggleOpen] = useBooleanState(false);\r\n    const onClickLogout = e => {\r\n        userContext.setAuthenticated(false);\r\n    };\r\n\r\n    return <div className={'profile-container'}>\r\n        <div className={'profile'}>\r\n            {user.name}\r\n            <img src={user.image} alt='Avatar' width={40} height={40}/>\r\n        </div>\r\n        <span>{modelContext.state.name}@{domainContext.state.name}</span>\r\n        <i className={'fas fa-caret-down __clickable'} onClick={() => toggleOpen()}/>\r\n        <div className=\"dropdown-menu\" role=\"menu\" data-hidden={!open}>\r\n            <div className=\"user\">\r\n                <img src={user.image} alt='Avatar' width={50} height={50}/>\r\n                {user.name}\r\n            </div>\r\n            <div className={'quick-settings'}>\r\n                <ChooseDomain defaultValue={domainContext.state.domain} onChange={domainContext.setDomain}/>\r\n                <ChooseModel defaultValue={modelContext.state.model} domain={domainContext.state.domain} onChange={modelContext.setModel}/>\r\n{/*                <ChooseSystem defaultValue={modelContext.state.model} model={modelContext.state.model}/>*/}\r\n            </div>\r\n            <div className=\"options\">\r\n                <ul>\r\n                    <li><NewsIcon/>News</li>\r\n                    <li><SubscriptionIcon/>Subscriptions</li>\r\n                    <li><OptionsIcon/>Options</li>\r\n                    <li onClick={onClickLogout}><SignOutIcon/>Sign out</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}