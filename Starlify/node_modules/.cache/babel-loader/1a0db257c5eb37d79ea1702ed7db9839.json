{"ast":null,"code":"import _objectSpread from \"/Users/kirancorreya/Site/Starlify/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport const defaultGraphReducer = {\n  loading: false,\n  has_loaded: false,\n  version: 0,\n  data: {\n    nodes: [],\n    links: []\n  }\n};\nexport default function graphReducer(id = 'id') {\n  return (state = defaultGraphReducer, action) => {\n    switch (action.type) {\n      case 'FETCHING':\n        {\n          return _objectSpread({}, defaultGraphReducer, {\n            loading: true,\n            has_loaded: false\n          });\n        }\n\n      case 'SET_NODES':\n        return {\n          loading: false,\n          has_loaded: true,\n          version: state.version + 1,\n          data: {\n            nodes: [...action.payload.nodes],\n            links: [...action.payload.links]\n          }\n        };\n\n      case 'UPDATE_NODE':\n        {\n          let currentNodes = [...state.data.nodes];\n          let updateNodeIndex = currentNodes.findIndex(x => x[id] === action.payload[id]);\n\n          if (updateNodeIndex === -1) {\n            return;\n          }\n\n          currentNodes[updateNodeIndex] = action.payload;\n          return _objectSpread({}, state, {\n            loading: false,\n            version: state.version + 1,\n            data: _objectSpread({}, state.data, {\n              nodes: currentNodes\n            })\n          });\n        }\n\n      case 'ADD_NODE':\n        {\n          return _objectSpread({}, state, {\n            version: state.version + 1,\n            data: _objectSpread({}, state.data, {\n              nodes: [...state.data.nodes, action.payload]\n            })\n          });\n        }\n\n      case 'ADD_NODES':\n        {\n          return _objectSpread({}, state, {\n            version: state.version + 1,\n            data: _objectSpread({}, state.data, {\n              nodes: [...state.data.nodes, ...action.payload]\n            })\n          });\n        }\n\n      case 'ADD_LINK':\n        {\n          return _objectSpread({}, state, {\n            version: state.version + 1,\n            data: _objectSpread({}, state.data, {\n              links: [...state.data.links, action.payload]\n            })\n          });\n        }\n\n      case 'ADD_LINKS':\n        {\n          return _objectSpread({}, state, {\n            version: state.version + 1,\n            data: _objectSpread({}, state.data, {\n              links: [...state.data.links, ...action.payload]\n            })\n          });\n        }\n\n      case 'REMOVE_NODE':\n        {\n          let filteredNodes = state.data.nodes.filter(x => x[id] !== action.payload[id]);\n          return _objectSpread({}, state, {\n            version: state.version + 1,\n            data: _objectSpread({}, state.data, {\n              nodes: filteredNodes\n            })\n          });\n        }\n\n      case 'LOADING':\n        return _objectSpread({}, state, {\n          loading: true\n        });\n\n      case 'DONE':\n        {\n          return _objectSpread({}, state, {\n            loading: false,\n            has_loaded: true\n          });\n        }\n\n      case 'RESET':\n        {\n          return defaultGraphReducer;\n        }\n\n      default:\n        return state;\n    }\n  };\n}","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/lib/utilities/reducers/graphReducer.js"],"names":["defaultGraphReducer","loading","has_loaded","version","data","nodes","links","graphReducer","id","state","action","type","payload","currentNodes","updateNodeIndex","findIndex","x","filteredNodes","filter"],"mappings":"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","sourcesContent":["export const defaultGraphReducer = {\n    loading: false,\n    has_loaded: false,\n    version: 0,\n    data: {\n        nodes: [],\n        links: []\n    }\n};\nexport default function graphReducer(id = 'id') {\n    return (state = defaultGraphReducer, action) => {\n        switch (action.type) {\n            case 'FETCHING': {\n                return {\n                    ...defaultGraphReducer,\n                    loading: true,\n                    has_loaded: false,\n                }\n            }\n            case 'SET_NODES':\n                return {\n                    loading: false,\n                    has_loaded: true,\n                    version: state.version + 1,\n                    data: {\n                        nodes: [\n                            ...action.payload.nodes\n                        ],\n                        links: [\n                            ...action.payload.links\n                        ]\n                    }\n                };\n            case 'UPDATE_NODE': {\n                let currentNodes = [...state.data.nodes];\n                let updateNodeIndex = currentNodes.findIndex(x => x[id] === action.payload[id]);\n                if (updateNodeIndex === -1) {\n                    return;\n                }\n                currentNodes[updateNodeIndex] = action.payload;\n                return {\n                    ...state,\n                    loading: false,\n                    version: state.version + 1,\n                    data: {\n                        ...state.data,\n                        nodes: currentNodes\n                    }\n                };\n            }\n            case 'ADD_NODE': {\n                return {\n                    ...state,\n                    version: state.version + 1,\n                    data: {\n                        ...state.data,\n                        nodes: [\n                            ...state.data.nodes,\n                            action.payload\n                        ]\n                    }\n                }\n            }\n            case 'ADD_NODES': {\n                return {\n                    ...state,\n                    version: state.version + 1,\n                    data: {\n                        ...state.data,\n                        nodes: [\n                            ...state.data.nodes,\n                            ...action.payload\n                        ]\n                    }\n                }\n            }\n            case 'ADD_LINK': {\n                return {\n                    ...state,\n                    version: state.version + 1,\n                    data: {\n                        ...state.data,\n                        links: [\n                            ...state.data.links,\n                            action.payload\n                        ]\n                    }\n                }\n            }\n            case 'ADD_LINKS': {\n                return {\n                    ...state,\n                    version: state.version + 1,\n                    data: {\n                        ...state.data,\n                        links: [\n                            ...state.data.links,\n                            ...action.payload\n                        ]\n                    }\n                }\n            }\n            case 'REMOVE_NODE': {\n                let filteredNodes = state.data.nodes.filter(x => x[id] !== action.payload[id]);\n                return {\n                    ...state,\n                    version: state.version + 1,\n                    data: {\n                        ...state.data,\n                        nodes: filteredNodes\n                    }\n                }\n            }\n            case 'LOADING':\n                return {\n                    ...state,\n                    loading: true\n                };\n            case 'DONE': {\n                return {\n                    ...state,\n                    loading: false,\n                    has_loaded: true,\n                }\n            }\n            case 'RESET': {\n                return defaultGraphReducer;\n            }\n            default:\n                return state;\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}