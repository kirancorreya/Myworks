{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/Organisation.js\";\nimport React, { Component } from \"react\";\nimport { Modal, ModalBody, Input, Row, Col, InputGroup, InputGroupAddon, InputGroupText, Collapse } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { fetchDivisions } from \"../../../store/organisation/orgActions\";\nimport addCircle from \"../../../_assets/icons/icons/add-icon-circle.svg\";\nimport AddDivision from \"../../../_components/organisation/AddDivision\";\nimport EditDivision from \"../../../_components/organisation/EditDivision\";\nimport DeleteDivision from \"../../../_components/organisation/DeleteDivision\";\nimport AddTeam from \"../../../_components/organisation/AddTeam\";\nimport EditTeam from \"../../../_components/organisation/EditTeam\";\nimport DeleteTeam from \"../../../_components/organisation/DeleteTeam\";\nimport closeIcon from \"../../../_assets/icons/icons/exitwhite.svg\";\n\nclass Organisation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editDivisionToggle = division => {\n      this.setState(state => {\n        let edit = Object.assign({}, state.edit);\n        edit.division = division;\n        return {\n          edit,\n          eventType: \"division-edit\",\n          popup: true\n        };\n      });\n    };\n\n    this.deleteDivisionToggle = division => {\n      this.setState(state => {\n        let edit = Object.assign({}, state.edit);\n        edit.division = division;\n        return {\n          edit,\n          eventType: \"division-delete\",\n          popup: true\n        };\n      });\n    };\n\n    this.addTeamToggle = division => {\n      this.setState(state => {\n        let edit = Object.assign({}, state.edit);\n        edit.division = division;\n        return {\n          edit,\n          eventType: \"team-add\",\n          popup: true\n        };\n      });\n    };\n\n    this.editTeamToggle = team => {\n      this.setState(state => {\n        let edit = Object.assign({}, state.edit);\n        edit.team = team;\n        return {\n          edit,\n          eventType: \"team-edit\",\n          popup: true\n        };\n      });\n    };\n\n    this.modalToggle = (fetch = false) => {\n      this.setState(state => {\n        let edit = Object.assign({}, state.edit);\n        edit.division = null;\n        return {\n          edit,\n          popup: !this.state.popup,\n          eventType: null\n        };\n      });\n      if (fetch === true) this.props.onfetchDivisions(this.props.domain);\n    };\n\n    this.collapseDivList = divisionId => {\n      var collapse_div = this.state.collapse_div;\n      var collapse = null;\n\n      if (collapse_div === null) {\n        collapse = divisionId;\n      } else {\n        if (divisionId === collapse_div) collapse = null;else collapse = divisionId;\n      }\n\n      this.setState({\n        collapse_div: collapse\n      });\n    };\n\n    this.collapseTeamList = teamId => {\n      var collapse_team = this.state.collapse_team;\n      var collapse = null;\n\n      if (collapse_team === null) {\n        collapse = teamId;\n      } else {\n        if (teamId === collapse_team) collapse = null;else collapse = teamId;\n      }\n\n      this.setState({\n        collapse_team: collapse\n      });\n    };\n\n    this.close = this.close.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.state = {\n      popup: false,\n      eventType: null,\n      addDivision: false,\n      collapse_div: null,\n      collapse_team: null,\n      edit: {\n        division: null,\n        team: null\n      }\n    };\n  } // closes the organisation section\n\n\n  close(menu, type) {\n    this.props.close(menu, type);\n  }\n\n  componentDidMount() {\n    if (this.props.domain !== \"\") {\n      this.props.onfetchDivisions(this.props.domain);\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n\n    if (oldProps.domain !== newProps.domain) {\n      this.props.onfetchDivisions(newProps.domain);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"org_browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.popup,\n      toggle: this.modalToggle,\n      className: \"modal-dialog-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.state.eventType === \"division-add\" && React.createElement(AddDivision, {\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), this.state.eventType === \"division-edit\" && React.createElement(EditDivision, {\n      division: this.state.edit.division,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), this.state.eventType === \"division-delete\" && React.createElement(DeleteDivision, {\n      division: this.state.edit.division,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), this.state.eventType === \"team-add\" && React.createElement(AddTeam, {\n      division: this.state.edit.division,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), this.state.eventType === \"team-edit\" && React.createElement(EditTeam, {\n      team: this.state.edit.team,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), this.state.eventType === \"team-delete\" && React.createElement(DeleteTeam, {\n      team: this.state.edit.team,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"browser_header text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-users submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Organisation\"), React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon\",\n      onClick: () => this.close(\"organisation\", \"menu\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: closeIcon,\n      alt: \"starlify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), this.props.orgid !== \"\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(InputGroupAddon, {\n      addonType: \"append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"addDivisionIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: () => {\n        this.setState({\n          eventType: \"division-add\",\n          popup: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: addCircle,\n      alt: \"starlify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), \"Add Division\")))), this.props.orgid !== \"\" && React.createElement(\"div\", {\n      className: \"browser_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"division_model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_body_header text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"browser_body_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"modelListWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, this.props.divisions.length !== 0 && this.props.divisions.map((division, index) => {\n      return React.createElement(\"li\", {\n        className: \"modelListbody text-white divisionListItem\",\n        key: division.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"7\",\n        className: \"divisionitemtext\",\n        onClick: () => this.collapseDivList(division.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, division.teams.length !== 0 && React.createElement(\"i\", {\n        className: \"fas fa-chevron-\".concat(this.state.collapse_div === division.id ? 'down' : 'right'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), division.name), React.createElement(Col, {\n        sm: \"5\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"hoversettings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: () => {\n          this.addTeamToggle(division);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: addCircle,\n        alt: \"starlify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: () => {\n          this.editDivisionToggle(division);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: () => {\n          this.deleteDivisionToggle(division);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }))))), React.createElement(Collapse, {\n        isOpen: this.state.collapse_div === division.id ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"teamListWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, division.teams.map((team, index) => {\n        return React.createElement(\"li\", {\n          key: team.id,\n          className: \"teamListItem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"7\",\n          className: \"teamitemtext\",\n          onClick: () => this.collapseTeamList(team.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, team.persons.length !== 0 && React.createElement(\"i\", {\n          className: \"fas fa-chevron-\".concat(this.state.collapse_team === team.id ? 'down' : 'right'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }), team.name), React.createElement(Col, {\n          sm: \"5\",\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"hoversettings\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          onClick: () => {\n            this.editTeamToggle(team);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-pen\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }))))), React.createElement(Collapse, {\n          isOpen: this.state.collapse_team === team.id ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"developerListWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, team.persons.map((person, i) => {\n          return React.createElement(\"li\", {\n            key: person.id,\n            className: \"developerListItem\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244\n            },\n            __self: this\n          }, person.firstName && person.lastName ? React.createElement(Col, {\n            sm: \"7\",\n            className: \"developeritemtext\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 246\n            },\n            __self: this\n          }, \" \", person.firstName + \" \" + person.lastName, \" \") : React.createElement(Col, {\n            sm: \"7\",\n            className: \"developeritemtext\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248\n            },\n            __self: this\n          }, \" Unknown \")));\n        }))));\n      }))));\n    })))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain,\n    orgid: state.organisation.orgid,\n    divisions: state.organisation.divisions\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onfetchDivisions: domainId => {\n      dispatch(fetchDivisions(domainId));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Organisation);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/Organisation.js"],"names":["React","Component","Modal","ModalBody","Input","Row","Col","InputGroup","InputGroupAddon","InputGroupText","Collapse","connect","fetchDivisions","AddDivision","EditDivision","DeleteDivision","AddTeam","EditTeam","DeleteTeam","Organisation","constructor","props","editDivisionToggle","division","setState","state","edit","Object","assign","eventType","popup","deleteDivisionToggle","addTeamToggle","editTeamToggle","team","modalToggle","fetch","onfetchDivisions","domain","collapseDivList","divisionId","collapse_div","collapse","collapseTeamList","teamId","collapse_team","close","bind","addDivision","menu","type","componentDidMount","componentDidUpdate","oldProps","newProps","render","closeIcon","orgid","addCircle","divisions","length","map","index","id","teams","name","persons","person","i","firstName","lastName","mapStateToProps","model","organisation","mapDispatchToProps","dispatch","domainId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal, ModalBody, Input, Row, Col, InputGroup, InputGroupAddon, InputGroupText, Collapse } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { fetchDivisions } from \"../../../store/organisation/orgActions\";\nimport addCircle from \"../../../_assets/icons/icons/add-icon-circle.svg\";\n\nimport AddDivision from \"../../../_components/organisation/AddDivision\";\nimport EditDivision from \"../../../_components/organisation/EditDivision\";\nimport DeleteDivision from \"../../../_components/organisation/DeleteDivision\";\n\nimport AddTeam from \"../../../_components/organisation/AddTeam\";\nimport EditTeam from \"../../../_components/organisation/EditTeam\";\nimport DeleteTeam from \"../../../_components/organisation/DeleteTeam\";\n\nimport closeIcon from \"../../../_assets/icons/icons/exitwhite.svg\"\n\n\nclass Organisation extends Component {\n  constructor(props) {\n    super(props);\n    this.close = this.close.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.state = {\n      popup: false,\n      eventType: null,\n      addDivision: false,\n      collapse_div: null,\n      collapse_team: null,\n      edit:{\n        division: null,\n        team: null\n      }\n    };\n  }\n\n  // closes the organisation section\n  close(menu, type) {\n    this.props.close(menu, type);\n  }\n\n  componentDidMount(){\n    if (this.props.domain !== \"\") {\n      this.props.onfetchDivisions(this.props.domain);\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n    if (oldProps.domain !== newProps.domain) {\n      this.props.onfetchDivisions(newProps.domain);\n    }\n  }\n\n  editDivisionToggle = (division) => {\n    this.setState(state => {\n      let edit = Object.assign({}, state.edit);\n      edit.division = division;\n      return {edit, eventType: \"division-edit\", popup:true}\n    })\n  }\n\n  deleteDivisionToggle = (division) => {\n    this.setState(state => {\n      let edit = Object.assign({}, state.edit);\n      edit.division = division;\n      return {edit, eventType: \"division-delete\", popup:true}\n    })\n  }\n\n  addTeamToggle = (division) => {\n    this.setState(state => {\n      let edit = Object.assign({}, state.edit);\n      edit.division = division;\n      return {edit, eventType: \"team-add\", popup:true}\n    })\n  }\n\n  editTeamToggle = (team) => {\n    this.setState(state => {\n      let edit = Object.assign({}, state.edit);\n      edit.team = team;\n      return {edit, eventType: \"team-edit\", popup:true}\n    })\n  }\n\n  modalToggle = (fetch = false) => {\n    this.setState(state => {\n      let edit = Object.assign({}, state.edit);\n      edit.division = null;\n      return {edit, popup: !this.state.popup, eventType: null}\n    });\n    if (fetch === true) this.props.onfetchDivisions(this.props.domain);\n  };\n\n  collapseDivList = (divisionId) => {\n    var {collapse_div} = this.state;\n    var collapse = null;\n    if (collapse_div === null) {\n      collapse = divisionId;\n    }else{\n      if (divisionId === collapse_div) collapse = null;\n      else collapse = divisionId;\n    }\n    this.setState({\n      collapse_div: collapse\n    })\n  }\n\n  collapseTeamList = (teamId) => {\n    var {collapse_team} = this.state;\n    var collapse = null;\n    if (collapse_team === null) {\n      collapse = teamId;\n    }else{\n      if (teamId === collapse_team) collapse = null;\n      else collapse = teamId;\n    }\n    this.setState({\n      collapse_team: collapse\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"org_browser\">\n\n        <Modal isOpen={this.state.popup} toggle={this.modalToggle} className=\"modal-dialog-centered\">\n          <ModalBody>\n            {this.state.eventType === \"division-add\" && (\n              <AddDivision toggle={this.modalToggle}/>\n            )}\n            {this.state.eventType === \"division-edit\" && (\n              <EditDivision division={this.state.edit.division} toggle={this.modalToggle} />\n            )}\n            {this.state.eventType === \"division-delete\" && (\n              <DeleteDivision division={this.state.edit.division} toggle={this.modalToggle}/>\n            )}\n            {this.state.eventType === \"team-add\" && (\n              <AddTeam division={this.state.edit.division} toggle={this.modalToggle} />\n            )}\n            {this.state.eventType === \"team-edit\" && (\n              <EditTeam team={this.state.edit.team} toggle={this.modalToggle} />\n            )}\n            {this.state.eventType === \"team-delete\" && (\n              <DeleteTeam team={this.state.edit.team} toggle={this.modalToggle} />\n            )}\n          </ModalBody>\n        </Modal>\n\n        <div className=\"browser_header text-white\">\n          <div>\n            <i className=\"fas fa-users submenu-icon\"></i>\n            <h3 className=\"d-inline-block\">Organisation</h3>\n            <i\n              className=\"fas fa-times system-down-icon\"\n              onClick={() => this.close(\"organisation\", \"menu\")}\n            />\n            <img src={closeIcon} alt=\"starlify\" />\n          </div>\n          {this.props.orgid !== \"\" && (\n            <div>\n              <Row className=\"searchbar\">\n                <Col sm=\"6\">\n                  <InputGroup>\n                    <Input placeholder=\"search\" />\n                    <InputGroupAddon addonType=\"append\">\n                      <InputGroupText>\n                        <i className=\"fas fa-search\"></i>\n                      </InputGroupText>\n                    </InputGroupAddon>\n                  </InputGroup>\n                </Col>\n              </Row>\n              <div className=\"addDivisionIcon\">\n                <span onClick={() => { this.setState({ eventType: \"division-add\", popup: true }); }}>\n                  <img src={addCircle} alt=\"starlify\" />\n                  Add Division\n                </span>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {this.props.orgid !== \"\" && (\n\n          <div className=\"browser_body\">\n            <div className=\"division_model\">\n              <div className=\"browser_body_header text-white\"></div>\n              <div className=\"browser_body_content\">\n                <div>\n                  <ul className=\"modelListWrapper\">\n\n                      {this.props.divisions.length !== 0 && this.props.divisions.map((division, index) => {\n                          return (\n                            <li className=\"modelListbody text-white divisionListItem\" key={division.id}>\n                                <Row>\n                                  <Col sm=\"7\" className=\"divisionitemtext\" onClick={() => this.collapseDivList(division.id)}>\n                                    {division.teams.length !== 0 &&(\n                                      <i className={`fas fa-chevron-${this.state.collapse_div === division.id ? 'down' : 'right'}`}></i>\n                                    )}\n                                    {division.name}\n                                  </Col>\n                                  <Col sm=\"5\" className=\"text-center\">\n                                    <ul className=\"hoversettings\">\n                                      <li onClick={()=>{this.addTeamToggle(division)}}>\n                                        <img src={addCircle} alt=\"starlify\" />\n                                      </li>\n                                      <li onClick={()=>{this.editDivisionToggle(division)}}>\n                                        <i className=\"fas fa-pen\"></i>\n                                      </li>\n                                      <li onClick={()=>{this.deleteDivisionToggle(division)}}>\n                                        <i className=\"fas fa-trash-alt\"></i>\n                                      </li>\n                                    </ul>\n                                  </Col>\n                                </Row>\n\n                                <Collapse isOpen={this.state.collapse_div === division.id ? true : false}>\n                                  <ul className=\"teamListWrapper\">\n                                    {division.teams.map((team, index) => {\n                                      return(\n                                          <li key={team.id} className=\"teamListItem\">\n                                            <Row>\n                                              <Col sm=\"7\" className=\"teamitemtext\" onClick={() => this.collapseTeamList(team.id)}>\n                                                {team.persons.length !== 0 &&(\n                                                  <i className={`fas fa-chevron-${this.state.collapse_team === team.id ? 'down' : 'right'}`}></i>\n                                                )}\n                                                {team.name}\n                                              </Col>\n                                              <Col sm=\"5\" className=\"text-center\">\n                                                <ul className=\"hoversettings\">\n                                                  <li onClick={()=>{this.editTeamToggle(team)}}>\n                                                    <i className=\"fas fa-pen\"></i>\n                                                  </li>\n                                                </ul>\n                                              </Col>\n                                            </Row>\n\n                                            <Collapse isOpen={this.state.collapse_team === team.id ? true : false}>\n                                              <ul className=\"developerListWrapper\">\n                                                {team.persons.map((person, i)=>{\n                                                  return(\n                                                    <li key={person.id} className=\"developerListItem\">\n                                                      <Row>\n                                                        {person.firstName && person.lastName ?(\n                                                          <Col sm=\"7\" className=\"developeritemtext\"> {person.firstName +\" \"+ person.lastName} </Col>\n                                                        ):(\n                                                          <Col sm=\"7\" className=\"developeritemtext\"> Unknown </Col>\n                                                        )}\n\n                                                      </Row>\n                                                    </li>\n                                                  )\n                                                })}\n                                              </ul>\n                                            </Collapse>\n\n                                          </li>\n                                      );\n                                    })}\n                                  </ul>\n                                </Collapse>\n\n                            </li>\n                          );\n                        })\n                      }\n\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        )}\n\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain,\n    orgid: state.organisation.orgid,\n    divisions: state.organisation.divisions,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onfetchDivisions: domainId => {\n      dispatch(fetchDivisions(domainId));\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Organisation);\n"]},"metadata":{},"sourceType":"module"}