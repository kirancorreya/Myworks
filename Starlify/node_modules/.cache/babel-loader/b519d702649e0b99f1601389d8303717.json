{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/Systems.js\";\nimport React, { Component } from \"react\";\nimport { Collapse, Modal, ModalBody, Input, Label } from \"reactstrap\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport subsystem from \"../../../_assets/images/subsystem.png\";\nimport services from \"../../../_assets/images/services.png\";\nimport reference from \"../../../_assets/images/reference.png\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport { connect } from 'react-redux';\n\nfunction collect(props) {\n  if (props.itemEntity) return {\n    itemName: props.itemName,\n    itemId: props.itemId,\n    itemEntity: props.itemEntity\n  };else return {\n    itemName: props.itemName,\n    itemId: props.itemId\n  };\n}\n\nclass Systems extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renameHandleChange = e => {\n      this.setState({\n        itemName: e.target.value\n      });\n    };\n\n    this.addUiToggle = this.addUiToggle.bind(this);\n    this.resetAddUiToggle = this.resetAddUiToggle.bind(this);\n    this.systemMenuToggle = this.systemMenuToggle.bind(this);\n    this.flowsMenuToggle = this.flowsMenuToggle.bind(this);\n    this.systemToggle = this.systemToggle.bind(this);\n    this.flowsToggle = this.flowsToggle.bind(this);\n    this.subSystemToggle = this.subSystemToggle.bind(this);\n    this.systemSelected = this.systemSelected.bind(this);\n    this.close = this.close.bind(this);\n    this.flowsSelected = this.flowsSelected.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.state = {\n      modal: false,\n      flowsCollapse: true,\n      systemsCollapse: true,\n      collapseSystem: false,\n      collapseSubSystem: false,\n      currentSystemIndex: \"\",\n      currentSubSystemIndex: \"\",\n      currentFlowIndex: \"\",\n      systemData: {\n        system: \"\"\n      },\n      showsystemDetail: false,\n      showflowDetail: false,\n      systemDetails: {},\n      flowDetails: {},\n      system: [],\n      flow: [],\n      searchString: \"\",\n      ids: [],\n      search: false,\n      itemId: '',\n      itemName: '',\n      itemValue: '',\n      itemType: '',\n      itemEntity: '',\n      systemAdd: false,\n      flowAdd: false,\n      systemId: '',\n      servicesList: '',\n      serviceId: '',\n      testData: ''\n    };\n  } //fetch system and flows before mounting occurs\n\n\n  componentWillMount() {\n    this.fetchSystemAndFlows();\n  } //fetch system and flows\n\n\n  fetchSystemAndFlows() {\n    return fetch(process.env.REACT_APP_API + \"model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(responseJson => {\n      this.setState({\n        systemData: responseJson\n      });\n    });\n  } //manage add more system/flow text box to ui\n\n\n  addUiToggle(event, type) {\n    if (type === 'system') {\n      this.setState(state => ({\n        systemAdd: !state.systemAdd,\n        itemEntity: 'system'\n      }));\n    } else {\n      this.setState(state => ({\n        flowAdd: !state.flowAdd,\n        itemEntity: 'flow'\n      }));\n    }\n  } //setting entity while add more systems/flows\n\n\n  resetAddUiToggle(event, type) {\n    if (type === 'system') {\n      this.setState(state => ({\n        itemEntity: 'system'\n      }));\n    } else {\n      this.setState(state => ({\n        itemEntity: 'flow'\n      }));\n    }\n  } //setting system id on click\n\n\n  systemSelected(systemId) {\n    this.props.systemSelected(systemId);\n  }\n\n  close(menu, type) {\n    this.props.close(menu, type);\n  }\n\n  flowsSelected(flowId, status) {\n    this.props.flowsSelected(flowId, status);\n  }\n\n  systemMenuToggle() {\n    this.setState(state => ({\n      systemsCollapse: !state.systemsCollapse\n    }));\n  }\n\n  flowsMenuToggle() {\n    this.setState(state => ({\n      flowsCollapse: !state.flowsCollapse\n    }));\n  }\n\n  flowsToggle(flowId) {\n    if (this.state.currentFlowIndex === flowId || !this.state.showflowDetail && this.state.search) {\n      this.setState({\n        search: false\n      });\n      this.setState({\n        currentFlowIndex: 0\n      });\n      this.flowsSelected(flowId, true);\n    } else {\n      this.setState({\n        currentFlowIndex: flowId\n      });\n      this.setState({\n        showflowDetail: true\n      });\n      this.flowsSelected(flowId, true);\n      return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow/72ad974f-e4e2-41c2-8838-79ebd240f315\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        this.setState({\n          flowDetail: responseJson\n        });\n      });\n    }\n  } //system listing toggle\n\n\n  systemToggle(systemId) {\n    if (this.state.currentSystemIndex === systemId || !this.state.showsystemDetail && this.state.search) {\n      this.setState({\n        search: false\n      });\n      this.setState({\n        currentSystemIndex: 0\n      });\n      this.systemSelected(systemId);\n    } else {\n      this.setState({\n        currentSystemIndex: systemId\n      });\n      this.systemSelected(systemId);\n    }\n\n    this.props.onHighlightClick(systemId);\n  } //sub system listing toggle\n\n\n  subSystemToggle(systemId) {\n    this.setState({\n      collapseSubSystem: !this.state.collapseSubSystem\n    });\n\n    if (this.state.currentSubSystemIndex === systemId) {\n      this.setState({\n        currentSubSystemIndex: 0\n      });\n      this.systemSelected(systemId);\n    } else {\n      this.setState({\n        currentSubSystemIndex: systemId\n      });\n      this.systemSelected(systemId);\n    }\n  } //create entity \n\n\n  createEntity(event) {\n    let value = event.target.value;\n\n    if (event.key === 'Enter') {\n      event.target.value = '';\n      fetch(process.env.REACT_APP_API + \"model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/\".concat(this.state.itemEntity), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/\".concat(this.state.itemEntity, \"/\") + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: value\n          })\n        }).then(response => response.json()).then(responseJson => {\n          this.fetchSystemAndFlows();\n        });\n      });\n    }\n  } //create service\n\n\n  createService(event) {\n    let value = event.target.value;\n\n    if ((event.key === 'Enter' || event.type === 'blur') && value) {\n      event.target.value = '';\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n      fetch(process.env.REACT_APP_API + \"model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/system/\".concat(this.state.itemId, \"/service\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/service/\" + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: value\n          })\n        }).then(response => {\n          this.fetchSystemAndFlows();\n        });\n      });\n    }\n  } //create service\n\n\n  createReference(event) {\n    let value = event.target.value;\n\n    if ((event.key === 'Enter' || event.type === 'blur') && value) {\n      event.target.value = '';\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n      fetch(process.env.REACT_APP_API + \"model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/system/\".concat(this.state.systemId, \"/reference/\").concat(this.state.serviceId), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: value\n        })\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/reference/\" + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: value\n          })\n        }).then(response => response.json()).then(responseJson => {\n          this.fetchSystemAndFlows();\n        });\n      });\n    }\n  } //create entity \n\n\n  createSubSyetem(event) {\n    let value = event.target.value;\n\n    if (event.key === 'Enter') {\n      event.target.value = '';\n      fetch(process.env.REACT_APP_API + \"model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/\".concat(this.state.itemEntity, \"/\").concat(this.state.itemId, \"/\").concat(this.state.itemEntity), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/\".concat(this.state.itemEntity, \"/\") + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: value\n          })\n        }).then(response => {\n          this.fetchSystemAndFlows();\n        });\n      });\n    }\n  } //Delete entity\n\n\n  deleteEntity() {\n    return fetch(process.env.REACT_APP_API + \"model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/\".concat(this.state.itemEntity === 'flow' ? 'flow' : 'modeled', \"/\").concat(this.state.itemId), {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n      this.fetchSystemAndFlows();\n    });\n  } //update item value for edit\n\n\n  //Update entity\n  updateEntity(event) {\n    if (event.key === 'Enter' || event.type === 'blur') {\n      let value = event.target.value;\n      event.target.value = '';\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n      fetch(process.env.REACT_APP_API + \"model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/\".concat(this.state.itemEntity, \"/\") + this.state.itemId, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: value\n        })\n      }).then(responseJson => {\n        this.fetchSystemAndFlows();\n      });\n    }\n  } //control right click modal\n\n\n  modalToggle(e, data) {\n    //console.log(data)\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    if (data) {\n      //console.log(data)\n      this.setState({\n        itemId: data.itemId,\n        itemName: data.itemName,\n        itemType: data.itemType,\n        itemEntity: data.itemEntity\n      });\n    }\n  } //get systems and services list for adding new reference\n\n\n  getSystems(event) {\n    let index = event.target.selectedIndex;\n    let id = event.target[index].id;\n    this.setState({\n      systemId: id\n    });\n    let parents = this.state.systemData.systems;\n    let parent = parents.filter(parent => parent.name === event.target.value);\n    this.setState({\n      servicesList: parent[0].services\n    });\n  }\n\n  serviceChangeHandle(event) {\n    this.setState({\n      serviceId: event.target.value\n    });\n  }\n\n  subSystem(item) {\n    if (item) {\n      return fetch(process.env.REACT_APP_API + \"model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/system/\" + item, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        this.setState({\n          testData: responseJson\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"org_browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(ContextMenu, {\n      id: \"system_right_click\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      data: {\n        itemType: 'add_sub_system',\n        itemEntity: 'system'\n      },\n      onClick: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \"Add Sub System\"), React.createElement(MenuItem, {\n      data: {\n        itemType: 'service',\n        itemEntity: 'service'\n      },\n      onClick: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, \"Add Service\"), React.createElement(MenuItem, {\n      data: {\n        itemType: 'add_reference',\n        itemEntity: 'reference'\n      },\n      onClick: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, \"Add Reference\"), React.createElement(MenuItem, {\n      data: {\n        itemType: 'delete',\n        itemEntity: 'system'\n      },\n      onClick: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(MenuItem, {\n      data: {\n        itemType: 'rename',\n        itemEntity: 'system'\n      },\n      onClick: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, \"Rename\")), React.createElement(ContextMenu, {\n      id: \"default_right_click\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      data: {\n        itemType: 'delete'\n      },\n      onClick: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(MenuItem, {\n      data: {\n        itemType: 'rename'\n      },\n      onClick: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \"Rename\")), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.modalToggle,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      className: this.state.itemType === 'delete' ? 'text-center delete-modal-body ' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, this.state.itemType === 'add_sub_system' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-center m-b-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, \"Create new sub system\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"text-input\",\n      placeholder: \"Add New Sub System\",\n      onBlur: this.createSubSyetem.bind(this),\n      onKeyDown: this.createSubSyetem.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    })), this.state.itemType === 'service' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-center m-b-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, \"Create new service.\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"text-input\",\n      placeholder: \"Add New Service\",\n      onBlur: this.createService.bind(this),\n      onKeyDown: this.createService.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    })), this.state.itemType === 'add_reference' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-center m-b-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, \"Create new reference.\"), React.createElement(\"div\", {\n      className: \"row formGroupWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, \"System\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      onChange: this.getSystems.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, \"System\"), this.state.systemData.systems ? this.state.systemData.systems.map((item, index) => {\n      return this.state.itemId === item.id ? '' : React.createElement(\"option\", {\n        value: item.name,\n        id: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, item.name);\n    }) : '')), React.createElement(\"div\", {\n      className: \"form-group col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, \"Service\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"exampleSelect\",\n      onChange: this.serviceChangeHandle.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, \"Service\"), this.state.servicesList ? this.state.servicesList.map((item, index) => {\n      return React.createElement(\"option\", {\n        value: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, item.name);\n    }) : '')), React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"text\",\n      id: \"example\",\n      placeholder: \"Add New Reference\",\n      onBlur: this.createReference.bind(this),\n      onKeyDown: this.createReference.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    })))), this.state.itemType === 'rename' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-center m-b-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, \"Do you want to rename?\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"text-input\",\n      placeholder: \"Rename\",\n      value: this.state.itemName,\n      onBlur: this.updateEntity.bind(this),\n      onChange: this.renameHandleChange.bind(this),\n      onKeyDown: this.updateEntity.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    })), this.state.itemType === 'delete' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, \"Are you sure?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, \"Do you really want to delete these records? \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }), \"Process cannot be undone\"), React.createElement(\"div\", {\n      className: \"delete-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"btn transparent-btn\",\n      onClick: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, \"cancel\"), React.createElement(\"button\", {\n      class: \"btn green-btn\",\n      onClick: this.deleteEntity.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, \"confirm\"))))), React.createElement(\"h3\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, \"Systems and Flows\", React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon browser_close\",\n      onClick: () => this.close('system', 'menu'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      autoHide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, \"Selector\"), React.createElement(\"div\", {\n      className: \"_search\",\n      id: \"searchControl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-input\",\n      onKeyUp: this.searchSystem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"icon icon-Search search-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"systems w-100 d-inline-block montserrat text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"system-search montserrat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-white click systemClick \".concat(this.state.systemsCollapse ? 'active ' : ''),\n      style: {\n        marginBottom: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.systemMenuToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, \"Systems\", React.createElement(\"i\", {\n      className: \"fas fa-chevron-down system-down-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    })), !this.state.systemAdd && React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon\",\n      id: \"system\",\n      onClick: e => {\n        this.addUiToggle(e, 'system');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      style: {\n        height: 220\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }, this.state.systemAdd && React.createElement(\"div\", {\n      className: \"extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"system\",\n      onKeyDown: this.createEntity.bind(this),\n      onFocus: e => {\n        this.resetAddUiToggle(e, 'system');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => {\n        this.addUiToggle(e, 'system');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-times\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }))), React.createElement(Collapse, {\n      isOpen: this.state.systemsCollapse,\n      id: \"systemListing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    }, this.state.systemData.systems ? this.state.systemData.systems.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: item.id,\n        className: \"listingItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }, React.createElement(ContextMenuTrigger, {\n        id: \"system_right_click\",\n        itemName: item.name,\n        itemId: item.id,\n        collect: collect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey click \".concat(this.state.currentSystemIndex === item.id ? 'active ' : ''),\n        onClick: () => this.systemToggle(item.id),\n        style: {\n          marginLeft: \"1rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"system-down-icon left text-white \".concat(item.services || item.references || item.subsystems ? 'fas fa-chevron-down' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"systemCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: item.id,\n        onClick: () => this.systemToggle(item.id),\n        className: this.state.ids.includes(item.id) ? \"highlight \" : \"test text-grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, item.name))), React.createElement(Collapse, {\n        isOpen: this.state.currentSystemIndex === item.id || this.state.search ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652\n        },\n        __self: this\n      }, item.services ? item.services.map((service, i) => {\n        return React.createElement(\"div\", {\n          id: service.id,\n          key: service.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 663\n          },\n          __self: this\n        }, React.createElement(ContextMenuTrigger, {\n          id: \"default_right_click\",\n          itemName: service.name,\n          itemId: service.id,\n          itemEntity: \"service\",\n          collect: collect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 664\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-grey click\",\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"5rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 665\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"serviceCircle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 673\n          },\n          __self: this\n        }), service.name)));\n      }) : \"\", item.references ? item.references.map((referenceData, i) => {\n        return React.createElement(ContextMenuTrigger, {\n          key: i,\n          id: \"default_right_click\",\n          itemName: referenceData.name,\n          itemId: referenceData.id,\n          itemEntity: \"reference\",\n          collect: collect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 685\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          key: referenceData.id,\n          className: \"text-grey click\",\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"3rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 686\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: reference,\n          alt: \"starlify\",\n          className: \"m-r-15 m-b-5 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 693\n          },\n          __self: this\n        }), referenceData.name));\n      }) : \"\", item.subsystems ? item.subsystems.map((subsystems, i) => {\n        this.subSystem(subsystems);\n        return React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 709\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-grey click \".concat(this.state.currentSubSystemIndex === subsystems ? 'active ' : ''),\n          onClick: () => this.subSystemToggle(subsystems),\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"3rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 710\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"system-down-icon left text-white \".concat(this.state.testData.services || this.state.testData.references ? 'fas fa-chevron-down' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 722\n          },\n          __self: this\n        }), React.createElement(\"img\", {\n          src: subsystem,\n          alt: \"starlify\",\n          className: \"m-r-15 m-b-5 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 723\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          id: subsystems,\n          className: this.state.ids.includes(subsystems) ? \"highlight\" : \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 728\n          },\n          __self: this\n        }, this.state.testData.name, \"                                                                                      }\")), React.createElement(Collapse, {\n          isOpen: this.state.currentSubSystemIndex === subsystems ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 741\n          },\n          __self: this\n        }, this.state.testData.services ? this.state.testData.services.map((service, i) => {\n          return React.createElement(\"div\", {\n            id: service.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 754\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-grey click\",\n            style: {\n              marginBottom: \"1rem\",\n              marginLeft: \"4rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 755\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: services,\n            alt: \"starlify\",\n            className: \"m-r-15 m-b-5 \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 763\n            },\n            __self: this\n          }), service.name));\n        }) : \"\", this.state.testData.references ? this.state.testData.references.map((references, i) => {\n          return React.createElement(\"div\", {\n            id: references.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 779\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-grey click\",\n            style: {\n              marginBottom: \"1rem\",\n              marginLeft: \"4rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 780\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: reference,\n            alt: \"starlify\",\n            className: \"m-r-15 m-b-5 \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 788\n            },\n            __self: this\n          }), reference.name));\n        }) : \"\"));\n      }) : \"\"));\n    }) : \"\"))), React.createElement(\"div\", {\n      className: \"flows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      className: \"text-white click flowClick \".concat(this.state.flowsCollapse ? 'active ' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815\n      },\n      __self: this\n    }, \"Flows\", React.createElement(\"i\", {\n      className: \"fas fa-chevron-down system-down-icon\",\n      onClick: this.flowsMenuToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819\n      },\n      __self: this\n    }), !this.state.flowAdd && React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon\",\n      id: \"flows\",\n      onClick: e => {\n        this.addUiToggle(e, 'flow');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      style: {\n        height: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831\n      },\n      __self: this\n    }, this.state.flowAdd && React.createElement(\"div\", {\n      className: \"extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"flow\",\n      onKeyDown: this.createEntity.bind(this),\n      onFocus: e => {\n        this.resetAddUiToggle(e, 'flow');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => {\n        this.addUiToggle(e, 'flow');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-times\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844\n      },\n      __self: this\n    }))), React.createElement(Collapse, {\n      isOpen: this.state.flowsCollapse,\n      id: \"FlowListing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847\n      },\n      __self: this\n    }, this.state.systemData.flows ? this.state.systemData.flows.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851\n        },\n        __self: this\n      }, React.createElement(ContextMenuTrigger, {\n        id: \"default_right_click\",\n        itemName: item.name,\n        itemId: item.id,\n        itemEntity: \"flow\",\n        collect: collect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey click\",\n        style: {\n          marginBottom: \"1rem\",\n          marginLeft: \"2rem\"\n        },\n        onClick: () => this.flowsToggle(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: item.id,\n        className: this.state.ids.includes(item.id) ? \"highlight\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861\n        },\n        __self: this\n      }, item.name))));\n    }) : \"\")))))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onHighlightClick: systemId => {\n      const action = {\n        type: \"HIGHLIGHT\",\n        system: systemId\n      };\n      dispatch(action);\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Systems);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/Systems.js"],"names":["React","Component","Collapse","Modal","ModalBody","Input","Label","VerticalScrollbars","subsystem","services","reference","ContextMenu","MenuItem","ContextMenuTrigger","connect","collect","props","itemEntity","itemName","itemId","Systems","constructor","renameHandleChange","e","setState","target","value","addUiToggle","bind","resetAddUiToggle","systemMenuToggle","flowsMenuToggle","systemToggle","flowsToggle","subSystemToggle","systemSelected","close","flowsSelected","modalToggle","state","modal","flowsCollapse","systemsCollapse","collapseSystem","collapseSubSystem","currentSystemIndex","currentSubSystemIndex","currentFlowIndex","systemData","system","showsystemDetail","showflowDetail","systemDetails","flowDetails","flow","searchString","ids","search","itemValue","itemType","systemAdd","flowAdd","systemId","servicesList","serviceId","testData","componentWillMount","fetchSystemAndFlows","fetch","process","env","REACT_APP_API","method","headers","then","response","json","responseJson","event","type","menu","flowId","status","flowDetail","onHighlightClick","createEntity","key","id","body","JSON","stringify","name","createService","prevState","createReference","createSubSyetem","deleteEntity","updateEntity","data","getSystems","index","selectedIndex","parents","systems","parent","filter","serviceChangeHandle","subSystem","item","render","className","map","searchSystem","marginBottom","height","marginLeft","references","subsystems","includes","service","i","referenceData","flows","mapDispatchToProps","dispatch","action"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Collapse, Modal, ModalBody, Input, Label } from \"reactstrap\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport subsystem from \"../../../_assets/images/subsystem.png\";\nimport services from \"../../../_assets/images/services.png\";\nimport reference from \"../../../_assets/images/reference.png\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport { connect } from 'react-redux';\n\n\nfunction collect(props) {\n    if (props.itemEntity)\n        return { itemName: props.itemName, itemId: props.itemId, itemEntity: props.itemEntity };\n    else\n        return { itemName: props.itemName, itemId: props.itemId };\n}\n\nclass Systems extends Component {\n    constructor(props) {\n        super(props);\n        this.addUiToggle = this.addUiToggle.bind(this);\n        this.resetAddUiToggle = this.resetAddUiToggle.bind(this);\n        this.systemMenuToggle = this.systemMenuToggle.bind(this);\n        this.flowsMenuToggle = this.flowsMenuToggle.bind(this);\n        this.systemToggle = this.systemToggle.bind(this);\n        this.flowsToggle = this.flowsToggle.bind(this);\n        this.subSystemToggle = this.subSystemToggle.bind(this);\n        this.systemSelected = this.systemSelected.bind(this);\n        this.close = this.close.bind(this);\n        this.flowsSelected = this.flowsSelected.bind(this);\n        this.modalToggle = this.modalToggle.bind(this);\n        this.state = {\n            modal: false,\n            flowsCollapse: true,\n            systemsCollapse: true,\n            collapseSystem: false,\n            collapseSubSystem: false,\n            currentSystemIndex: \"\",\n            currentSubSystemIndex: \"\",\n            currentFlowIndex: \"\",\n            systemData: { system: \"\" },\n            showsystemDetail: false,\n            showflowDetail: false,\n            systemDetails: {},\n            flowDetails: {},\n            system: [],\n            flow: [],\n            searchString: \"\",\n            ids: [],\n            search: false,\n            itemId: '',\n            itemName: '',\n            itemValue: '',\n            itemType: '',\n            itemEntity: '',\n            systemAdd: false,\n            flowAdd: false,\n            systemId: '',\n            servicesList: '',\n            serviceId: '',\n            testData: '',\n        };\n    }\n\n    //fetch system and flows before mounting occurs\n    componentWillMount() {\n        this.fetchSystemAndFlows()\n    }\n\n    //fetch system and flows\n    fetchSystemAndFlows() {\n        return fetch(\n            process.env.REACT_APP_API + \"model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6\",\n            {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            }\n        )\n            .then(response => response.json())\n            .then(responseJson => {\n                this.setState({ systemData: responseJson });\n            });\n    }\n\n    //manage add more system/flow text box to ui\n    addUiToggle(event, type) {\n        if (type === 'system') {\n            this.setState(state => ({ systemAdd: !state.systemAdd, itemEntity: 'system' }));\n        } else {\n            this.setState(state => ({ flowAdd: !state.flowAdd, itemEntity: 'flow' }));\n        }\n\n    }\n\n    //setting entity while add more systems/flows\n    resetAddUiToggle(event, type) {\n        if (type === 'system') {\n            this.setState(state => ({ itemEntity: 'system' }));\n        } else {\n            this.setState(state => ({ itemEntity: 'flow' }));\n        }\n\n    }\n\n    //setting system id on click\n    systemSelected(systemId) {\n        this.props.systemSelected(systemId);\n    }\n\n    close(menu, type) {\n        this.props.close(menu, type);\n    }\n\n    flowsSelected(flowId, status) {\n        this.props.flowsSelected(flowId, status);\n    }\n\n    systemMenuToggle() {\n        this.setState(state => ({ systemsCollapse: !state.systemsCollapse }));\n    }\n    flowsMenuToggle() {\n        this.setState(state => ({ flowsCollapse: !state.flowsCollapse }));\n    }\n\n    flowsToggle(flowId) {\n\n        if (\n            this.state.currentFlowIndex === flowId ||\n            (!this.state.showflowDetail && this.state.search)\n        ) {\n            this.setState({ search: false })\n            this.setState({ currentFlowIndex: 0 })\n                ;\n            this.flowsSelected(flowId, true);\n        } else {\n            this.setState({ currentFlowIndex: flowId });\n            this.setState({ showflowDetail: true });\n            this.flowsSelected(flowId, true);\n            return fetch(\n                process.env.REACT_APP_API +\n                \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow/72ad974f-e4e2-41c2-8838-79ebd240f315\",\n                {\n                    method: \"GET\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                }\n            )\n                .then(response => response.json())\n                .then(responseJson => {\n                    this.setState({ flowDetail: responseJson });\n                });\n        }\n    }\n\n    //system listing toggle\n    systemToggle(systemId) {\n        if (\n            this.state.currentSystemIndex === systemId ||\n            (!this.state.showsystemDetail && this.state.search)\n        ) {\n            this.setState({ search: false })\n            this.setState({ currentSystemIndex: 0 });\n            this.systemSelected(systemId);\n        } else {\n            this.setState({ currentSystemIndex: systemId });\n            this.systemSelected(systemId);\n        }\n        this.props.onHighlightClick(systemId);\n    }\n\n    //sub system listing toggle\n    subSystemToggle(systemId) {\n        this.setState({ collapseSubSystem: !this.state.collapseSubSystem });\n        if (this.state.currentSubSystemIndex === systemId) {\n            this.setState({ currentSubSystemIndex: 0 })\n            this.systemSelected(systemId);\n\n        } else {\n            this.setState({ currentSubSystemIndex: systemId });\n            this.systemSelected(systemId);\n        }\n    }\n\n    //create entity \n    createEntity(event) {\n        let value = event.target.value;\n        if (event.key === 'Enter') {\n            event.target.value = '';\n            fetch(\n                process.env.REACT_APP_API +\n                `model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/${this.state.itemEntity}`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                }\n            )\n                .then(response => response.json())\n                .then(responseJson => {\n                    return fetch(\n                        process.env.REACT_APP_API +\n                        `model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/${this.state.itemEntity}/` +\n                        responseJson.id,\n                        {\n                            method: \"PATCH\",\n                            headers: {\n                                \"Content-Type\": \"application/json\"\n                            },\n                            body: JSON.stringify({ name: value })\n                        }\n                    )\n                        .then(response => response.json())\n                        .then(responseJson => {\n                            this.fetchSystemAndFlows();\n                        });\n                });\n        }\n    }\n\n\n    //create service\n    createService(event) {\n        let value = event.target.value;\n        if ((event.key === 'Enter' || event.type === 'blur') && value) {\n            event.target.value = '';\n            this.setState(prevState => ({\n                modal: !prevState.modal\n            }));\n\n            fetch(\n                process.env.REACT_APP_API +\n                `model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/system/${this.state.itemId}/service`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                }\n            )\n                .then(response => response.json())\n                .then(responseJson => {\n                    return fetch(\n                        process.env.REACT_APP_API +\n                        `model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/service/` + responseJson.id,\n\n                        {\n                            method: \"PATCH\",\n                            headers: {\n                                \"Content-Type\": \"application/json\"\n                            },\n                            body: JSON.stringify({ name: value })\n                        }\n                    )\n                        .then(response => {this.fetchSystemAndFlows()})\n                });\n        }\n    }\n\n    //create service\n    createReference(event) {\n        let value = event.target.value;\n        if ((event.key === 'Enter' || event.type === 'blur') && value) {\n            event.target.value = '';\n            this.setState(prevState => ({\n                modal: !prevState.modal\n            }));\n\n            fetch(\n                process.env.REACT_APP_API +\n                `model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/system/${this.state.systemId}/reference/${this.state.serviceId}`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({ name: value })\n                }\n            )\n                .then(response => response.json())\n                .then(responseJson => {\n                    return fetch(\n                        process.env.REACT_APP_API +\n                        `model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/reference/` + responseJson.id,\n\n                        {\n                            method: \"PATCH\",\n                            headers: {\n                                \"Content-Type\": \"application/json\"\n                            },\n                            body: JSON.stringify({ name: value })\n                        }\n                    )\n                        .then(response => response.json())\n                        .then(responseJson => {\n                            this.fetchSystemAndFlows();\n                        })\n                });\n        }\n    }\n\n\n    //create entity \n    createSubSyetem(event) {\n        let value = event.target.value;\n        if (event.key === 'Enter') {\n            event.target.value = '';\n            fetch(\n                process.env.REACT_APP_API +\n                `model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/${this.state.itemEntity}/${this.state.itemId}/${this.state.itemEntity}`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                }\n            )\n                .then(response => response.json())\n                .then(responseJson => {\n                    return fetch(\n                        process.env.REACT_APP_API +\n                        `model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/${this.state.itemEntity}/` +\n                        responseJson.id,\n                        {\n                            method: \"PATCH\",\n                            headers: {\n                                \"Content-Type\": \"application/json\"\n                            },\n                            body: JSON.stringify({ name: value })\n                        }\n                    )\n                        .then(response => {this.fetchSystemAndFlows()})\n                });\n        }\n    }\n\n    //Delete entity\n    deleteEntity() {\n        return fetch(\n            process.env.REACT_APP_API +\n            `model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/${this.state.itemEntity === 'flow' ? 'flow' : 'modeled'}/${this.state.itemId}`,\n            {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            }\n        )\n            .then(response => {\n                this.setState(prevState => ({\n                    modal: !prevState.modal\n                }));\n                this.fetchSystemAndFlows()\n            });\n    }\n\n    //update item value for edit\n    renameHandleChange = (e) => {\n        this.setState({ itemName: e.target.value });\n    }\n\n    //Update entity\n    updateEntity(event) {\n\n        if (event.key === 'Enter' || event.type === 'blur') {\n            let value = event.target.value;\n            event.target.value = '';\n            this.setState(prevState => ({\n                modal: !prevState.modal\n            }));\n            fetch(\n                process.env.REACT_APP_API +\n                `model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/${this.state.itemEntity}/` +\n                this.state.itemId,\n                {\n                    method: \"PATCH\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({ name: value })\n                }\n            )\n                .then(responseJson => { this.fetchSystemAndFlows() });\n        }\n\n    }\n\n    //control right click modal\n    modalToggle(e, data) {\n        //console.log(data)\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n\n        if (data) {\n            //console.log(data)\n            this.setState({\n                itemId: data.itemId,\n                itemName: data.itemName,\n                itemType: data.itemType,\n                itemEntity: data.itemEntity\n            })\n\n        }\n    }\n\n    //get systems and services list for adding new reference\n    getSystems(event) {\n        let index = event.target.selectedIndex;\n        let id = event.target[index].id\n        this.setState({ systemId: id })\n        let parents = this.state.systemData.systems;\n        let parent = parents.filter(parent => parent.name === event.target.value);\n        this.setState({ servicesList: parent[0].services });\n    }\n\n    serviceChangeHandle(event) {\n        this.setState({ serviceId: event.target.value })\n    }\n\n\n    subSystem(item) {\n        if (item) {\n            return fetch(\n                process.env.REACT_APP_API + \"model/6c161cbe-0d86-413b-8ea1-0bbb2ba9e5d6/system/\" + item,\n                {\n                    method: \"GET\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                }\n            )\n                .then(response => response.json())\n                .then(responseJson => {\n                    this.setState({ testData: responseJson });\n                })\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"org_browser\" >\n              <ContextMenu id=\"system_right_click\">\n                    <MenuItem data={{ itemType: 'add_sub_system', itemEntity: 'system' }} onClick={this.modalToggle}>\n                        Add Sub System\n            </MenuItem>\n                    <MenuItem data={{ itemType: 'service', itemEntity: 'service' }} onClick={this.modalToggle}>\n                        Add Service\n            </MenuItem>\n                    <MenuItem data={{ itemType: 'add_reference', itemEntity: 'reference' }} onClick={this.modalToggle}>\n                        Add Reference\n            </MenuItem>\n                    <MenuItem data={{ itemType: 'delete', itemEntity: 'system' }} onClick={this.modalToggle}>\n                        Delete\n            </MenuItem>\n                    <MenuItem data={{ itemType: 'rename', itemEntity: 'system' }} onClick={this.modalToggle}>\n                        Rename\n            </MenuItem>\n                </ContextMenu>\n            <ContextMenu id=\"default_right_click\">\n\n                    <MenuItem data={{ itemType: 'delete' }} onClick={this.modalToggle}>\n                        Delete\n            </MenuItem>\n                    <MenuItem data={{ itemType: 'rename' }} onClick={this.modalToggle}>\n                        Rename\n            </MenuItem>\n                </ContextMenu>\n                <Modal isOpen={this.state.modal} toggle={this.modalToggle} className={this.props.className}>\n                    <ModalBody className={this.state.itemType === 'delete' ? 'text-center delete-modal-body ' : ''}>\n                        {this.state.itemType === 'add_sub_system' && (\n                            <div>\n                                <h4 className=\"text-center m-b-30\">Create new sub system</h4>\n                                <input\n                                    type=\"text\"\n                                    className=\"text-input\"\n                                    placeholder=\"Add New Sub System\"\n                                    onBlur={this.createSubSyetem.bind(this)}\n                                    onKeyDown={this.createSubSyetem.bind(this)}\n                                />\n                            </div>)}\n                        {this.state.itemType === 'service' && (\n                            <div>\n                                <h4 className=\"text-center m-b-30\">Create new service.</h4>\n                                <input\n                                    type=\"text\"\n                                    className=\"text-input\"\n                                    placeholder=\"Add New Service\"\n                                    onBlur={this.createService.bind(this)}\n                                    onKeyDown={this.createService.bind(this)}\n                                />\n\n                            </div>)}\n                        {this.state.itemType === 'add_reference' && (\n                            <div>\n                                <h4 className=\"text-center m-b-30\">Create new reference.</h4>\n                                <div className=\"row formGroupWrapper\">\n                                    <div className=\"form-group col-md-3\">\n                                        <Label for=\"exampleSelect\">System</Label>\n                                        <Input type=\"select\" name=\"select\" onChange={this.getSystems.bind(this)}>\n                                            <option>System</option>\n                                            {this.state.systemData.systems\n                                                ? this.state.systemData.systems.map((item, index) => {\n                                                    return (\n                                                        this.state.itemId === item.id ? '' : <option value={item.name} id={item.id}>{item.name}</option>\n\n                                                    )\n                                                }) : ''}\n\n                                        </Input>\n                                    </div>\n                                    <div className=\"form-group col-md-3\">\n                                        <Label for=\"exampleSelect\">Service</Label>\n                                        <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={this.serviceChangeHandle.bind(this)}>\n                                            <option>Service</option>\n                                            {this.state.servicesList\n                                                ? this.state.servicesList.map((item, index) => {\n                                                    return (\n                                                        <option value={item.id}>{item.name}</option>\n                                                    )\n                                                }) : ''}\n                                        </Input>\n                                    </div>\n                                    <div className=\"form-group col-md-6\">\n                                        <Input type=\"text\" name=\"text\" id=\"example\" placeholder=\"Add New Reference\" onBlur={this.createReference.bind(this)}\n                                            onKeyDown={this.createReference.bind(this)} />\n                                    </div>\n                                </div>\n\n                            </div>)}\n                        {this.state.itemType === 'rename' && (\n                            <div>\n                                <h4 className=\"text-center m-b-30\">Do you want to rename?</h4>\n                                <input\n                                    type=\"text\"\n                                    className=\"text-input\"\n                                    placeholder=\"Rename\"\n                                    value={this.state.itemName}\n                                    onBlur={this.updateEntity.bind(this)}\n                                    onChange={this.renameHandleChange.bind(this)}\n                                    onKeyDown={this.updateEntity.bind(this)}\n                                />\n\n                            </div>)}\n                        {this.state.itemType === 'delete' && (\n                            <div>\n                                <h4>Are you sure?</h4>\n                                <p>Do you really want to delete these records? <br />\n                                    Process cannot be undone</p>\n                                <div className=\"delete-button\">\n                                    <button class=\"btn transparent-btn\" onClick={this.modalToggle}>cancel</button>\n                                    <button class=\"btn green-btn\" onClick={this.deleteEntity.bind(this)}>confirm</button>\n                                </div></div>)}\n                    </ModalBody>\n                </Modal>\n                <h3 className=\"text-center text-white\">\n                    Systems and Flows\n                    <i className=\"fas fa-times system-down-icon browser_close\" onClick={() => this.close('system', 'menu')} />\n                </h3>\n                <VerticalScrollbars autoHide>\n\n                    <div className=\"browser_wrapper\">\n                        <div className=\"org-selector\">\n                            <p className=\"text-white text-left\">Selector</p>\n                            <div className=\"_search\" id=\"searchControl\">\n                                <input\n                                    type=\"text\"\n                                    className=\"search-input\"\n                                    onKeyUp={this.searchSystem}/>\n                                <span className=\"icon icon-Search search-icon\" />\n                            </div>\n                            <div className=\"systems w-100 d-inline-block montserrat text-grey\">\n                                <div className=\"system-search montserrat\" />\n\n                                <p\n                                    className={`text-white click systemClick ${this.state.systemsCollapse ? 'active ' : ''}`}\n                                    style={{ marginBottom: \"1rem\" }}\n                                >\n                                    <span onClick={this.systemMenuToggle}>\n                                        Systems\n                                    <i className=\"fas fa-chevron-down system-down-icon\" />\n\n                                    </span>\n                                    {!this.state.systemAdd && (\n                                        <i\n                                            className=\"fas fa-plus system-down-icon\"\n                                            id=\"system\"\n\n                                            onClick={(e) => {\n                                                this.addUiToggle(e, 'system')\n                                            }}\n                                        />)}\n                                </p>\n                                <VerticalScrollbars style={{ height: 220 }}>\n                                    {this.state.systemAdd && (<div className=\"extra-add\">\n                                        <input\n                                            type=\"text\"\n                                            id=\"system\"\n                                            onKeyDown={this.createEntity.bind(this)}\n                                            onFocus={(e) => {\n                                                this.resetAddUiToggle(e, 'system')\n                                            }}\n                                        />\n                                        <button type=\"button\" onClick={(e) => {\n                                            this.addUiToggle(e, 'system')\n                                        }}>\n                                            <i className=\"fas fa-times\" />\n                                        </button>\n                                    </div>)}\n\n                                    <Collapse\n                                        isOpen={this.state.systemsCollapse}\n                                        id=\"systemListing\"\n\n                                    >\n                                        {this.state.systemData.systems\n                                            ? this.state.systemData.systems.map((item, index) => {\n                                                return (\n                                                    <div key={item.id} className=\"listingItem\">\n                                                        <ContextMenuTrigger id=\"system_right_click\" itemName={item.name} itemId={item.id} collect={collect}>\n                                                            <p\n                                                                className={`text-grey click ${this.state.currentSystemIndex === item.id ? 'active ' : ''}`}\n                                                                onClick={() => this.systemToggle(item.id)}\n                                                                style={{\n                                                                    marginLeft: \"1rem\"\n                                                                }}\n                                                            >\n\n                                                                <i className={`system-down-icon left text-white ${(item.services || item.references || item.subsystems) ? 'fas fa-chevron-down' : ''}`} />\n                                                                <span className=\"systemCircle\" />\n\n                                                                <span\n                                                                    id={item.id}\n                                                                    onClick={() => this.systemToggle(item.id)}\n                                                                    className={\n                                                                        this.state.ids.includes(item.id)\n                                                                            ? \"highlight \"\n                                                                            : \"test text-grey\"\n                                                                    }\n                                                                >\n                                                                    {item.name}\n                                                                </span>\n\n\n\n                                                            </p>\n                                                        </ContextMenuTrigger>\n                                                        <Collapse\n                                                            isOpen={\n                                                                this.state.currentSystemIndex === item.id ||\n                                                                    this.state.search\n                                                                    ? true\n                                                                    : false\n                                                            }\n                                                        >\n                                                            {item.services\n                                                                ? item.services.map((service, i) => {\n                                                                    return (\n                                                                        <div id={service.id} key={service.id}>\n                                                                            <ContextMenuTrigger id=\"default_right_click\" itemName={service.name} itemId={service.id} itemEntity=\"service\" collect={collect}>\n                                                                                <p\n                                                                                    className=\"text-grey click\"\n                                                                                    style={{\n                                                                                        marginBottom: \"1rem\",\n                                                                                        marginLeft: \"5rem\"\n                                                                                    }}\n                                                                                >\n\n                                                                                    <span className=\"serviceCircle\" />\n                                                                                    {service.name}\n                                                                                </p>\n                                                                            </ContextMenuTrigger>\n                                                                        </div>\n                                                                    );\n                                                                })\n                                                                : \"\"}\n\n                                                            {item.references\n                                                                ? item.references.map((referenceData, i) => {\n                                                                    return (\n                                                                        <ContextMenuTrigger key={i} id=\"default_right_click\" itemName={referenceData.name} itemId={referenceData.id} itemEntity=\"reference\" collect={collect}>\n                                                                            <p key={referenceData.id}\n                                                                                className=\"text-grey click\"\n                                                                                style={{\n                                                                                    marginBottom: \"1rem\",\n                                                                                    marginLeft: \"3rem\"\n                                                                                }}\n                                                                            >\n                                                                                <img\n                                                                                    src={reference}\n                                                                                    alt=\"starlify\"\n                                                                                    className=\"m-r-15 m-b-5 \"\n                                                                                />\n                                                                                {referenceData.name}\n                                                                            </p>\n                                                                        </ContextMenuTrigger>\n                                                                    );\n                                                                })\n                                                                : \"\"}\n\n                                                            {item.subsystems\n                                                                ? item.subsystems.map((subsystems, i) => {\n                                                                    this.subSystem(subsystems)\n                                                                    return (\n                                                                        <div key={i}>\n                                                                            <p\n                                                                                className={`text-grey click ${this.state.currentSubSystemIndex === subsystems ? 'active ' : ''}`}\n                                                                                onClick={() =>\n                                                                                    this.subSystemToggle(\n                                                                                        subsystems\n                                                                                    )\n                                                                                }\n                                                                                style={{\n                                                                                    marginBottom: \"1rem\",\n                                                                                    marginLeft: \"3rem\"\n                                                                                }}\n                                                                            >\n                                                                                <i className={`system-down-icon left text-white ${(this.state.testData.services || this.state.testData.references) ? 'fas fa-chevron-down' : ''}`} />\n                                                                                <img\n                                                                                    src={subsystem}\n                                                                                    alt=\"starlify\"\n                                                                                    className=\"m-r-15 m-b-5 \"\n                                                                                />\n                                                                                <span\n                                                                                    id={subsystems}\n                                                                                    className={\n                                                                                        this.state.ids.includes(\n                                                                                            subsystems\n                                                                                        )\n                                                                                            ? \"highlight\"\n                                                                                            : \"\"\n                                                                                    }\n                                                                                >\n                                                                                  {this.state.testData.name}                                                                                      }\n                                                                                </span>\n                                                                            </p>\n                                                                            <Collapse\n                                                                                isOpen={\n                                                                                    this.state\n                                                                                        .currentSubSystemIndex ===\n                                                                                        subsystems\n                                                                                        ? true\n                                                                                        : false\n                                                                                }\n                                                                            >\n                                                                                {this.state.testData.services\n                                                                                    ? this.state.testData.services.map(\n                                                                                        (service, i) => {\n                                                                                            return (\n                                                                                                <div id={service.id}>\n                                                                                                    <p\n                                                                                                        className=\"text-grey click\"\n                                                                                                        style={{\n                                                                                                            marginBottom:\n                                                                                                                \"1rem\",\n                                                                                                            marginLeft: \"4rem\"\n                                                                                                        }}\n                                                                                                    >\n                                                                                                        <img\n                                                                                                            src={services}\n                                                                                                            alt=\"starlify\"\n                                                                                                            className=\"m-r-15 m-b-5 \"\n                                                                                                        />\n                                                                                                        {service.name}\n                                                                                                    </p>\n                                                                                                </div>\n                                                                                            );\n                                                                                        }\n                                                                                    )\n                                                                                    : \"\"}\n                                                                                {this.state.testData.references\n                                                                                    ? this.state.testData.references.map(\n                                                                                        (references, i) => {\n                                                                                            return (\n                                                                                                <div id={references.id}>\n                                                                                                    <p\n                                                                                                        className=\"text-grey click\"\n                                                                                                        style={{\n                                                                                                            marginBottom:\n                                                                                                                \"1rem\",\n                                                                                                            marginLeft: \"4rem\"\n                                                                                                        }}\n                                                                                                    >\n                                                                                                        <img\n                                                                                                            src={reference}\n                                                                                                            alt=\"starlify\"\n                                                                                                            className=\"m-r-15 m-b-5 \"\n                                                                                                        />\n                                                                                                        {reference.name}\n                                                                                                    </p>\n                                                                                                </div>\n                                                                                            );\n                                                                                        }\n                                                                                    )\n                                                                                    : \"\"}\n                                                                            </Collapse>\n                                                                        </div>\n                                                                    );\n                                                                })\n                                                                : \"\"}\n\n                                                        </Collapse>\n                                                    </div>\n                                                );\n                                            })\n                                            : \"\"}\n                                    </Collapse>\n                                </VerticalScrollbars>\n                            </div>\n                            <div className=\"flows\">\n                                <p\n                                    style={{ marginBottom: \"1rem\" }}\n                                    className={`text-white click flowClick ${this.state.flowsCollapse ? 'active ' : ''}`}\n                                >\n                                    Flows<i className=\"fas fa-chevron-down system-down-icon\" onClick={this.flowsMenuToggle} />\n\n                                    {!this.state.flowAdd && (<i\n                                        className=\"fas fa-plus system-down-icon\"\n                                        id=\"flows\"\n\n                                        onClick={(e) => {\n                                            this.addUiToggle(e, 'flow')\n                                        }}\n                                    />)}\n\n                                </p>\n                                <VerticalScrollbars style={{ height: 200 }}>\n                                    {this.state.flowAdd && (<div className=\"extra-add\">\n                                        <input\n                                            type=\"text\"\n                                            id=\"flow\"\n                                            onKeyDown={this.createEntity.bind(this)}\n                                            onFocus={(e) => {\n                                                this.resetAddUiToggle(e, 'flow')\n                                            }}\n                                        />\n                                        <button type=\"button\" onClick={(e) => {\n                                            this.addUiToggle(e, 'flow')\n                                        }}>\n                                            <i className=\"fas fa-times\" />\n                                        </button>\n                                    </div>)}\n                                    <Collapse isOpen={this.state.flowsCollapse} id=\"FlowListing\">\n                                        {this.state.systemData.flows\n                                            ? this.state.systemData.flows.map((item, index) => {\n                                                return (\n                                                    <div key={item.id}>\n                                                        <ContextMenuTrigger id=\"default_right_click\" itemName={item.name} itemId={item.id} itemEntity=\"flow\" collect={collect}>\n                                                            <p\n                                                                className=\"text-grey click\"\n                                                                style={{\n                                                                    marginBottom: \"1rem\",\n                                                                    marginLeft: \"2rem\"\n                                                                }}\n                                                                onClick={() => this.flowsToggle(item.id)}\n                                                            >\n                                                                <span\n                                                                    id={item.id}\n                                                                    className={\n                                                                        this.state.ids.includes(item.id)\n                                                                            ? \"highlight\"\n                                                                            : \"\"\n                                                                    }\n                                                                >\n                                                                    {item.name}\n                                                                </span>\n                                                            </p>\n                                                        </ContextMenuTrigger>\n                                                    </div>\n                                                );\n                                            })\n                                            : \"\"}\n                                    </Collapse>\n                                </VerticalScrollbars>\n                            </div>\n                        </div>\n                    </div>\n                </VerticalScrollbars>\n\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onHighlightClick: (systemId) => {\n            const action = { type: \"HIGHLIGHT\", system: systemId };\n            dispatch(action);\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Systems);\n"]},"metadata":{},"sourceType":"module"}