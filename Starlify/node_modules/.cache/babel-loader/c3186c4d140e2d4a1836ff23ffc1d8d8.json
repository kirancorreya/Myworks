{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/Systems.js\";\nimport React, { Component } from 'react';\nimport { Collapse } from 'reactstrap';\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport subsystem from \"../../../_assets/images/subsystem.png\";\nimport services from \"../../../_assets/images/services.png\";\nimport reference from \"../../../_assets/images/reference.png\";\n\nclass Systems extends Component {\n  constructor(props) {\n    super(props);\n    this.systemMenuToggle = this.systemMenuToggle.bind(this);\n    this.systemToggle = this.systemToggle.bind(this);\n    this.flowsToggle = this.flowsToggle.bind(this);\n    this.subSystemToggle = this.subSystemToggle.bind(this);\n    this.searchSystem = this.searchSystem.bind(this);\n    this.systemSelected = this.systemSelected.bind(this);\n    this.state = {\n      flowsCollapse: true,\n      systemsCollapse: true,\n      collapseSystem: false,\n      collapseSubSystem: false,\n      currentSystemIndex: '',\n      currentSubSystemIndex: '',\n      systemData: {\n        system: ''\n      },\n      showsystemDetail: false,\n      systemDetails: {},\n      values: [],\n      system: [],\n      flow: []\n    };\n  }\n\n  componentWillMount() {\n    return fetch(process.env.REACT_APP_API + 'model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(responseJson => {\n      this.setState({\n        systemData: responseJson\n      });\n    });\n  }\n\n  createSystem() {\n    return this.state.system ? this.state.system.map((el, i) => React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"system\",\n      onBlur: this.handleChange.bind(this, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"remove\",\n      onClick: this.removeClick.bind(this, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))) : '';\n  }\n\n  createFlow() {\n    return this.state.flow ? this.state.flow.map((el, i) => React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"flow\",\n      onBlur: this.handleChange.bind(this, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"remove\",\n      onClick: this.removeClick.bind(this, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))) : '';\n  }\n\n  handleChange(i, event) {\n    let type = event.target.id;\n    let systemName = event.target.value;\n\n    if (type == \"system\") {\n      let values = [...this.state.system];\n      values[i] = event.target.value;\n      this.setState({\n        values\n      });\n      this.state.system.splice(i, 1);\n      console.log(this.state.system);\n      return fetch(process.env.REACT_APP_API + 'model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + 'model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/' + responseJson.id, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"name\": systemName\n          })\n        }).then(response => response.json()).then(responseJson => {});\n      });\n    } else {\n      let values = [...this.state.flow];\n      values[i] = event.target.value;\n      this.setState({\n        values\n      }); //this.state.system.splice(i, 1);\n      //console.log(this.state.system)\n\n      this.state.flow.splice(i, 1);\n      return fetch(process.env.REACT_APP_API + 'model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + 'model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow/' + responseJson.id, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"name\": systemName\n          })\n        }).then(response => response.json()).then(responseJson => {});\n      });\n    }\n  }\n\n  addClick(event) {\n    if (event.target.id == \"system\") this.setState(prevState => ({\n      system: [...prevState.system, '']\n    }));else this.setState(prevState => ({\n      flow: [...prevState.flow, '']\n    }));\n  }\n\n  removeClick(i) {//let value = [...this.state.values];\n    //value.splice(i, 1);\n    //this.setState({ values : value });\n    // console.log(values)\n  }\n\n  systemSelected(systemId) {\n    this.props.systemSelected(systemId);\n  }\n\n  systemMenuToggle() {\n    this.setState(state => ({\n      systemsCollapse: !state.systemsCollapse\n    }));\n  }\n\n  flowsToggle() {\n    this.setState(state => ({\n      flowsCollapse: !state.flowsCollapse\n    }));\n  }\n\n  systemToggle(systemId) {\n    this.systemSelected(systemId);\n    this.setState({\n      collapse: !this.state.collapse\n    });\n\n    if (this.state.currentSystemIndex == systemId) {\n      this.state.currentSystemIndex = 0;\n    } else {\n      this.setState({\n        currentSystemIndex: systemId\n      });\n      this.setState({\n        showsystemDetail: true\n      });\n      return fetch(process.env.REACT_APP_API + 'model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/f1dc3452-e1a5-4a4e-9ae4-5fee3b34b647', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(responseJson => {\n        this.setState({\n          systemDetails: responseJson\n        });\n      });\n    }\n  }\n\n  subSystemToggle(systemId) {\n    this.setState({\n      collapseSubSystem: !this.state.collapseSubSystem\n    });\n\n    if (this.state.currentSubSystemIndex == systemId) {\n      this.state.currentSubSystemIndex = 0;\n    } else {\n      this.setState({\n        currentSubSystemIndex: systemId\n      });\n    }\n  }\n\n  searchSystem(event) {\n    var searchedPara = document.querySelector('.systems');\n    var words = event.currentTarget.value;\n    var regex = RegExp(words, 'gi');\n    var replacement = '<div className=\"text-white\"><b>' + words + '</b></div>';\n    var newHTML = searchedPara.textContent.replace(regex, replacement);\n    searchedPara.innerHTML = newHTML;\n  }\n\n  render() {\n    return React.createElement(VerticalScrollbars, {\n      style: {\n        width: 350\n      },\n      autoHide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org_browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Systems and Flows \", React.createElement(\"i\", {\n      class: \"fas fa-times system-down-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"org-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Selector\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-input\",\n      onKeyUp: this.searchSystem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"icon icon-Search search-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"systems w-100 d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(VerticalScrollbars, {\n      style: {\n        height: 220\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white click\",\n      onClick: this.systemMenuToggle,\n      style: {\n        marginBottom: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Systems \", React.createElement(\"i\", {\n      className: \"fas fa-chevron-down system-down-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon\",\n      id: \"system\",\n      onClick: this.addClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })), this.createSystem(), React.createElement(Collapse, {\n      isOpen: this.state.systemsCollapse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, this.state.systemData.systems ? this.state.systemData.systems.map((item, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey click\",\n        onClick: () => this.systemToggle(item.id),\n        style: {\n          marginBottom: \"1rem\",\n          marginLeft: \"1rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: subsystem,\n        alt: \"starlify\",\n        className: \"m-r-15 m-b-5 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), item.name ? item.name : 'Empty System Name'), React.createElement(Collapse, {\n        isOpen: this.state.currentSystemIndex == item.id ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, item.services ? item.services.map((service, i) => {\n        return React.createElement(\"div\", {\n          id: service.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-grey click\",\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"3rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: services,\n          alt: \"starlify\",\n          className: \"m-r-15 m-b-5 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }), service.name ? service.name : 'Empty Service Name'));\n      }) : \"\", item.references ? item.references.map((referenceData, i) => {\n        return React.createElement(\"p\", {\n          className: \"text-grey click\",\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"3rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: reference,\n          alt: \"starlify\",\n          className: \"m-r-15 m-b-5 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }), referenceData.name ? referenceData.name : 'Empty Reference Name');\n      }) : \"\", item.subSystems ? item.subSystems.map((subSystems, i) => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-grey click\",\n          onClick: () => this.subSystemToggle(subSystems.id),\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"3rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: subsystem,\n          alt: \"starlify\",\n          className: \"m-r-15 m-b-5 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }), subSystems.name ? subSystems.name : 'Empty Subsystem Name'), React.createElement(Collapse, {\n          isOpen: this.state.currentSubSystemIndex == subSystems.id ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, subSystems.services ? subSystems.services.map((service, i) => {\n          return React.createElement(\"div\", {\n            id: service.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 314\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-grey click\",\n            style: {\n              marginBottom: \"1rem\",\n              marginLeft: \"4rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: services,\n            alt: \"starlify\",\n            className: \"m-r-15 m-b-5 \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 322\n            },\n            __self: this\n          }), service.name ? service.name : 'Empty Service Name'));\n        }) : \"\", subSystems.references ? subSystems.references.map((references, i) => {\n          return React.createElement(\"div\", {\n            id: references.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 338\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-grey click\",\n            style: {\n              marginBottom: \"1rem\",\n              marginLeft: \"4rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 339\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: reference,\n            alt: \"starlify\",\n            className: \"m-r-15 m-b-5 \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 346\n            },\n            __self: this\n          }), references.name ? reference.name : \"Empty Reference Name\"));\n        }) : \"\"));\n      }) : ''));\n    }) : ''))), React.createElement(\"div\", {\n      className: \"flows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(VerticalScrollbars, {\n      style: {\n        height: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white click\",\n      onClick: this.flowsToggle,\n      style: {\n        marginBottom: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"Flows \", React.createElement(\"i\", {\n      class: \"fas fa-chevron-down system-down-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      class: \"fas fa-plus system-down-icon\",\n      id: \"flows\",\n      onClick: this.addClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    })), this.createFlow(), React.createElement(Collapse, {\n      isOpen: this.state.flowsCollapse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, this.state.systemData.flow ? this.state.systemData.flow.map((item, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey click\",\n        style: {\n          marginBottom: \"1rem\",\n          marginLeft: \"2rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, item.id));\n    }) : '')))));\n  }\n\n}\n\nexport default Systems;","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/Systems.js"],"names":["React","Component","Collapse","VerticalScrollbars","subsystem","services","reference","Systems","constructor","props","systemMenuToggle","bind","systemToggle","flowsToggle","subSystemToggle","searchSystem","systemSelected","state","flowsCollapse","systemsCollapse","collapseSystem","collapseSubSystem","currentSystemIndex","currentSubSystemIndex","systemData","system","showsystemDetail","systemDetails","values","flow","componentWillMount","fetch","process","env","REACT_APP_API","method","headers","then","response","json","responseJson","setState","createSystem","map","el","i","handleChange","removeClick","createFlow","event","type","target","id","systemName","value","splice","console","log","body","JSON","stringify","addClick","prevState","systemId","collapse","searchedPara","document","querySelector","words","currentTarget","regex","RegExp","replacement","newHTML","textContent","replace","innerHTML","render","width","height","marginBottom","systems","item","index","marginLeft","name","service","references","referenceData","subSystems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Collapse } from 'reactstrap';\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport subsystem from \"../../../_assets/images/subsystem.png\";\nimport services from \"../../../_assets/images/services.png\";\nimport reference from \"../../../_assets/images/reference.png\";\n\nclass Systems extends Component {\n  constructor(props) {\n    super(props);\n    this.systemMenuToggle = this.systemMenuToggle.bind(this);\n    this.systemToggle = this.systemToggle.bind(this);\n    this.flowsToggle = this.flowsToggle.bind(this);\n    this.subSystemToggle = this.subSystemToggle.bind(this);\n    this.searchSystem = this.searchSystem.bind(this);\n    this.systemSelected = this.systemSelected.bind(this);\n    this.state = {\n      \n      flowsCollapse: true,\n      systemsCollapse: true,\n      collapseSystem: false,\n      collapseSubSystem: false,\n      currentSystemIndex: '',\n      currentSubSystemIndex: '',\n      systemData: { system: '' },\n      showsystemDetail: false,\n      systemDetails: {},\n      values: [],\n      system:[],\n      flow:[]\n    };\n  }\n\n  componentWillMount() {\n    return fetch(process.env.REACT_APP_API + 'model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({ systemData: responseJson });\n      })\n  }\n\n  createSystem() {\n    return ( this.state.system ? this.state.system.map((el, i) =>\n      <div key={i}>\n        <input type=\"text\" id=\"system\" onBlur={this.handleChange.bind(this, i)} />\n        <input type='button' value='remove' onClick={this.removeClick.bind(this, i)} />\n      </div>\n    ) : '')\n  }\n\n  createFlow() {\n    return ( this.state.flow ? this.state.flow.map((el, i) =>\n      <div key={i}>\n        <input type=\"text\" id=\"flow\" onBlur={this.handleChange.bind(this, i)} />\n        <input type='button' value='remove' onClick={this.removeClick.bind(this, i)} />\n      </div>\n    ) : '')\n  }\n\n  handleChange(i, event) {\n    let type = event.target.id;\n    let systemName = event.target.value;\n    \n    if(type == \"system\") {\n      let values = [...this.state.system];\n      values[i] = event.target.value;\n      this.setState({ values });\n      this.state.system.splice(i, 1);\n      console.log(this.state.system)\n      return fetch(process.env.REACT_APP_API + 'model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then((response) => response.json())\n        .then((responseJson) => {\n          return fetch(process.env.REACT_APP_API + 'model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/' + responseJson.id, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \"name\": systemName }),\n          })\n            .then((response) => response.json())\n            .then((responseJson) => {\n            })\n  \n        })\n    } else {\n      let values = [...this.state.flow];\n      values[i] = event.target.value;\n      this.setState({ values });\n      //this.state.system.splice(i, 1);\n      //console.log(this.state.system)\n      this.state.flow.splice(i, 1);\n      return fetch(process.env.REACT_APP_API + 'model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then((response) => response.json())\n        .then((responseJson) => {\n          return fetch(process.env.REACT_APP_API + 'model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow/' + responseJson.id, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \"name\": systemName }),\n          })\n            .then((response) => response.json())\n            .then((responseJson) => {\n            })\n  \n        })\n    }\n    \n\n  }\n\n  addClick(event) {\n    if(event.target.id == \"system\")\n      this.setState(prevState => ({ system: [...prevState.system, ''] }))\n    else\n    this.setState(prevState => ({ flow: [...prevState.flow, ''] }))\n  }\n\n  removeClick(i) {\n    //let value = [...this.state.values];\n    //value.splice(i, 1);\n    \n    //this.setState({ values : value });\n   // console.log(values)\n  }\n\n\n  systemSelected(systemId) {\n    this.props.systemSelected(systemId);\n  }\n\n  systemMenuToggle() {\n    this.setState(state => ({ systemsCollapse: !state.systemsCollapse }));\n  }\n\n  flowsToggle() {\n    this.setState(state => ({ flowsCollapse: !state.flowsCollapse }));\n  }\n\n  systemToggle(systemId) {\n    this.systemSelected(systemId);\n    this.setState({ collapse: !this.state.collapse });\n    if (this.state.currentSystemIndex == systemId) {\n      this.state.currentSystemIndex = 0;\n    } else {\n      this.setState({ currentSystemIndex: systemId });\n      this.setState({ showsystemDetail: true });\n      return fetch(process.env.REACT_APP_API + 'model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/f1dc3452-e1a5-4a4e-9ae4-5fee3b34b647', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then((response) => response.json())\n        .then((responseJson) => {\n          this.setState({ systemDetails: responseJson });\n        })\n    }\n  }\n\n  subSystemToggle(systemId) {\n    this.setState({ collapseSubSystem: !this.state.collapseSubSystem });\n    if (this.state.currentSubSystemIndex == systemId) {\n      this.state.currentSubSystemIndex = 0;\n    } else {\n      this.setState({ currentSubSystemIndex: systemId });\n    }\n  }\n\n  searchSystem(event) {\n    var searchedPara = document.querySelector('.systems');\n    var words = event.currentTarget.value;\n    var regex = RegExp(words, 'gi')\n    var replacement = '<div className=\"text-white\"><b>' + words + '</b></div>';\n    var newHTML = searchedPara.textContent.replace(regex, replacement);\n    searchedPara.innerHTML = newHTML;\n  }\n\n  render() {\n    return (\n\n      <VerticalScrollbars style={{ width: 350 }} autoHide>\n       \n        <div className=\"org_browser\">\n          <h3 className=\"text-center text-white\">\n            Systems and Flows <i class=\"fas fa-times system-down-icon\" />\n\n\n          </h3>\n          <div className=\"org-selector\">\n            <p className=\"text-white text-left\">Selector</p>\n            <input type=\"text\" className=\"search-input\" onKeyUp={this.searchSystem} />\n            <span className=\"icon icon-Search search-icon\" />\n          </div>\n          <div className=\"systems w-100 d-inline-block\">\n            <VerticalScrollbars style={{ height: 220 }}>\n              <p\n                className=\"text-white click\"\n                onClick={this.systemMenuToggle}\n                style={{ marginBottom: \"1rem\" }}\n              >\n                Systems <i className=\"fas fa-chevron-down system-down-icon\" />\n                <i className=\"fas fa-plus system-down-icon\" id=\"system\" onClick={this.addClick.bind(this)} />\n              </p>\n              {this.createSystem()}\n\n              <Collapse isOpen={this.state.systemsCollapse}>\n                {this.state.systemData.systems ? this.state.systemData.systems.map((item, index) => {\n                  return (\n                    <div>\n                      <p\n                        className=\"text-grey click\"\n                        onClick={() => this.systemToggle(item.id)}\n                        style={{ marginBottom: \"1rem\", marginLeft: \"1rem\" }}\n                      >\n                        <img\n                          src={subsystem}\n                          alt=\"starlify\"\n                          className=\"m-r-15 m-b-5 \"\n                        />\n                        {item.name ? item.name : 'Empty System Name'}\n                      </p>\n                      <Collapse\n                        isOpen={this.state.currentSystemIndex == item.id ? true : false}>\n\n                        {item.services\n                          ? item.services.map(\n                            (service, i) => {\n                              return (\n                                <div id={service.id}>\n                                  <p\n                                    className=\"text-grey click\"\n                                    style={{\n                                      marginBottom: \"1rem\",\n                                      marginLeft: \"3rem\"\n                                    }}\n                                  >\n                                    <img\n                                      src={services}\n                                      alt=\"starlify\"\n                                      className=\"m-r-15 m-b-5 \"\n                                    />\n                                    {service.name ? service.name : 'Empty Service Name'}\n                                  </p>\n                                </div>\n                              );\n                            }\n                          )\n                          : \"\"}\n\n                        {item.references\n                          ? item.references.map(\n                            (referenceData, i) => {\n                              return (\n                                <p\n                                  className=\"text-grey click\"\n                                  style={{\n                                    marginBottom: \"1rem\",\n                                    marginLeft: \"3rem\"\n                                  }}\n                                >\n                                  <img\n                                    src={reference}\n                                    alt=\"starlify\"\n                                    className=\"m-r-15 m-b-5 \"\n                                  />\n                                  {referenceData.name ? referenceData.name : 'Empty Reference Name'}\n                                </p>\n                              );\n                            }\n                          )\n                          : \"\"}\n                        {item.subSystems\n                          ? item.subSystems.map((subSystems, i) => {\n                            return (\n                              <div>\n                                <p\n                                  className=\"text-grey click\"\n                                  onClick={() => this.subSystemToggle(subSystems.id)}\n                                  style={{\n                                    marginBottom: \"1rem\",\n                                    marginLeft: \"3rem\"\n                                  }}\n                                >\n                                  <img\n                                    src={subsystem}\n                                    alt=\"starlify\"\n                                    className=\"m-r-15 m-b-5 \"\n                                  />\n                                  {subSystems.name ? subSystems.name : 'Empty Subsystem Name'}\n                                </p>\n                                <Collapse\n                                  isOpen={this.state.currentSubSystemIndex == subSystems.id ? true : false}>\n\n                                  {subSystems.services\n                                    ? subSystems.services.map(\n                                      (service, i) => {\n                                        return (\n                                          <div id={service.id}>\n                                            <p\n                                              className=\"text-grey click\"\n                                              style={{\n                                                marginBottom: \"1rem\",\n                                                marginLeft: \"4rem\"\n                                              }}\n                                            >\n                                              <img\n                                                src={services}\n                                                alt=\"starlify\"\n                                                className=\"m-r-15 m-b-5 \"\n                                              />\n                                              {service.name ? service.name : 'Empty Service Name'}\n                                            </p>\n                                          </div>\n                                        );\n                                      }\n                                    )\n                                    : \"\"}\n                                  {subSystems.references\n                                    ? subSystems.references.map(\n                                      (references, i) => {\n                                        return (\n                                          <div id={references.id}>\n                                            <p\n                                              className=\"text-grey click\"\n                                              style={{\n                                                marginBottom: \"1rem\",\n                                                marginLeft: \"4rem\"\n                                              }}\n                                            >\n                                              <img\n                                                src={reference}\n                                                alt=\"starlify\"\n                                                className=\"m-r-15 m-b-5 \"\n                                              />\n                                              {references.name ? reference.name : \"Empty Reference Name\"}\n                                            </p>\n                                          </div>\n                                        );\n                                      }\n                                    )\n                                    : \"\"}\n                                </Collapse>\n                              </div>\n                            )\n                          }) : ''}\n\n\n                      </Collapse>\n\n                    </div>\n                  )\n                }) : ''}\n              </Collapse>\n            </VerticalScrollbars>\n          </div>\n          <div className=\"flows\">\n            <VerticalScrollbars style={{ height: 200 }}>\n              <p\n                className=\"text-white click\"\n                onClick={this.flowsToggle}\n                style={{ marginBottom: \"1rem\" }}\n              >\n                Flows <i class=\"fas fa-chevron-down system-down-icon\" />\n                <i class=\"fas fa-plus system-down-icon\" id=\"flows\" onClick={this.addClick.bind(this)}/>\n              </p>\n              {this.createFlow()}\n              <Collapse isOpen={this.state.flowsCollapse}>\n                {this.state.systemData.flow ? this.state.systemData.flow.map((item, index) => {\n                  return (\n                    <div>\n                      <p\n                        className=\"text-grey click\"\n                        style={{ marginBottom: \"1rem\", marginLeft: \"2rem\" }}\n                      >\n                        {item.id}\n                      </p>\n                    </div>\n                  );\n                }) : ''}\n              </Collapse>\n            </VerticalScrollbars>\n          </div>\n        </div>\n         </VerticalScrollbars>\n\n    );\n  }\n}\n\nexport default Systems;"]},"metadata":{},"sourceType":"module"}