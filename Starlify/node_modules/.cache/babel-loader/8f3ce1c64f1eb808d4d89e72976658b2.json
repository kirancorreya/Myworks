{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/SystemDetails.js\";\nimport React, { Component } from \"react\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport { Popover, PopoverBody, Collapse } from \"reactstrap\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport { connect } from 'react-redux';\nimport { Modal, ModalBody } from \"reactstrap\";\nimport { fetchSystemDetils } from '../../../store/system/systemActions';\n\nfunction collect(props) {\n  return {\n    item: props.item\n  };\n}\n\nclass SystemDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: true,\n      collapseId: false,\n      modal: false\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.toggleId = this.toggleId.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateSystemDetails = this.updateSystemDetails.bind(this);\n  }\n\n  updateSystemDetails(event) {\n    let value = event.target.value;\n\n    if ((event.key === 'Enter' || event.type === 'blur') && this.state.modal && value) {\n      event.target.value = '';\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n      fetch(process.env.REACT_APP_API + \"\".concat(this.props.activeModel, \"/system/\") + this.props.details.id, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          description: value\n        })\n      }).then(response => {\n        this.props.updateSystemDetails(this.props.activeModel, this.props.details.id);\n      });\n    }\n  }\n\n  toggleDescription() {\n    this.setState(state => ({\n      collapse: !state.collapse\n    }));\n  }\n\n  toggleId() {\n    this.setState({\n      collapseId: !this.state.collapseId\n    });\n  } //Closes the system details section\n\n\n  close(menu, type) {\n    this.props.close(menu, type);\n  } //control right click modal\n\n\n  modalToggle(e, data) {\n    console.log(data);\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    if (data) {\n      this.setState({\n        item: data.item\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"org_browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(ContextMenu, {\n      id: \"systemdetail_right_click\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      data: {\n        itemType: 'rename'\n      },\n      onClick: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Update\")), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      onBlur: this.updateSystemDetails.bind(this),\n      onKeyDown: this.updateSystemDetails.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.props.details.description)))), React.createElement(\"h3\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"System Details\", React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon browser_close\",\n      onClick: () => this.close(\"systemDetail\", \"menuDetail\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      autoHide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"PopoverId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.props.details.name), React.createElement(\"i\", {\n      className: \"fas fa-chevron-down system-down-icon\",\n      onClick: this.toggleDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(Popover, {\n      placement: \"bottom\",\n      isOpen: this.state.collapseId,\n      target: \"PopoverId\",\n      toggle: this.toggleId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(PopoverBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.props.details.id))), React.createElement(\"div\", {\n      className: \"col-md-6 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Support lvl: Gold\")), React.createElement(Collapse, {\n      isOpen: this.state.collapse,\n      className: \"systemDetailsDisc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(ContextMenuTrigger, {\n      id: \"systemdetail_right_click\",\n      item: this.props.details,\n      collect: collect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.props.details.description ? this.props.details.description : 'No Description')))), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Sub systems\"), this.props.details.subsystemLinks ? this.props.details.subsystemLinks.map((subsystem, i) => {\n      return React.createElement(\"div\", {\n        key: subsystem.id,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"systemCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), subsystem.title)));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Services\"), this.props.details.services ? this.props.details.services.map((services, i) => {\n      return React.createElement(\"div\", {\n        key: services.id,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"serviceCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), services.name)));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"References\"), this.props.details.references ? this.props.details.references.map((references, i) => {\n      return React.createElement(\"div\", {\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"referenceArrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"\\u2192\"), references.name)));\n    }) : \"\"))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateSystemDetails: (modelId, systemId) => {\n      dispatch(fetchSystemDetils(modelId, systemId));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeModel: state.model.modelUri,\n    details: state.system.details\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemDetails);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/SystemDetails.js"],"names":["React","Component","VerticalScrollbars","Popover","PopoverBody","Collapse","ContextMenu","MenuItem","ContextMenuTrigger","connect","Modal","ModalBody","fetchSystemDetils","collect","props","item","SystemDetails","constructor","state","collapse","collapseId","modal","close","bind","toggleDescription","toggleId","modalToggle","updateSystemDetails","event","value","target","key","type","setState","prevState","fetch","process","env","REACT_APP_API","activeModel","details","id","method","headers","body","JSON","stringify","description","then","response","menu","e","data","console","log","render","itemType","name","subsystemLinks","map","subsystem","i","title","services","references","mapDispatchToProps","dispatch","modelId","systemId","mapStateToProps","activeSystem","model","modelUri","system"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport { Popover, PopoverBody, Collapse } from \"reactstrap\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport { connect } from 'react-redux';\nimport { Modal, ModalBody } from \"reactstrap\";\nimport { fetchSystemDetils } from '../../../store/system/systemActions'\n\nfunction collect(props) {\n  return { item:props.item};\n}\n\nclass SystemDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: true,\n      collapseId: false,\n      modal: false,\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.toggleId = this.toggleId.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateSystemDetails = this.updateSystemDetails.bind(this);\n  }\n  \n  updateSystemDetails(event) {\n    let value = event.target.value;\n        if ((event.key === 'Enter' || event.type === 'blur') && this.state.modal && value) { \n            event.target.value = '';\n            this.setState(prevState => ({\n                modal: !prevState.modal\n            }));\n            fetch(\n                process.env.REACT_APP_API + `${this.props.activeModel}/system/` + this.props.details.id,\n                {\n                    method: \"PATCH\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({ description: value })\n                }\n            )\n            .then(response => {\n                this.props.updateSystemDetails(this.props.activeModel, this.props.details.id)\n            }\n         )\n        }\n\n  }\n  \n  toggleDescription() {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n\n  toggleId() {\n    this.setState({\n      collapseId: !this.state.collapseId\n    });\n  }\n\n  //Closes the system details section\n  close(menu, type) {\n    this.props.close(menu, type);\n  }\n\n  //control right click modal\n  modalToggle(e, data) {\n    console.log(data)\n    this.setState(prevState => ({\n        modal: !prevState.modal\n    }));\n\n    if (data) {\n        this.setState({\n            item: data.item,\n        })\n\n    }\n}\n\n  render() {\n    return (\n      <div className=\"org_browser\">\n        <ContextMenu id=\"systemdetail_right_click\">\n        <MenuItem data={{ itemType: 'rename' }} onClick={this.modalToggle}>\n          Update\n      </MenuItem>\n      </ContextMenu>\n      <Modal isOpen={this.state.modal} toggle={this.modalToggle} >\n                    <ModalBody>\n                            <div>\n                            <textarea onBlur={this.updateSystemDetails.bind(this)} onKeyDown={this.updateSystemDetails.bind(this)}>\n                            {this.props.details.description}\n                            </textarea>\n                            </div>\n                    </ModalBody>\n       </Modal>\n        <h3 className=\"text-center text-white\">\n          System Details\n          <i\n            className=\"fas fa-times system-down-icon browser_close\"\n            onClick={() => this.close(\"systemDetail\", \"menuDetail\")}\n          />\n        </h3>\n        <VerticalScrollbars autoHide>\n          <div className=\"browser_wrapper\">\n            <div className=\"org-selector\">\n              <p className=\"text-white text-left\">\n                {/* {this.state.systemDetails.name} */}\n              </p>\n            </div>\n            <div className=\"ob-block row\">\n              <div className=\"col-md-6 m-b-20\">\n                <p className=\"text-white text-left\">\n                  <span id=\"PopoverId\">{this.props.details.name}</span>\n\n                  <i\n                    className=\"fas fa-chevron-down system-down-icon\"\n                    onClick={this.toggleDescription}\n                  />\n                </p>\n                <Popover\n                  placement=\"bottom\"\n                  isOpen={this.state.collapseId}\n                  target=\"PopoverId\"\n                  toggle={this.toggleId}\n                >\n                  {/* <PopoverHeader>Popover Title</PopoverHeader> */}\n                  <PopoverBody>{this.props.details.id}</PopoverBody>\n                </Popover>\n              </div>\n              <div className=\"col-md-6 m-b-20\">\n                <p className=\"text-white text-left\">Support lvl: Gold</p>\n              </div>\n              <Collapse\n                isOpen={this.state.collapse}\n                className=\"systemDetailsDisc\"\n              >\n                <ContextMenuTrigger id=\"systemdetail_right_click\" item={this.props.details} collect={collect}>\n                <p className=\"text-grey\">\n                {this.props.details.description ? this.props.details.description : 'No Description'}\n                </p>\n                </ContextMenuTrigger>\n              </Collapse>\n            </div>\n            {/* <div className=\"developer w-100 d-inline-block\">\n            <p className=\"text-white text-left\">Developer</p>\n            <ul className=\"text-left\">\n              <li className=\"developer-item\">\n                Name Surname <span className=\"developer-img\" />\n              </li>\n            </ul>\n          </div>\n          <div className=\"ob-block row\">\n            <p className=\"text-white text-left col-md-12\">Subsystem</p>\n            <div className=\"col-md-6\">\n              <p className=\"text-grey text-left\">\n                <img src={subsystem} alt=\"starlify\" className=\"m-r-15 m-b-5 \" />\n                System\n              </p>\n            </div>\n            <div className=\"col-md-6\">\n              <p className=\"text-grey text-left\">ID:039982397</p>\n            </div>\n          </div> */}\n          <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">Sub systems</p>\n              {this.props.details.subsystemLinks\n                ? this.props.details.subsystemLinks.map((subsystem, i) => {\n                    return (\n                      <div key={subsystem.id} className=\"d-flex w-100\">\n                        <div className=\"col-md-12\">\n                        \n                          <p className=\"text-grey text-left\">\n                          <span className=\"systemCircle\" />\n                            {subsystem.title}\n                          </p>\n                          \n                        </div>\n                        \n                      </div>\n                    );\n                  })\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">Services</p>\n              {this.props.details.services\n                ? this.props.details.services.map((services, i) => {\n                    return (\n                      <div key={services.id} className=\"d-flex w-100\">\n                        <div className=\"col-md-12\">\n                          <p className=\"text-grey text-left\">\n                            <span className=\"serviceCircle\" />\n\n                            {services.name}\n                          </p>\n                          \n                        </div>\n                        \n                      </div>\n                    );\n                  })\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">References</p>\n              {this.props.details.references\n                ? this.props.details.references.map((references, i) => {\n                    return (\n                      <div className=\"d-flex w-100\">\n                        <div className=\"col-md-12\">\n                          <p className=\"text-grey text-left\">\n                            <span className=\"referenceArrow\">→</span>\n                            {references.name}\n                          </p>\n                        </div>\n                        {/* <div className=\"col-md-6\">\n                        <p className=\"text-grey text-left\">{references.id}</p>\n                      </div> */}\n                      </div>\n                    );\n                  })\n                : \"\"}\n            </div>\n          </div>\n        </VerticalScrollbars>\n      </div>\n    );\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n        updateSystemDetails: (modelId, systemId) => {\n          dispatch(fetchSystemDetils(modelId, systemId));\n        }\n  }\n}\n\nfunction mapStateToProps(state){\n  return{\n    activeSystem: state.model.activeSystem,\n    activeModel: state.model.modelUri,\n    details: state.system.details,\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemDetails);"]},"metadata":{},"sourceType":"module"}