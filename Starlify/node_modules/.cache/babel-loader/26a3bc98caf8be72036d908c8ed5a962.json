{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/ModalAcess.js\";\nimport React, { Component } from \"react\";\nimport { Table, Modal, ModalBody, Input, FormGroup } from \"reactstrap\";\nimport pen from \"../../../_assets/icons/icons/edit-icon.svg\";\nimport list from \"../../../_assets/icons/icons/List-icon.svg\";\nimport { connect } from \"react-redux\";\n\nclass ModalAcess extends Component {\n  constructor(props) {\n    super(props);\n\n    this.modalToggle = () => {\n      this.setState({\n        popup: !this.state.popup,\n        eventType: null\n      });\n    };\n\n    this.selectModel = e => {\n      this.setState({\n        modeluri: e.target.value\n      });\n      fetch(process.env.REACT_APP_API + e.target.value).then(res => res.json()).then(result => {\n        this.setState({\n          model: result,\n          popup: false,\n          accessEditor: true\n        });\n      });\n      this.fetchDivisions(this.props.domain);\n    };\n\n    this.fetchDivisions = domainId => {\n      return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId).then(res => res.json()).then(result => {\n        var org = result.organisation;\n        fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + org.id + \"/organisations\").then(res => res.json()).then(json => {\n          console.log(json);\n          var organisations = json;\n\n          for (var i = 0; i < organisations.length; i++) {\n            console.log(domainId, this.state.model.id, organisations[i]);\n          }\n\n          this.setState({\n            divisions: organisations\n          });\n          return true;\n        });\n      });\n    };\n\n    this.onGrantChange = () => {};\n\n    this.close = this.close.bind(this);\n    this.fetchDivisions = this.fetchDivisions.bind(this);\n    this.state = {\n      modeluri: \"\",\n      model: null,\n      models: [],\n      chosenModel: null,\n      divisions: [],\n      accessEditor: false,\n      popup: false,\n      eventType: null\n    };\n  }\n\n  close(type) {\n    this.props.close(type);\n  }\n\n  componentDidMount() {\n    var domainID = this.props.domain;\n\n    if (domainID !== \"\") {\n      fetch(process.env.REACT_APP_API + \"/domain/\" + domainID).then(res => res.json()).then(result => {\n        this.setState({\n          models: result.links\n        });\n      }).catch(error => {\n        this.setState({\n          models: []\n        });\n      });\n    }\n  }\n\n  render() {\n    const models = this.state.models;\n    return React.createElement(\"div\", {\n      className: \"browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.popup,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.eventType === \"model-choose\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-center m-b-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Choose model\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      onChange: this.selectModel.bind(this),\n      value: this.state.modeluri,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Select Model\"), models.map(item => React.createElement(\"option\", {\n      key: item.uri,\n      value: item.uri,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, item.title))))))), this.state.accessEditor === false && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_header text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-key submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Models Access\"), React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon\",\n      onClick: () => this.close(\"modelAccess\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn grey-btn\",\n      onClick: () => {\n        this.setState({\n          eventType: \"model-choose\",\n          popup: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Choose model \", React.createElement(\"img\", {\n      src: list,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"browser_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center text-white m-t-65\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"So you need to give access to your division, teams or developers?\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), \"You\\u2019ve come to the right place.\"), React.createElement(\"p\", {\n      className: \"text-center text-white m-t-65\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Just click the Choose model button and choose what \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), \"model you need to work in and then you can start adding \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), \"your division, teams and developers.\"), React.createElement(\"h1\", {\n      className: \"text-center text-white m-t-65\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"No chosen model\"))), this.state.accessEditor === true && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_header text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-key submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Models Access\"), React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon\",\n      onClick: () => this.close(\"modelAccess\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \" Edit models access for \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.model.name), \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn grey-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Change model \", React.createElement(\"img\", {\n      src: pen,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"browser_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"division_model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_body_header text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Divisions\")), React.createElement(\"div\", {\n      className: \"browser_body_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"50%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      width: \"25%\",\n      className: \"text-white text-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Read\"), React.createElement(\"th\", {\n      width: \"25%\",\n      className: \"text-white text-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Write\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.state.divisions.length !== 0 && this.state.divisions.map((item, index) => {\n      return React.createElement(\"tr\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"50%\",\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, item.name), React.createElement(\"td\", {\n        width: \"25%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"customCheckbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: \"1\",\n        id: \"read_\" + item.id,\n        checked: \"checked\",\n        onChange: this.onGrantChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"read_\" + item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        width: \"25%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"customCheckbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: \"2\",\n        id: \"write_\" + item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"write_\" + item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }))));\n    }))))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain\n  };\n}\n\nexport default connect(mapStateToProps)(ModalAcess);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/ModalAcess.js"],"names":["React","Component","Table","Modal","ModalBody","Input","FormGroup","connect","ModalAcess","constructor","props","modalToggle","setState","popup","state","eventType","selectModel","e","modeluri","target","value","fetch","process","env","REACT_APP_API","then","res","json","result","model","accessEditor","fetchDivisions","domain","domainId","org","organisation","id","console","log","organisations","i","length","divisions","onGrantChange","close","bind","models","chosenModel","type","componentDidMount","domainID","links","catch","error","render","map","item","uri","title","list","name","pen","index","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Modal, ModalBody, Input, FormGroup } from \"reactstrap\";\nimport pen from \"../../../_assets/icons/icons/edit-icon.svg\";\nimport list from \"../../../_assets/icons/icons/List-icon.svg\";\nimport { connect } from \"react-redux\";\n\nclass ModalAcess extends Component {\n  constructor(props) {\n    super(props);\n    this.close = this.close.bind(this);\n    this.fetchDivisions = this.fetchDivisions.bind(this);\n    this.state = {\n      modeluri: \"\",\n      model: null,\n      models: [],\n      chosenModel: null,\n      divisions: [],\n      accessEditor: false,\n      popup: false,\n      eventType: null\n    };\n  }\n  close(type) {\n    this.props.close(type);\n  }\n\n  modalToggle = () => {\n    this.setState({\n      popup: !this.state.popup,\n      eventType: null\n    });\n  }\n\n  selectModel = (e) => {\n    this.setState({ modeluri: e.target.value });\n    fetch(process.env.REACT_APP_API + e.target.value)\n    .then(res => res.json())\n    .then(result => {\n      this.setState({\n        model: result,\n        popup: false,\n        accessEditor: true\n      })\n    })\n    this.fetchDivisions(this.props.domain);\n  }\n\n  fetchDivisions = (domainId) => {\n    return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId)\n    .then(res => res.json())\n    .then( (result) => {\n      var org = result.organisation;\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + org.id + \"/organisations\")\n      .then(res => res.json())\n      .then((json) => {\n        console.log(json);\n        var organisations = json;\n        for (var i = 0; i < organisations.length; i++) {\n          console.log(domainId, this.state.model.id, organisations[i]);\n        }\n        this.setState({\n          divisions: organisations\n        })\n        return true;\n      })\n    })\n  }\n\n  onGrantChange = () => {\n\n  }\n\n  componentDidMount() {\n    var domainID = this.props.domain;\n    if (domainID !== \"\") {\n      fetch(process.env.REACT_APP_API + \"/domain/\" + domainID)\n      .then(res => res.json())\n      .then(result => {\n        this.setState({\n          models: result.links\n        });\n      })\n      .catch(error => {\n        this.setState({ models: [] });\n      });\n    }\n  }\n\n  render() {\n    const models = this.state.models;\n\n    return (\n      <div className=\"browser\">\n        <Modal isOpen={this.state.popup} toggle={this.modalToggle} >\n          <ModalBody>\n            {this.state.eventType === \"model-choose\" && (\n              <div>\n                <h4 className=\"text-center m-b-30\">Choose model</h4>\n                <FormGroup>\n                  <Input\n                    type=\"select\"\n                    onChange={this.selectModel.bind(this)}\n                    value={this.state.modeluri}\n                  >\n                    <option value=\"\">Select Model</option>\n                    {models.map(item => (\n                      <option key={item.uri} value={item.uri}>\n                        {item.title}\n                      </option>\n                    ))}\n                  </Input>\n                </FormGroup>\n              </div>\n            )}\n          </ModalBody>\n        </Modal>\n        {this.state.accessEditor === false && (\n          <div>\n            <div className=\"browser_header text-white\">\n              <i className=\"fas fa-key submenu-icon\"></i>\n              <h3 className=\"d-inline-block\">Models Access</h3>\n              <i\n                className=\"fas fa-times system-down-icon\"\n                onClick={() => this.close(\"modelAccess\")}\n              />\n              <div>\n                <button className=\"btn grey-btn\" onClick={()=>{this.setState({eventType:\"model-choose\",popup:true})}}>\n                  Choose model <img src={list} alt=\"\" />\n                </button>\n              </div>\n            </div>\n            <div className=\"browser_body\">\n              <p className=\"text-center text-white m-t-65\">\n                So you need to give access to your division, teams or\n                developers?\n                <br />\n                You’ve come to the right place.\n              </p>\n              <p className=\"text-center text-white m-t-65\">\n                Just click the Choose model button and choose what <br />\n                model you need to work in and then you can start adding <br />\n                your division, teams and developers.\n              </p>\n              <h1 className=\"text-center text-white m-t-65\">No chosen model</h1>\n            </div>\n          </div>\n        )}\n\n        {this.state.accessEditor === true && (\n          <div>\n            <div className=\"browser_header text-white\">\n              <i className=\"fas fa-key submenu-icon\"></i>\n              <h3 className=\"d-inline-block\">Models Access</h3>\n              <i\n                className=\"fas fa-times system-down-icon\"\n                onClick={() => this.close(\"modelAccess\")}\n              />\n              <p> Edit models access for <span>{this.state.model.name}</span> </p>\n              <div>\n                <button className=\"btn grey-btn\">\n                  Change model <img src={pen} alt=\"\" />\n                </button>\n              </div>\n            </div>\n            <div className=\"browser_body\">\n              <div className=\"division_model\">\n                <div className=\"browser_body_header text-white\">\n                  <h4 className=\"d-inline-block\">Divisions</h4>\n                </div>\n                <div className=\"browser_body_content\">\n                  <Table className=\"text-white\">\n                    <thead>\n                      <tr>\n                        <th width=\"50%\"></th>\n                        <th width=\"25%\" className=\"text-white text-small\">\n                          Read\n                        </th>\n                        <th width=\"25%\" className=\"text-white text-small\">\n                          Write\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.divisions.length !== 0 &&\n                        this.state.divisions.map((item, index) => {\n                          return (\n                            <tr key={item.id} >\n                              <td width=\"50%\" className=\"text-grey text-left\">{item.name}</td>\n                              <td width=\"25%\">\n                                <div className=\"customCheckbox\">\n                                  <input\n                                    type=\"checkbox\"\n                                    value=\"1\"\n                                    id={\"read_\"+item.id}\n                                    checked=\"checked\"\n                                    onChange={this.onGrantChange.bind(this)}\n                                  />\n                                  <label htmlFor={\"read_\"+item.id}></label>\n                                </div>\n                              </td>\n                              <td width=\"25%\">\n                                <div className=\"customCheckbox\">\n                                  <input\n                                    type=\"checkbox\"\n                                    value=\"2\"\n                                    id={\"write_\"+item.id}\n                                  />\n                                  <label htmlFor={\"write_\"+item.id}></label>\n                                </div>\n                              </td>\n                            </tr>\n                          )\n                        })\n                      }\n\n\n                    </tbody>\n                  </Table>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain\n  };\n}\n\nexport default connect(\n  mapStateToProps\n)(ModalAcess);\n"]},"metadata":{},"sourceType":"module"}