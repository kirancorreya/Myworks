{"ast":null,"code":"import _objectSpread from \"/Users/kirancorreya/Site/Starlify/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/SystemDetails.js\";\nimport React, { Component } from \"react\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport { Collapse, Modal, ModalBody, Tooltip } from \"reactstrap\";\nimport { fetchSystemDetils } from '../../../store/system/systemActions';\nimport { connect } from 'react-redux';\n\nclass SystemDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = target => {\n      this.setState(_objectSpread({}, this.state, {\n        [target]: !this.state[target]\n      }));\n    };\n\n    this.state = {\n      collapse: true,\n      systemCollapseId: false,\n      subSystemCollapseId: false,\n      modal: false,\n      details: {}\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateSystemDetails = this.updateSystemDetails.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.activeSystem != nextProps.activeSystem) this.props.getSystemDetails(this.props.activeModel, nextProps.activeSystem);\n  }\n\n  componentWillMount() {\n    this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n  }\n\n  updateSystemDetails(event) {\n    let value = event.target.value;\n\n    if ((event.key === 'Enter' || event.type === 'blur') && this.state.modal && value) {\n      event.target.value = '';\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n      fetch(process.env.REACT_APP_API + \"\".concat(this.props.activeModel, \"/system/\") + this.props.systemDetails.id, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          description: value\n        })\n      }).then(response => this.props.getSystemDetails(this.props.activeModel, this.props.systemDetails.id)).catch(error => console.log(error));\n    }\n  }\n\n  toggleDescription() {\n    this.setState(state => ({\n      collapse: !state.collapse\n    }));\n  } //Closes the system details section\n\n\n  close(menu, type) {\n    this.props.close(menu, type);\n  } //control right click modal\n\n\n  modalToggle(e, data) {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    if (data) {\n      this.setState({\n        details: {\n          'description': data.description\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"org_browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      defaultValue: this.state.details.description,\n      onBlur: this.updateSystemDetails.bind(this),\n      onKeyDown: this.updateSystemDetails.bind(this),\n      placeholder: \"Add Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })))), React.createElement(\"h3\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"System Details\", React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon browser_close\",\n      onClick: () => this.close(\"systemDetail\", \"menuDetail\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"far fa-edit\",\n      onClick: () => this.modalToggle(this, this.props.systemDetails),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      autoHide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"system-detail-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.props.systemDetails.name), React.createElement(\"i\", {\n      className: \"fas fa-chevron-down system-down-icon\",\n      onClick: this.toggleDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(Tooltip, {\n      placement: \"top\",\n      toggle: () => this.toggle('system-detail-name'),\n      isOpen: this.state['system-detail-name'],\n      autohide: false,\n      target: 'system-detail-name',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.props.systemDetails.id)), React.createElement(\"div\", {\n      className: \"col-md-6 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Support lvl: Gold\")), React.createElement(Collapse, {\n      isOpen: this.state.collapse,\n      className: \"systemDetailsDisc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.props.systemDetails.description ? this.props.systemDetails.description : 'No Description'))), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Sub systems\"), this.props.systemDetails.subsystemLinks ? this.props.systemDetails.subsystemLinks.map((subsystem, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"systemCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, subsystem.title))));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Services\"), this.props.systemDetails.services ? this.props.systemDetails.services.map((services, i) => {\n      return React.createElement(\"div\", {\n        key: services.id,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"serviceCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"service-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, services.name)), React.createElement(Tooltip, {\n        placement: \"top\",\n        toggle: () => this.toggle(\"service-\".concat(i)),\n        isOpen: this.state[\"service-\".concat(i)],\n        autohide: false,\n        target: \"service-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, services.id)));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"References\"), this.props.systemDetails.references ? this.props.systemDetails.references.map((references, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"referenceArrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"\\u2192\"), React.createElement(\"span\", {\n        id: \"reference-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, references.name)), React.createElement(Tooltip, {\n        placement: \"top\",\n        toggle: () => this.toggle(\"reference-\".concat(i)),\n        isOpen: this.state[\"reference-\".concat(i)],\n        autohide: false,\n        target: \"reference-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, references.id)));\n    }) : \"\"))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getSystemDetails: (modelId, systemId) => {\n      dispatch(fetchSystemDetils(modelId, systemId));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeModel: state.model.modelUri,\n    systemDetails: state.system.systemDetails\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemDetails);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/SystemDetails.js"],"names":["React","Component","VerticalScrollbars","ContextMenu","MenuItem","ContextMenuTrigger","Collapse","Modal","ModalBody","Tooltip","fetchSystemDetils","connect","SystemDetails","constructor","props","toggle","target","setState","state","collapse","systemCollapseId","subSystemCollapseId","modal","details","close","bind","toggleDescription","modalToggle","updateSystemDetails","componentWillReceiveProps","nextProps","activeSystem","getSystemDetails","activeModel","componentWillMount","event","value","key","type","prevState","fetch","process","env","REACT_APP_API","systemDetails","id","method","headers","body","JSON","stringify","description","then","response","catch","error","console","log","menu","e","data","render","name","subsystemLinks","map","subsystem","i","title","services","references","mapDispatchToProps","dispatch","modelId","systemId","mapStateToProps","model","modelUri","system"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,MAA+B,gDAA/B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,kBAAhC,QAA0D,mBAA1D;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,YAApD;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAIA,MAAMC,aAAN,SAA4BX,SAA5B,CAAsC;AACpCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,MAhBmB,GAgBTC,MAAD,IAAY;AACnB,WAAKC,QAAL,mBACK,KAAKC,KADV;AAEE,SAACF,MAAD,GAAU,CAAC,KAAKE,KAAL,CAAWF,MAAX;AAFb;AAID,KArBkB;;AAEjB,SAAKE,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,gBAAgB,EAAE,KAFP;AAGXC,MAAAA,mBAAmB,EAAE,KAHV;AAIXC,MAAAA,KAAK,EAAE,KAJI;AAKXC,MAAAA,OAAO,EAAG;AALC,KAAb;AAOA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKV,MAAL,GAAc,KAAKA,MAAL,CAAYU,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBH,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAQDI,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAG,KAAKhB,KAAL,CAAWiB,YAAX,IAA2BD,SAAS,CAACC,YAAxC,EACC,KAAKjB,KAAL,CAAWkB,gBAAX,CAA4B,KAAKlB,KAAL,CAAWmB,WAAvC,EAAoDH,SAAS,CAACC,YAA9D;AACF;;AACDG,EAAAA,kBAAkB,GAAG;AACnB,SAAKpB,KAAL,CAAWkB,gBAAX,CAA4B,KAAKlB,KAAL,CAAWmB,WAAvC,EAAoD,KAAKnB,KAAL,CAAWiB,YAA/D;AACD;;AAEDH,EAAAA,mBAAmB,CAACO,KAAD,EAAQ;AAEzB,QAAIC,KAAK,GAAGD,KAAK,CAACnB,MAAN,CAAaoB,KAAzB;;AACA,QAAI,CAACD,KAAK,CAACE,GAAN,KAAc,OAAd,IAAyBF,KAAK,CAACG,IAAN,KAAe,MAAzC,KAAoD,KAAKpB,KAAL,CAAWI,KAA/D,IAAwEc,KAA5E,EAAmF;AACjFD,MAAAA,KAAK,CAACnB,MAAN,CAAaoB,KAAb,GAAqB,EAArB;AACA,WAAKnB,QAAL,CAAcsB,SAAS,KAAK;AAC1BjB,QAAAA,KAAK,EAAE,CAACiB,SAAS,CAACjB;AADQ,OAAL,CAAvB;AAGAkB,MAAAA,KAAK,CACHC,OAAO,CAACC,GAAR,CAAYC,aAAZ,aAA+B,KAAK7B,KAAL,CAAWmB,WAA1C,gBAAkE,KAAKnB,KAAL,CAAW8B,aAAX,CAAyBC,EADxF,EAEH;AACEC,QAAAA,MAAM,EAAE,OADV;AAEEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFX;AAKEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,WAAW,EAAEf;AAAf,SAAf;AALR,OAFG,CAAL,CAUGgB,IAVH,CAUQC,QAAQ,IAAI,KAAKvC,KAAL,CAAWkB,gBAAX,CAA4B,KAAKlB,KAAL,CAAWmB,WAAvC,EAAoD,KAAKnB,KAAL,CAAW8B,aAAX,CAAyBC,EAA7E,CAVpB,EAWGS,KAXH,CAWSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAXlB;AAYD;AAEF;;AAED7B,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,QAAL,CAAcC,KAAK,KAAK;AAAEC,MAAAA,QAAQ,EAAE,CAACD,KAAK,CAACC;AAAnB,KAAL,CAAnB;AACD,GAzDmC,CA4DpC;;;AACAK,EAAAA,KAAK,CAACkC,IAAD,EAAOpB,IAAP,EAAa;AAChB,SAAKxB,KAAL,CAAWU,KAAX,CAAiBkC,IAAjB,EAAuBpB,IAAvB;AACD,GA/DmC,CAiEpC;;;AACAX,EAAAA,WAAW,CAACgC,CAAD,EAAIC,IAAJ,EAAU;AACnB,SAAK3C,QAAL,CAAcsB,SAAS,KAAK;AAC1BjB,MAAAA,KAAK,EAAE,CAACiB,SAAS,CAACjB;AADQ,KAAL,CAAvB;;AAIA,QAAIsC,IAAJ,EAAU;AACR,WAAK3C,QAAL,CAAc;AACZM,QAAAA,OAAO,EAAE;AAAE,yBAAgBqC,IAAI,CAACT;AAAvB;AADG,OAAd;AAID;AACF;;AAEDU,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAK3C,KAAL,CAAWI,KAA1B;AAAiC,MAAA,MAAM,EAAE,KAAKK,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAU,MAAA,YAAY,EAAE,KAAKT,KAAL,CAAWK,OAAX,CAAmB4B,WAA3C;AAAwD,MAAA,MAAM,EAAE,KAAKvB,mBAAL,CAAyBH,IAAzB,CAA8B,IAA9B,CAAhE;AAAqG,MAAA,SAAS,EAAE,KAAKG,mBAAL,CAAyBH,IAAzB,CAA8B,IAA9B,CAAhH;AAAsJ,MAAA,WAAW,EAAC,iBAAlK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF,EAUE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE;AACE,MAAA,SAAS,EAAC,6CADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKD,KAAL,CAAW,cAAX,EAA2B,YAA3B,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAME;AAAG,MAAA,SAAS,EAAC,aAAb;AAA2B,MAAA,OAAO,EAAE,MAAM,KAAKG,WAAL,CAAiB,IAAjB,EAAuB,KAAKb,KAAL,CAAW8B,aAAlC,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAVF,EAoBE,oBAAC,kBAAD;AAAoB,MAAA,QAAQ,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,EAAE,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,KAAK9B,KAAL,CAAW8B,aAAX,CAAyBkB,IAAxD,CADF,EAGE;AACE,MAAA,SAAS,EAAC,sCADZ;AAEE,MAAA,OAAO,EAAE,KAAKpC,iBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,EASE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,KAAnB;AAAyB,MAAA,MAAM,EAAE,MAAM,KAAKX,MAAL,CAAY,oBAAZ,CAAvC;AAA0E,MAAA,MAAM,EAAE,KAAKG,KAAL,CAAW,oBAAX,CAAlF;AAAoH,MAAA,QAAQ,EAAE,KAA9H;AAAqI,MAAA,MAAM,EAAE,oBAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAW8B,aAAX,CAAyBC,EAD5B,CATF,CADF,EAeE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAfF,EAkBE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAE,KAAK3B,KAAL,CAAWC,QADrB;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAW8B,aAAX,CAAyBO,WAAzB,GAAuC,KAAKrC,KAAL,CAAW8B,aAAX,CAAyBO,WAAhE,GAA8E,gBADjF,CAJJ,CAlBF,CALF,EAkCE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEG,KAAKrC,KAAL,CAAW8B,aAAX,CAAyBmB,cAAzB,GACG,KAAKjD,KAAL,CAAW8B,aAAX,CAAyBmB,cAAzB,CAAwCC,GAAxC,CAA4C,CAACC,SAAD,EAAYC,CAAZ,KAAkB;AAC9D,aAEE;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,SAAS,CAACE,KAAjB,CAJF,CAFF,CAFF,CAFF;AAmBD,KApBC,CADH,GAsBG,EAxBN,CAlCF,EA4DE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,KAAKrD,KAAL,CAAW8B,aAAX,CAAyBwB,QAAzB,GACG,KAAKtD,KAAL,CAAW8B,aAAX,CAAyBwB,QAAzB,CAAkCJ,GAAlC,CAAsC,CAACI,QAAD,EAAWF,CAAX,KAAiB;AACvD,aACE;AAAK,QAAA,GAAG,EAAEE,QAAQ,CAACvB,EAAnB;AAAuB,QAAA,SAAS,EAAC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AAAM,QAAA,EAAE,oBAAaqB,CAAb,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BE,QAAQ,CAACN,IAApC,CAHF,CADF,EAME,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,KAAnB;AAAyB,QAAA,MAAM,EAAE,MAAM,KAAK/C,MAAL,mBAAuBmD,CAAvB,EAAvC;AAAoE,QAAA,MAAM,EAAE,KAAKhD,KAAL,mBAAsBgD,CAAtB,EAA5E;AAAwG,QAAA,QAAQ,EAAE,KAAlH;AAAyH,QAAA,MAAM,oBAAaA,CAAb,CAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,QAAQ,CAACvB,EADZ,CANF,CADF,CADF;AAgBD,KAjBC,CADH,GAmBG,EArBN,CA5DF,EAmFE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEG,KAAK/B,KAAL,CAAW8B,aAAX,CAAyByB,UAAzB,GACG,KAAKvD,KAAL,CAAW8B,aAAX,CAAyByB,UAAzB,CAAoCL,GAApC,CAAwC,CAACK,UAAD,EAAaH,CAAb,KAAmB;AAC3D,aACE;AAAK,QAAA,GAAG,EAAIA,CAAZ;AAAe,QAAA,SAAS,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGE;AAAM,QAAA,EAAE,sBAAeA,CAAf,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BG,UAAU,CAACP,IAAxC,CAHF,CADF,EAOE,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,KAAnB;AAAyB,QAAA,MAAM,EAAE,MAAM,KAAK/C,MAAL,qBAAyBmD,CAAzB,EAAvC;AAAsE,QAAA,MAAM,EAAE,KAAKhD,KAAL,qBAAwBgD,CAAxB,EAA9E;AAA4G,QAAA,QAAQ,EAAE,KAAtH;AAA6H,QAAA,MAAM,sBAAeA,CAAf,CAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,UAAU,CAACxB,EADd,CAPF,CADF,CADF;AAeD,KAhBC,CADH,GAkBG,EApBN,CAnFF,CADF,CApBF,CADF;AAmID;;AAnNmC;;AAsNtC,SAASyB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLvC,IAAAA,gBAAgB,EAAE,CAACwC,OAAD,EAAUC,QAAV,KAAuB;AACvCF,MAAAA,QAAQ,CAAC7D,iBAAiB,CAAC8D,OAAD,EAAUC,QAAV,CAAlB,CAAR;AACD;AAHI,GAAP;AAKD;;AAED,SAASC,eAAT,CAAyBxD,KAAzB,EAAgC;AAC9B,SAAO;AACLa,IAAAA,YAAY,EAAEb,KAAK,CAACyD,KAAN,CAAY5C,YADrB;AAELE,IAAAA,WAAW,EAAEf,KAAK,CAACyD,KAAN,CAAYC,QAFpB;AAGLhC,IAAAA,aAAa,EAAE1B,KAAK,CAAC2D,MAAN,CAAajC;AAHvB,GAAP;AAKD;;AAED,eAAejC,OAAO,CAAC+D,eAAD,EAAkBJ,kBAAlB,CAAP,CAA6C1D,aAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport { Collapse, Modal, ModalBody, Tooltip } from \"reactstrap\";\nimport { fetchSystemDetils } from '../../../store/system/systemActions'\nimport { connect } from 'react-redux';\n\n\n\nclass SystemDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: true,\n      systemCollapseId: false,\n      subSystemCollapseId: false,\n      modal: false,\n      details : {}\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateSystemDetails = this.updateSystemDetails.bind(this);\n  }\n\n  toggle = (target) => {\n    this.setState({\n      ...this.state,\n      [target]: !this.state[target]\n    });\n  };\n  componentWillReceiveProps(nextProps) {\n    if(this.props.activeSystem != nextProps.activeSystem)\n     this.props.getSystemDetails(this.props.activeModel, nextProps.activeSystem)\n  }\n  componentWillMount() {\n    this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem)\n  }\n\n  updateSystemDetails(event) {\n    \n    let value = event.target.value;\n    if ((event.key === 'Enter' || event.type === 'blur') && this.state.modal && value) {\n      event.target.value = '';\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n      fetch(\n        process.env.REACT_APP_API + `${this.props.activeModel}/system/` + this.props.systemDetails.id,\n        {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ description: value })\n        }\n      )\n        .then(response => this.props.getSystemDetails(this.props.activeModel, this.props.systemDetails.id))\n        .catch(error => console.log(error));\n    }\n\n  }\n\n  toggleDescription() {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n\n\n  //Closes the system details section\n  close(menu, type) {\n    this.props.close(menu, type);\n  }\n\n  //control right click modal\n  modalToggle(e, data) {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    if (data) {\n      this.setState({\n        details: { 'description' : data.description }\n      })\n\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"org_browser\">\n        <Modal isOpen={this.state.modal} toggle={this.modalToggle} >\n          <ModalBody>\n            <div>\n              <textarea defaultValue={this.state.details.description} onBlur={this.updateSystemDetails.bind(this)} onKeyDown={this.updateSystemDetails.bind(this)}  placeholder=\"Add Description\">\n                \n              </textarea>\n            </div>\n          </ModalBody>\n        </Modal>\n        <h3 className=\"text-center text-white\">\n          System Details\n          <i\n            className=\"fas fa-times system-down-icon browser_close\"\n            onClick={() => this.close(\"systemDetail\", \"menuDetail\")}\n          />\n          <i className=\"far fa-edit\" onClick={() => this.modalToggle(this, this.props.systemDetails)}></i>\n        </h3>\n\n\n        <VerticalScrollbars autoHide>\n          <div className=\"browser_wrapper\">\n            <div className=\"org-selector\">\n              <p className=\"text-white text-left\">\n              </p>\n            </div>\n            <div className=\"ob-block row\">\n              <div className=\"col-md-6 m-b-20\">\n                <p className=\"text-white text-left\">\n                  <span id=\"system-detail-name\">{this.props.systemDetails.name}</span>\n\n                  <i\n                    className=\"fas fa-chevron-down system-down-icon\"\n                    onClick={this.toggleDescription}\n                  />\n                </p>\n                <Tooltip placement=\"top\" toggle={() => this.toggle('system-detail-name')} isOpen={this.state['system-detail-name']} autohide={false} target={'system-detail-name'} >\n                  {this.props.systemDetails.id}\n                </Tooltip>\n\n              </div>\n              <div className=\"col-md-6 m-b-20\">\n                <p className=\"text-white text-left\">Support lvl: Gold</p>\n              </div>\n              <Collapse\n                isOpen={this.state.collapse}\n                className=\"systemDetailsDisc\"\n              >\n                  <p className=\"text-grey\">\n                    {this.props.systemDetails.description ? this.props.systemDetails.description : 'No Description'}\n                  </p>\n              </Collapse>\n            </div>\n\n\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">Sub systems</p>\n              {this.props.systemDetails.subsystemLinks\n                ? this.props.systemDetails.subsystemLinks.map((subsystem, i) => {\n                  return (\n\n                    <div key={i} className=\"d-flex w-100\">\n\n                      <div className=\"col-md-12\">\n\n                        <p className=\"text-grey text-left\" >\n                          <span className=\"systemCircle\" >\n\n                          </span>\n                          <span>{subsystem.title}</span>\n                        </p>\n\n                        \n\n                      </div>\n\n                    </div>\n                  );\n                })\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">Services</p>\n              {this.props.systemDetails.services\n                ? this.props.systemDetails.services.map((services, i) => {\n                  return (\n                    <div key={services.id} className=\"d-flex w-100\">\n                      <div className=\"col-md-12\">\n                        <p className=\"text-grey text-left\">\n                          <span className=\"serviceCircle\" />\n\n                          <span id={`service-${i}`}>{services.name}</span>\n                        </p>\n                        <Tooltip placement=\"top\" toggle={() => this.toggle(`service-${i}`)} isOpen={this.state[`service-${i}`]} autohide={false} target={`service-${i}`} >\n                          {services.id}\n                     </Tooltip>  \n\n                      </div>\n\n                    </div>\n                  );\n                })\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">References</p>\n              {this.props.systemDetails.references\n                ? this.props.systemDetails.references.map((references, i) => {\n                  return (\n                    <div key = {i} className=\"d-flex w-100\">\n                      <div className=\"col-md-12\">\n                        <p className=\"text-grey text-left\">\n                          <span className=\"referenceArrow\">→</span>\n\n                          <span id={`reference-${i}`}>{references.name}</span>\n                        \n                        </p>\n                        <Tooltip placement=\"top\" toggle={() => this.toggle(`reference-${i}`)} isOpen={this.state[`reference-${i}`]} autohide={false} target={`reference-${i}`} >\n                          {references.id}\n                     </Tooltip> \n                      </div>\n                    </div>\n                  );\n                })\n                : \"\"}\n            </div>\n          </div>\n        </VerticalScrollbars>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getSystemDetails: (modelId, systemId) => {\n      dispatch(fetchSystemDetils(modelId, systemId));\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeModel: state.model.modelUri,\n    systemDetails: state.system.systemDetails,\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemDetails);"]},"metadata":{},"sourceType":"module"}