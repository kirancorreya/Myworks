{"ast":null,"code":"const vg = require('../../lib/hex-grid.min.js');\n\nconst defaultHexGrid = require('../../lib/default-hex-grid');\n/**\n * Hex grid.\n */\n\n\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-hexgrid', {\n  defaultComponents: {\n    'hexgrid': {}\n  },\n  mappings: {\n    src: 'hexgrid.src'\n  }\n});\nmodule.exports.Component = AFRAME.registerComponent('hexgrid', {\n  dependencies: ['material'],\n  schema: {\n    src: {\n      type: 'asset'\n    }\n  },\n  init: function () {\n    const data = this.data;\n\n    if (data.src) {\n      fetch(data.src).then(response => response.json()).then(json => this.addMesh(json));\n    } else {\n      this.addMesh(defaultHexGrid);\n    }\n  },\n  addMesh: function (json) {\n    const grid = new vg.HexGrid();\n    grid.fromJSON(json);\n    const board = new vg.Board(grid);\n    board.generateTilemap();\n    this.el.setObject3D('mesh', board.group);\n    this.addMaterial();\n  },\n  addMaterial: function () {\n    const materialComponent = this.el.components.material;\n    const material = (materialComponent || {}).material;\n    if (!material) return;\n    this.el.object3D.traverse(node => {\n      if (node.isMesh) {\n        node.material = material;\n      }\n    });\n  },\n  remove: function () {\n    this.el.removeObject3D('mesh');\n  }\n});","map":null,"metadata":{},"sourceType":"script"}