{"ast":null,"code":"// Fetch divisions API\nexport function fetchDivisions(domainId) {\n  return dispatch => {\n    return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId).then(res => res.json()).then(result => {\n      var org = result.organisation;\n      dispatch(fetchOrgSuccess(org.id));\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + org.id + \"/organisations\").then(res => res.json()).then(json => {\n        console.log(json);\n        dispatch(fetchDivisionSuccess(json));\n        return json.organisations;\n      }).catch(error => dispatch(fetchDivisionFailure(error)));\n    }).catch(error => dispatch(fetchOrgFailure(error)));\n  };\n} // Fetch teams API\n\nexport function fetchTeams(domainId, divId) {\n  return dispatch => {\n    return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + divId + \"/organisations\").then(res => res.json()).then(result => {\n      dispatch(fetchTeamSuccess(result));\n      return result.organisations;\n    }).catch(error => dispatch(fetchTeamFailure(error)));\n  };\n} // Fetch persons API\n\nexport function fetchPersons(domainId, teamId) {\n  return dispatch => {\n    return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + teamId + \"/organisations\").then(res => res.json()).then(result => {\n      dispatch(fetchPersonsSuccess(result));\n      return result.persons;\n    }).catch(error => dispatch(fetchPersonsFailure(error)));\n  };\n}\nexport const fetchOrgSuccess = orgid => ({\n  type: \"FETCH_ORG_SUCCESS\",\n  orgid: orgid\n});\nexport const fetchOrgFailure = error => ({\n  type: \"FETCH_ORG_FAILURE\",\n  payload: {\n    error\n  }\n});\nexport const fetchDivisionSuccess = divisions => ({\n  type: \"FETCH_DIVISION_SUCCESS\",\n  payload: {\n    divisions\n  }\n});\nexport const fetchDivisionFailure = error => ({\n  type: \"FETCH_MODEL_FAILURE\",\n  payload: {\n    error\n  }\n});\nexport const fetchTeamSuccess = teams => ({\n  type: \"FETCH_TEAM_SUCCESS\",\n  payload: {\n    teams\n  }\n});\nexport const fetchTeamFailure = error => ({\n  type: \"FETCH_TEAM_FAILURE\",\n  payload: {\n    error\n  }\n});\nexport const fetchPersonsSuccess = persons => ({\n  type: \"FETCH_PERSON_SUCCESS\",\n  payload: {\n    persons\n  }\n});\nexport const fetchPersonsFailure = error => ({\n  type: \"FETCH_PERSON_FAILURE\",\n  payload: {\n    error\n  }\n});","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/store/organisation/orgActions.js"],"names":["fetchDivisions","domainId","dispatch","fetch","process","env","REACT_APP_API","then","res","json","result","org","organisation","fetchOrgSuccess","id","console","log","fetchDivisionSuccess","organisations","catch","error","fetchDivisionFailure","fetchOrgFailure","fetchTeams","divId","fetchTeamSuccess","fetchTeamFailure","fetchPersons","teamId","fetchPersonsSuccess","persons","fetchPersonsFailure","orgid","type","payload","divisions","teams"],"mappings":"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","sourcesContent":["// Fetch divisions API\nexport function fetchDivisions(domainId) {\n\treturn dispatch => {\n      return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId)\n      .then(res => res.json())\n      .then( (result) => {\n        var org = result.organisation;\n        dispatch(fetchOrgSuccess(org.id));\n        fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + org.id + \"/organisations\")\n        .then(res => res.json())\n        .then((json) => {\n\t\t\t\t\tconsole.log(json);\n          dispatch(fetchDivisionSuccess(json));\n          return json.organisations;\n        })\n        .catch(error => dispatch(fetchDivisionFailure(error)));\n      })\n      .catch(error => dispatch(fetchOrgFailure(error)));\n\t};\n}\n\n// Fetch teams API\nexport function fetchTeams(domainId, divId){\n  return dispatch => {\n    return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + divId  + \"/organisations\")\n    .then(res => res.json())\n    .then( (result) => {\n      dispatch(fetchTeamSuccess(result));\n      return result.organisations;\n    })\n    .catch(error => dispatch(fetchTeamFailure(error)));\n  }\n}\n\n// Fetch persons API\nexport function fetchPersons(domainId, teamId){\n  return dispatch => {\n    return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + teamId  + \"/organisations\")\n    .then(res => res.json())\n    .then( (result) => {\n      dispatch(fetchPersonsSuccess(result));\n      return result.persons;\n    })\n    .catch(error => dispatch(fetchPersonsFailure(error)));\n  }\n}\n\nexport const fetchOrgSuccess = (orgid) => ({\n\ttype: \"FETCH_ORG_SUCCESS\",\n\torgid: orgid\n});\n\nexport const fetchOrgFailure = (error) => ({\n\ttype: \"FETCH_ORG_FAILURE\",\n\tpayload: { error }\n});\n\nexport const fetchDivisionSuccess = (divisions) => ({\n\ttype: \"FETCH_DIVISION_SUCCESS\",\n\tpayload: { divisions }\n});\n\nexport const fetchDivisionFailure = (error) => ({\n\ttype: \"FETCH_MODEL_FAILURE\",\n\tpayload: { error }\n});\n\nexport const fetchTeamSuccess = (teams) => ({\n\ttype: \"FETCH_TEAM_SUCCESS\",\n\tpayload: { teams }\n});\n\nexport const fetchTeamFailure = (error) => ({\n\ttype: \"FETCH_TEAM_FAILURE\",\n\tpayload: { error }\n});\n\nexport const fetchPersonsSuccess = (persons) => ({\n\ttype: \"FETCH_PERSON_SUCCESS\",\n\tpayload: { persons }\n});\n\nexport const fetchPersonsFailure = (error) => ({\n\ttype: \"FETCH_PERSON_FAILURE\",\n\tpayload: { error }\n});\n"]},"metadata":{},"sourceType":"module"}