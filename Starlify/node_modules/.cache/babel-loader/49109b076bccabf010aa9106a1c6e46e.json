{"ast":null,"code":"import _objectSpread from \"/Users/kirancorreya/Site/Starlify/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/SystemDetails.js\";\nimport React, { Component } from \"react\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport { Collapse, Modal, ModalBody, Tooltip } from \"reactstrap\";\nimport { fetchSystemDetils } from '../../../store/system/systemActions';\nimport { connect } from 'react-redux';\n\nfunction collect(props) {\n  return {\n    item: props.item\n  };\n}\n\nclass SystemDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = target => {\n      this.setState(_objectSpread({}, this.state, {\n        [target]: !this.state[target]\n      }));\n    };\n\n    this.state = {\n      collapse: true,\n      systemCollapseId: false,\n      subSystemCollapseId: false,\n      modal: false,\n      tooltipOpen: false\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateSystemDetails = this.updateSystemDetails.bind(this);\n  }\n\n  componentWillMount() {//this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem)\n  }\n\n  updateSystemDetails(event) {\n    let value = event.target.value;\n\n    if ((event.key === 'Enter' || event.type === 'blur') && this.state.modal && value) {\n      event.target.value = '';\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n      fetch(process.env.REACT_APP_API + \"\".concat(this.props.activeModel, \"/system/\") + this.props.systemDetails.id, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          description: value\n        })\n      }).then(response => this.props.getSystemDetails(this.props.activeModel, this.props.systemDetails.id)).catch(error => console.log(error));\n    }\n  }\n\n  toggleDescription() {\n    this.setState(state => ({\n      collapse: !state.collapse\n    }));\n  } //Closes the system details section\n\n\n  close(menu, type) {\n    this.props.close(menu, type);\n  } //control right click modal\n\n\n  modalToggle(e, data) {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    if (data) {\n      this.setState({\n        item: data.item\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"org_browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(ContextMenu, {\n      id: \"systemdetail_right_click\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      data: {\n        itemType: 'rename'\n      },\n      onClick: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Update\")), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      onBlur: this.updateSystemDetails.bind(this),\n      onKeyDown: this.updateSystemDetails.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.props.systemDetails.description)))), React.createElement(\"h3\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"System Details\", React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon browser_close\",\n      onClick: () => this.close(\"systemDetail\", \"menuDetail\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      autoHide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"system-detail-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.props.systemDetails.name), React.createElement(\"i\", {\n      className: \"fas fa-chevron-down system-down-icon\",\n      onClick: this.toggleDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(Tooltip, {\n      placement: \"top\",\n      toggle: () => this.toggle('system-detail-name'),\n      isOpen: this.state['system-detail-name'],\n      autohide: false,\n      target: 'system-detail-name',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, this.props.systemDetails.id)), React.createElement(\"div\", {\n      className: \"col-md-6 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Support lvl: Gold\")), React.createElement(Collapse, {\n      isOpen: this.state.collapse,\n      className: \"systemDetailsDisc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(ContextMenuTrigger, {\n      id: \"systemdetail_right_click\",\n      item: this.props.systemDetails,\n      collect: collect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.props.systemDetails.description ? this.props.systemDetails.description : 'No Description')))), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Sub systems\"), this.props.systemDetails.subsystemLinks ? this.props.systemDetails.subsystemLinks.map((subsystem, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"systemCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, subsystem.title))));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Services\"), this.props.systemDetails.services ? this.props.systemDetails.services.map((services, i) => {\n      return React.createElement(\"div\", {\n        key: services.id,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"serviceCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"service-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, services.name)), React.createElement(Tooltip, {\n        placement: \"top\",\n        toggle: () => this.toggle(\"service-\".concat(i)),\n        isOpen: this.state[\"service-\".concat(i)],\n        autohide: false,\n        target: \"service-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, services.id)));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"References\"), this.props.systemDetails.references ? this.props.systemDetails.references.map((references, i) => {\n      return React.createElement(\"div\", {\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"referenceArrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"\\u2192\"), React.createElement(\"span\", {\n        id: \"reference-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, references.name)), React.createElement(Tooltip, {\n        placement: \"top\",\n        toggle: () => this.toggle(\"reference-\".concat(i)),\n        isOpen: this.state[\"reference-\".concat(i)],\n        autohide: false,\n        target: \"reference-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, references.id)));\n    }) : \"\"))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getSystemDetails: (modelId, systemId) => {\n      dispatch(fetchSystemDetils(modelId, systemId));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeModel: state.model.modelUri,\n    systemDetails: state.system.systemDetails\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemDetails);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/SystemDetails.js"],"names":["React","Component","VerticalScrollbars","ContextMenu","MenuItem","ContextMenuTrigger","Collapse","Modal","ModalBody","Tooltip","fetchSystemDetils","connect","collect","props","item","SystemDetails","constructor","toggle","target","setState","state","collapse","systemCollapseId","subSystemCollapseId","modal","tooltipOpen","close","bind","toggleDescription","modalToggle","updateSystemDetails","componentWillMount","event","value","key","type","prevState","fetch","process","env","REACT_APP_API","activeModel","systemDetails","id","method","headers","body","JSON","stringify","description","then","response","getSystemDetails","catch","error","console","log","menu","e","data","render","itemType","name","subsystemLinks","map","subsystem","i","title","services","references","mapDispatchToProps","dispatch","modelId","systemId","mapStateToProps","activeSystem","model","modelUri","system"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport { Collapse, Modal, ModalBody, Tooltip } from \"reactstrap\";\nimport { fetchSystemDetils } from '../../../store/system/systemActions'\nimport { connect } from 'react-redux';\n\nfunction collect(props) {\n  return { item: props.item };\n}\n\nclass SystemDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: true,\n      systemCollapseId: false,\n      subSystemCollapseId: false,\n      modal: false,\n      tooltipOpen: false\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateSystemDetails = this.updateSystemDetails.bind(this);\n  }\n\n  toggle = (target) => {\n    this.setState({\n      ...this.state,\n      [target]: !this.state[target]\n    });\n  };\n\n  componentWillMount() {\n    //this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem)\n  }\n\n  updateSystemDetails(event) {\n    let value = event.target.value;\n    if ((event.key === 'Enter' || event.type === 'blur') && this.state.modal && value) {\n      event.target.value = '';\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n      fetch(\n        process.env.REACT_APP_API + `${this.props.activeModel}/system/` + this.props.systemDetails.id,\n        {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ description: value })\n        }\n      )\n        .then(response => this.props.getSystemDetails(this.props.activeModel, this.props.systemDetails.id))\n        .catch(error => console.log(error));\n    }\n\n  }\n\n  toggleDescription() {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n\n\n  //Closes the system details section\n  close(menu, type) {\n    this.props.close(menu, type);\n  }\n\n  //control right click modal\n  modalToggle(e, data) {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    if (data) {\n      this.setState({\n        item: data.item,\n      })\n\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"org_browser\">\n        <ContextMenu id=\"systemdetail_right_click\">\n          <MenuItem data={{ itemType: 'rename' }} onClick={this.modalToggle}>\n            Update\n      </MenuItem>\n        </ContextMenu>\n        <Modal isOpen={this.state.modal} toggle={this.modalToggle} >\n          <ModalBody>\n            <div>\n              <textarea onBlur={this.updateSystemDetails.bind(this)} onKeyDown={this.updateSystemDetails.bind(this)}>\n                {this.props.systemDetails.description}\n              </textarea>\n            </div>\n          </ModalBody>\n        </Modal>\n        <h3 className=\"text-center text-white\">\n          System Details\n          <i\n            className=\"fas fa-times system-down-icon browser_close\"\n            onClick={() => this.close(\"systemDetail\", \"menuDetail\")}\n          />\n        </h3>\n\n\n        <VerticalScrollbars autoHide>\n          <div className=\"browser_wrapper\">\n            <div className=\"org-selector\">\n              <p className=\"text-white text-left\">\n              </p>\n            </div>\n            <div className=\"ob-block row\">\n              <div className=\"col-md-6 m-b-20\">\n                <p className=\"text-white text-left\">\n                  <span id=\"system-detail-name\">{this.props.systemDetails.name}</span>\n\n                  <i\n                    className=\"fas fa-chevron-down system-down-icon\"\n                    onClick={this.toggleDescription}\n                  />\n                </p>\n                <Tooltip placement=\"top\" toggle={() => this.toggle('system-detail-name')} isOpen={this.state['system-detail-name']} autohide={false} target={'system-detail-name'} >\n                  {this.props.systemDetails.id}\n                </Tooltip>\n\n              </div>\n              <div className=\"col-md-6 m-b-20\">\n                <p className=\"text-white text-left\">Support lvl: Gold</p>\n              </div>\n              <Collapse\n                isOpen={this.state.collapse}\n                className=\"systemDetailsDisc\"\n              >\n                <ContextMenuTrigger id=\"systemdetail_right_click\" item={this.props.systemDetails} collect={collect}>\n                  <p className=\"text-grey\">\n                    {this.props.systemDetails.description ? this.props.systemDetails.description : 'No Description'}\n                  </p>\n                </ContextMenuTrigger>\n              </Collapse>\n            </div>\n\n\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">Sub systems</p>\n              {this.props.systemDetails.subsystemLinks\n                ? this.props.systemDetails.subsystemLinks.map((subsystem, i) => {\n                  return (\n\n                    <div key={i} className=\"d-flex w-100\">\n\n                      <div className=\"col-md-12\">\n\n                        <p className=\"text-grey text-left\" >\n                          <span className=\"systemCircle\" >\n\n                          </span>\n                          <span>{subsystem.title}</span>\n                        </p>\n\n                        \n\n                      </div>\n\n                    </div>\n                  );\n                })\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">Services</p>\n              {this.props.systemDetails.services\n                ? this.props.systemDetails.services.map((services, i) => {\n                  return (\n                    <div key={services.id} className=\"d-flex w-100\">\n                      <div className=\"col-md-12\">\n                        <p className=\"text-grey text-left\">\n                          <span className=\"serviceCircle\" />\n\n                          <span id={`service-${i}`}>{services.name}</span>\n                        </p>\n                        <Tooltip placement=\"top\" toggle={() => this.toggle(`service-${i}`)} isOpen={this.state[`service-${i}`]} autohide={false} target={`service-${i}`} >\n                          {services.id}\n                     </Tooltip>  \n\n                      </div>\n\n                    </div>\n                  );\n                })\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">References</p>\n              {this.props.systemDetails.references\n                ? this.props.systemDetails.references.map((references, i) => {\n                  return (\n                    <div className=\"d-flex w-100\">\n                      <div className=\"col-md-12\">\n                        <p className=\"text-grey text-left\">\n                          <span className=\"referenceArrow\">→</span>\n\n                          <span id={`reference-${i}`}>{references.name}</span>\n                        \n                        </p>\n                        <Tooltip placement=\"top\" toggle={() => this.toggle(`reference-${i}`)} isOpen={this.state[`reference-${i}`]} autohide={false} target={`reference-${i}`} >\n                          {references.id}\n                     </Tooltip> \n                      </div>\n                    </div>\n                  );\n                })\n                : \"\"}\n            </div>\n          </div>\n        </VerticalScrollbars>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getSystemDetails: (modelId, systemId) => {\n      dispatch(fetchSystemDetils(modelId, systemId));\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeModel: state.model.modelUri,\n    systemDetails: state.system.systemDetails,\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemDetails);"]},"metadata":{},"sourceType":"module"}