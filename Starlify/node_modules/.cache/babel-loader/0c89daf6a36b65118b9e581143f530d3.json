{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/ModalAcess.js\";\nimport React, { Component } from \"react\";\nimport { Modal, ModalBody, Col, Row, Collapse } from \"reactstrap\";\nimport check from \"../../../_assets/icons/icons/check-icon.svg\";\nimport { connect } from \"react-redux\";\nimport closeIcon from \"../../../_assets/icons/icons/exitwhite.svg\";\nimport checkbig from \"../../../_assets/icons/icons/checkbig.svg\";\n\nclass ModalAcess extends Component {\n  constructor(props) {\n    super(props);\n\n    this.modalToggle = () => {\n      this.setState({\n        popup: !this.state.popup,\n        eventType: null\n      });\n    };\n\n    this.selectModel = e => {\n      this.setState({\n        modeluri: e.target.value,\n        collapse_div: null,\n        collapse_team: null\n      });\n      fetch(process.env.REACT_APP_API + e.target.value).then(res => res.json()).then(result => {\n        this.setState({\n          model: result,\n          accessEditor: true\n        });\n      }).catch(error => {\n        this.setState({\n          model: null,\n          accessEditor: false\n        });\n      });\n      var modelArr = e.target.value.split(\"/\");\n      this.fetchModelGrants(modelArr[2]);\n      this.fetchDivisions(this.props.domain);\n    };\n\n    this.fetchModelGrants = modelId => {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/grant/\" + modelId).then(res => res.json()).then(json => {\n        this.setState({\n          grants: json\n        });\n      });\n    };\n\n    this.fetchDivisions = domainId => {\n      return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId).then(res => res.json()).then(result => {\n        var org = result.organisation;\n        fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + org.id + \"/organisations\").then(res => res.json()).then(async json => {\n          var organisations = json;\n\n          for (var i = 0; i < organisations.length; i++) {\n            let org = organisations[i];\n            org[\"teams\"] = [];\n\n            if (org._links && org._links.length !== 0 && this.state.model !== null) {\n              await this.fetchTeams(domainId, this.state.model.id, org.id).then(teams => org[\"teams\"] = teams);\n            }\n          }\n\n          this.setState({\n            divisions: organisations\n          });\n          return true;\n        });\n      });\n    };\n\n    this.fetchTeams = (domainId, modelId, orgid) => {\n      return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + orgid + \"/organisations\").then(res => res.json()).then(json => {\n        var organisations = json;\n\n        for (var i = 0; i < organisations.length; i++) {\n          let org = organisations[i];\n          org[\"persons\"] = [];\n\n          if (org._links && org._links.length !== 0) {\n            this.fetchPersons(domainId, modelId, org.id).then(persons => org[\"persons\"] = persons);\n          }\n        }\n\n        return organisations;\n      });\n    };\n\n    this.fetchPersons = (domainId, modelId, orgid) => {\n      return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + orgid + \"/persons\").then(res => res.json()).then(persons => {\n        return persons;\n      });\n    };\n\n    this.editAccess = e => {\n      this.state.divisions.forEach(division => {\n        if (division.id === e.target.id) {\n          this.setState({\n            editDivison: division\n          });\n        }\n      });\n      this.setState({\n        eventType: \"access-edit\",\n        popup: true\n      });\n    };\n\n    this.onGrantChange = (e, grantid) => {\n      if (e.target.checked) {\n        this.addGrantAccess(this.props.domain, this.state.model.id, grantid, e.target.value);\n      } else {\n        this.deleteGrantAccess(this.props.domain, this.state.model.id, grantid, e.target.value);\n      }\n    };\n\n    this.addGrantAccess = (domainId, modelId, grantid, value) => {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/grant/\" + modelId + \"/\" + grantid + \"/permission/\" + value, {\n        method: \"POST\"\n      }).then(result => {\n        this.fetchModelGrants(this.state.model.id);\n      }).catch(error => {});\n    };\n\n    this.deleteGrantAccess = (domainId, modelId, grantid, value) => {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/grant/\" + modelId + \"/\" + grantid + \"/permission/\" + value, {\n        method: \"DELETE\"\n      }).then(result => {\n        this.fetchModelGrants(this.state.model.id);\n      }).catch(error => {});\n    };\n\n    this.collapseDivList = divisionId => {\n      var collapse_div = this.state.collapse_div;\n      var collapse = null;\n\n      if (collapse_div === null) {\n        collapse = divisionId;\n      } else {\n        if (divisionId === collapse_div) collapse = null;else collapse = divisionId;\n      }\n\n      this.setState({\n        collapse_div: collapse\n      });\n    };\n\n    this.collapseTeamList = teamId => {\n      var collapse_team = this.state.collapse_team;\n      var collapse = null;\n\n      if (collapse_team === null) {\n        collapse = teamId;\n      } else {\n        if (teamId === collapse_team) collapse = null;else collapse = teamId;\n      }\n\n      this.setState({\n        collapse_team: collapse\n      });\n    };\n\n    this.close = this.close.bind(this);\n    this.fetchDivisions = this.fetchDivisions.bind(this);\n    this.fetchTeams = this.fetchTeams.bind(this);\n    this.fetchPersons = this.fetchPersons.bind(this);\n    this.state = {\n      modeluri: \"\",\n      model: null,\n      models: [],\n      divisions: [],\n      grants: [],\n      editDivison: null,\n      accessEditor: false,\n      popup: false,\n      eventType: null,\n      collapse_div: null,\n      collapse_team: null\n    };\n  }\n\n  close(type) {\n    this.props.close(type);\n  }\n\n  componentDidMount() {\n    var domainID = this.props.domain;\n\n    if (domainID !== \"\") {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainID).then(res => res.json()).then(result => {\n        this.setState({\n          models: result.links\n        });\n      }).catch(error => {\n        this.setState({\n          models: []\n        });\n      });\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    const domain = newProps.domain,\n          type = newProps.type;\n\n    switch (type) {\n      case \"SELECTDOMAIN\":\n        this.setState({\n          modeluri: \"\",\n          model: null,\n          models: [],\n          divisions: [],\n          grants: [],\n          accessEditor: false,\n          popup: false,\n          eventType: null\n        });\n\n        if (domain !== \"\") {\n          fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domain).then(res => res.json()).then(result => {\n            this.setState({\n              models: result.links\n            });\n          }).catch(error => {\n            this.setState({\n              models: []\n            });\n          });\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const models = this.state.models;\n    var editDivison = this.state.editDivison;\n    var stripes = true;\n\n    if (this.state.editDivison !== null) {\n      var eDRead = false;\n      var eDWrite = false;\n      this.state.grants.forEach(item => {\n        if (item.principal.id === this.state.editDivison.id) {\n          eDRead = item.permissions.includes(\"RESOURCE_READ\") ? true : false;\n          eDWrite = item.permissions.includes(\"RESOURCE_ANY\") ? true : false;\n        }\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.popup,\n      toggle: this.modalToggle,\n      className: \"selectModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, this.state.eventType === \"model-choose\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"d-inline-block modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Choose model\"), React.createElement(\"button\", {\n      className: \"btn grey-btn modal-top-btn\",\n      onClick: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \" Done \", React.createElement(\"img\", {\n      src: check,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), \" \"), React.createElement(\"p\", {\n      className: \"text-white text-size-16 m-t-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Choose which model you want to edit\"), React.createElement(\"div\", {\n      className: \"model-list m-t-35\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, models && models.map((item, i) => React.createElement(\"li\", {\n      key: \"models_\" + i,\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"8\",\n      className: \"modelName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \" \", item.title, \" \"), React.createElement(Col, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"mod_opt\" + i,\n      name: \"modelUri\",\n      value: item.uri,\n      checked: this.state.modeluri === item.uri,\n      onChange: this.selectModel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"mod_opt\" + i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }))))))), this.state.eventType === \"access-edit\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"d-inline-block modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \" Edit access for \", editDivison.name, \" \"), React.createElement(\"button\", {\n      className: \"btn grey-btn modal-top-btn\",\n      onClick: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \" Done \", React.createElement(\"img\", {\n      src: check,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: \"modalAccesListing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"division_model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_body_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"modelListWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"modelListHeader text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: \"3\",\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \" Read \"), React.createElement(Col, {\n      sm: \"3\",\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \" Write \"), React.createElement(Col, {\n      sm: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }))), React.createElement(\"li\", {\n      className: \"modelListbody text-white divisionListItem no_bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex \".concat(stripes ? 'linestripe' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"5\",\n      className: \"divisionitemtext listpadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, editDivison.teams.length !== 0 && React.createElement(\"i\", {\n      className: \"fas fa-chevron-down \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), editDivison.name), React.createElement(Col, {\n      sm: \"3\",\n      className: \"text-center listpadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"regular-checkbox\",\n      checked: eDRead ? \"checked\" : \"\",\n      id: \"read_\" + editDivison.id,\n      defaultValue: \"RESOURCE_READ\",\n      onChange: e => {\n        this.onGrantChange(e, editDivison.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"read_\" + editDivison.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"3\",\n      className: \"text-center listpadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"regular-checkbox\",\n      checked: eDWrite ? \"checked\" : \"\",\n      id: \"write_\" + editDivison.id,\n      defaultValue: \"RESOURCE_ANY\",\n      onChange: e => {\n        this.onGrantChange(e, editDivison.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"write_\" + editDivison.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"teamListWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, editDivison.teams.map((team, i) => {\n      var tmRead = false;\n      var tmWrite = false;\n      stripes = stripes ? false : true;\n      this.state.grants.forEach(item => {\n        if (item.principal.id === team.id) {\n          tmRead = item.permissions.includes(\"RESOURCE_READ\") ? true : false;\n          tmWrite = item.permissions.includes(\"RESOURCE_ANY\") ? true : false;\n        }\n      });\n      return React.createElement(\"li\", {\n        key: \"tm_key\" + i,\n        className: \"teamListItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex \".concat(stripes ? 'linestripe' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"5\",\n        className: \"teamitemtext listpadding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, team.persons.length !== 0 && React.createElement(\"i\", {\n        className: \"fas fa-chevron-down \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), team.name), React.createElement(Col, {\n        sm: \"3\",\n        className: \"text-center listpadding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"regular-checkbox\",\n        checked: tmRead ? \"checked\" : \"\",\n        id: \"read_\" + team.id,\n        defaultValue: \"RESOURCE_READ\",\n        onChange: e => {\n          this.onGrantChange(e, team.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"read_\" + team.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"3\",\n        className: \"text-center listpadding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"regular-checkbox\",\n        checked: tmWrite ? \"checked\" : \"\",\n        id: \"write_\" + team.id,\n        defaultValue: \"RESOURCE_ANY\",\n        onChange: e => {\n          this.onGrantChange(e, team.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"write_\" + team.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        className: \"developerListWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, team.persons.map((person, i) => {\n        var prRead = false;\n        var prWrite = false;\n        stripes = stripes ? false : true;\n        this.state.grants.forEach(item => {\n          if (item.principal.id === person.id) {\n            prRead = item.permissions.includes(\"RESOURCE_READ\") ? true : false;\n            prWrite = item.permissions.includes(\"RESOURCE_ANY\") ? true : false;\n          }\n        });\n        return React.createElement(\"li\", {\n          key: \"pr_key\" + i,\n          className: \"developerListItem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"d-flex \".concat(stripes ? 'linestripe' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"5\",\n          className: \"developeritemtext listpadding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }, \" \", person.name, \" \"), React.createElement(Col, {\n          sm: \"3\",\n          className: \"text-center listpadding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          className: \"regular-checkbox\",\n          checked: prRead ? \"checked\" : \"\",\n          id: \"read_\" + person.id,\n          defaultValue: \"RESOURCE_READ\",\n          onChange: e => {\n            this.onGrantChange(e, person.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: \"read_\" + person.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        })), React.createElement(Col, {\n          sm: \"3\",\n          className: \"text-center listpadding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          className: \"regular-checkbox\",\n          checked: prWrite ? \"checked\" : \"\",\n          id: \"write_\" + person.id,\n          defaultValue: \"RESOURCE_ANY\",\n          onChange: e => {\n            this.onGrantChange(e, person.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: \"write_\" + person.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        })), React.createElement(Col, {\n          sm: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        })));\n      })));\n    })))))))))))), this.state.accessEditor === false && React.createElement(\"div\", {\n      className: \"modalAccesListing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_header text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-key submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, \"Model Access\"), React.createElement(\"img\", {\n      src: closeIcon,\n      alt: \"starlify\",\n      className: \"system-down-icon submenu-icon\",\n      onClick: () => this.close(\"modelAccess\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text-right modelChooseWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      href: null,\n      className: \"modelChoose raleway\",\n      onClick: () => {\n        this.setState({\n          eventType: \"model-choose\",\n          popup: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \" Choose model \"))), React.createElement(\"div\", {\n      className: \"browser_body emptyBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center text-white m-t-45 text-size-18\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, \"So you need to give access to your division, teams or developers?\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }), \"You\\u2019ve come to the right place.\"), React.createElement(\"p\", {\n      className: \"text-center text-white m-t-40 text-size-18\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, \"Just click the \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"Choose model\"), \" button and choose what \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }), \"model you need to work in and then you can start adding \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }), \"your division, teams and developers.\"), React.createElement(\"h1\", {\n      className: \"text-center text-grey m-t-85\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, \"No chosen model\"))), this.state.accessEditor === true && React.createElement(\"div\", {\n      className: \"modalAccesListing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_header text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-key submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, \"Model Access\"), React.createElement(\"img\", {\n      src: closeIcon,\n      alt: \"starlify\",\n      className: \"system-down-icon submenu-icon\",\n      onClick: () => this.close(\"modelAccess\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, \"Edit models access for \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, this.state.model.name)), React.createElement(\"div\", {\n      className: \"text-right modelChooseWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"d-inline-block modelChoose\",\n      onClick: () => {\n        this.setState({\n          eventType: \"model-choose\",\n          popup: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, \" Change model \"))), React.createElement(\"div\", {\n      className: \"browser_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"division_model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_body_header text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Divisions\")), React.createElement(\"div\", {\n      className: \"browser_body_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"modelListWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"modelListHeader text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }), React.createElement(Col, {\n      sm: \"3\",\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, \" Read \"), React.createElement(Col, {\n      sm: \"3\",\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, \" Write \"), React.createElement(Col, {\n      sm: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }))), this.state.divisions && this.state.divisions.length !== 0 && this.state.divisions.map((division, i) => {\n      var divRead = false;\n      var divWrite = false;\n      this.state.grants.forEach(item => {\n        if (item.principal.id === division.id) {\n          divRead = item.permissions.includes(\"RESOURCE_READ\") ? true : false;\n          divWrite = item.permissions.includes(\"RESOURCE_ANY\") ? true : false;\n        }\n      });\n      return React.createElement(\"li\", {\n        key: \"dv_key\" + i,\n        className: \"modelListbody text-white divisionListItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(Row, {\n        onClick: () => this.collapseDivList(division.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"5\",\n        className: \"divisionitemtext listpadding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, division.teams.length !== 0 && React.createElement(\"i\", {\n        className: \"fas fa-chevron-\".concat(this.state.collapse_div === division.id ? 'down' : 'right'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }), division.name), React.createElement(Col, {\n        sm: \"3\",\n        className: \"text-center listpadding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: divRead ? \"fas fa-check\" : \"fas fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"3\",\n        className: \"text-center listpadding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: divWrite ? \"fas fa-check\" : \"fas fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"1\",\n        className: \"listpadding p-l-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        id: division.id,\n        className: \"fas fa-pen\",\n        onClick: this.editAccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }), \" \")), React.createElement(Collapse, {\n        isOpen: this.state.collapse_div === division.id ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"teamListWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, division.teams.map((team, i) => {\n        var tmRead = false;\n        var tmWrite = false;\n        this.state.grants.forEach(item => {\n          if (item.principal.id === team.id) {\n            tmRead = item.permissions.includes(\"RESOURCE_READ\") ? true : false;\n            tmWrite = item.permissions.includes(\"RESOURCE_ANY\") ? true : false;\n          }\n        });\n        return React.createElement(\"li\", {\n          key: \"tm_key\" + i,\n          className: \"teamListItem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511\n          },\n          __self: this\n        }, React.createElement(Row, {\n          onClick: () => this.collapseTeamList(team.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 512\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"5\",\n          className: \"teamitemtext listpadding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 513\n          },\n          __self: this\n        }, team.persons.length !== 0 && React.createElement(\"i\", {\n          className: \"fas fa-chevron-\".concat(this.state.collapse_team === team.id ? 'down' : 'right'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515\n          },\n          __self: this\n        }), team.name), React.createElement(Col, {\n          sm: \"3\",\n          className: \"text-center listpadding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: tmRead ? \"fas fa-check\" : \"fas fa-times\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 520\n          },\n          __self: this\n        })), React.createElement(Col, {\n          sm: \"3\",\n          className: \"text-center listpadding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: tmWrite ? \"fas fa-check\" : \"fas fa-times\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 523\n          },\n          __self: this\n        }))), React.createElement(Collapse, {\n          isOpen: this.state.collapse_team === team.id ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"developerListWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527\n          },\n          __self: this\n        }, team.persons.map((person, i) => {\n          var prRead = false;\n          var prWrite = false;\n          this.state.grants.forEach(item => {\n            if (item.principal.id === person.id) {\n              prRead = item.permissions.includes(\"RESOURCE_READ\") ? true : false;\n              prWrite = item.permissions.includes(\"RESOURCE_ANY\") ? true : false;\n            }\n          });\n          return React.createElement(\"li\", {\n            key: \"pr_key\" + i,\n            className: \"developerListItem\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 539\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 540\n            },\n            __self: this\n          }, React.createElement(Col, {\n            sm: \"5\",\n            className: \"developeritemtext listpadding\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 541\n            },\n            __self: this\n          }, \" \", person.name, \" \"), React.createElement(Col, {\n            sm: \"3\",\n            className: \"text-center listpadding\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 542\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: prRead ? \"fas fa-check\" : \"fas fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 543\n            },\n            __self: this\n          })), React.createElement(Col, {\n            sm: \"3\",\n            className: \"text-center listpadding\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 545\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: prWrite ? \"fas fa-check\" : \"fas fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 546\n            },\n            __self: this\n          }))));\n        }))));\n      }))));\n    }))))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain,\n    type: state.model.type\n  };\n}\n\nexport default connect(mapStateToProps)(ModalAcess);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/ModalAcess.js"],"names":["React","Component","Modal","ModalBody","Col","Row","Collapse","connect","ModalAcess","constructor","props","modalToggle","setState","popup","state","eventType","selectModel","e","modeluri","target","value","collapse_div","collapse_team","fetch","process","env","REACT_APP_API","then","res","json","result","model","accessEditor","catch","error","modelArr","split","fetchModelGrants","fetchDivisions","domain","modelId","grants","domainId","org","organisation","id","organisations","i","length","_links","fetchTeams","teams","divisions","orgid","fetchPersons","persons","editAccess","forEach","division","editDivison","onGrantChange","grantid","checked","addGrantAccess","deleteGrantAccess","method","collapseDivList","divisionId","collapse","collapseTeamList","teamId","close","bind","models","type","componentDidMount","domainID","links","componentWillReceiveProps","newProps","render","stripes","eDRead","eDWrite","item","principal","permissions","includes","check","map","title","uri","name","team","tmRead","tmWrite","person","prRead","prWrite","closeIcon","divRead","divWrite","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal, ModalBody, Col, Row, Collapse } from \"reactstrap\";\nimport check from \"../../../_assets/icons/icons/check-icon.svg\";\nimport { connect } from \"react-redux\";\nimport closeIcon from \"../../../_assets/icons/icons/exitwhite.svg\";\nimport checkbig from \"../../../_assets/icons/icons/checkbig.svg\"\nclass ModalAcess extends Component {\n  constructor(props) {\n    super(props);\n    this.close = this.close.bind(this);\n    this.fetchDivisions = this.fetchDivisions.bind(this);\n    this.fetchTeams = this.fetchTeams.bind(this);\n    this.fetchPersons = this.fetchPersons.bind(this);\n    this.state = {\n      modeluri: \"\",\n      model: null,\n      models: [],\n      divisions: [],\n      grants: [],\n      editDivison: null,\n      accessEditor: false,\n      popup: false,\n      eventType: null,\n      collapse_div: null,\n      collapse_team: null\n    };\n  }\n\n  close(type) {\n    this.props.close(type);\n  }\n\n  modalToggle = () => {\n    this.setState({\n      popup: !this.state.popup,\n      eventType: null\n    });\n  };\n\n  selectModel = e => {\n    this.setState({\n      modeluri: e.target.value,\n      collapse_div: null,\n      collapse_team: null\n    });\n    fetch(process.env.REACT_APP_API + e.target.value)\n      .then(res => res.json())\n      .then(result => {\n        this.setState({\n          model: result,\n          accessEditor: true\n        });\n      })\n      .catch(error => {\n        this.setState({\n          model: null,\n          accessEditor: false\n        });\n      });\n      var modelArr = e.target.value.split(\"/\");\n      this.fetchModelGrants(modelArr[2]);\n      this.fetchDivisions(this.props.domain);\n  };\n\n  fetchModelGrants = modelId => {\n    fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/grant/\" + modelId )\n      .then(res => res.json())\n      .then(json => {\n        this.setState({ grants: json });\n      });\n  };\n\n  fetchDivisions = domainId => {\n    return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId)\n      .then(res => res.json())\n      .then(result => {\n\n        var org = result.organisation;\n        fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + org.id + \"/organisations\" )\n        .then(res => res.json())\n        .then(async (json) => {\n          var organisations = json;\n          for (var i = 0; i < organisations.length; i++) {\n            let org = organisations[i];\n            org[\"teams\"] = [];\n            if (org._links && org._links.length !== 0 && this.state.model !== null) {\n              await this.fetchTeams(domainId, this.state.model.id, org.id).then(\n                teams => (org[\"teams\"] = teams)\n              );\n            }\n          }\n          this.setState({\n            divisions: organisations\n          });\n          return true;\n        });\n\n      });\n  };\n\n  fetchTeams = (domainId, modelId, orgid) => {\n    return fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + orgid + \"/organisations\" )\n      .then(res => res.json())\n      .then(json => {\n        var organisations = json;\n        for (var i = 0; i < organisations.length; i++) {\n          let org = organisations[i];\n          org[\"persons\"] = [];\n          if (org._links && org._links.length !== 0) {\n            this.fetchPersons(domainId, modelId, org.id).then(\n              persons => (org[\"persons\"] = persons)\n            );\n          }\n        }\n        return organisations;\n      });\n  };\n\n  fetchPersons = (domainId, modelId, orgid) => {\n    return fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + orgid + \"/persons\" )\n      .then(res => res.json())\n      .then(persons => {\n        return persons;\n      });\n  };\n\n  editAccess = (e) => {\n    this.state.divisions.forEach((division)=>{\n      if (division.id === e.target.id) {\n        this.setState({\n          editDivison: division\n        })\n      }\n    })\n    this.setState({\n      eventType: \"access-edit\",\n      popup: true\n    })\n  }\n\n  onGrantChange = (e, grantid) => {\n    if (e.target.checked) {\n      this.addGrantAccess( this.props.domain, this.state.model.id, grantid, e.target.value );\n    } else {\n      this.deleteGrantAccess( this.props.domain, this.state.model.id, grantid, e.target.value );\n    }\n  };\n\n  addGrantAccess = (domainId, modelId, grantid, value) => {\n    fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/grant/\" + modelId + \"/\" + grantid + \"/permission/\" + value, { method: \"POST\" } )\n      .then(result => {\n        this.fetchModelGrants(this.state.model.id);\n      })\n      .catch(error => { });\n  };\n\n  deleteGrantAccess = (domainId, modelId, grantid, value) => {\n    fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/grant/\" + modelId + \"/\" + grantid + \"/permission/\" + value, { method: \"DELETE\" } )\n      .then(result => {\n        this.fetchModelGrants(this.state.model.id);\n      })\n      .catch(error => { });\n  };\n\n  componentDidMount() {\n    var domainID = this.props.domain;\n    if (domainID !== \"\") {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainID)\n        .then(res => res.json())\n        .then(result => {\n          this.setState({\n            models: result.links\n          });\n        })\n        .catch(error => {\n          this.setState({ models: [] });\n        });\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    const { domain, type } = newProps;\n    switch (type) {\n      case \"SELECTDOMAIN\":\n        this.setState({\n          modeluri: \"\",\n          model: null,\n          models: [],\n          divisions: [],\n          grants: [],\n          accessEditor: false,\n          popup: false,\n          eventType: null\n        });\n        if (domain !== \"\") {\n          fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domain)\n            .then(res => res.json())\n            .then(result => {\n              this.setState({\n                models: result.links\n              });\n            })\n            .catch(error => {\n              this.setState({ models: [] });\n            });\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  collapseDivList = (divisionId) => {\n    var {collapse_div} = this.state;\n    var collapse = null;\n    if (collapse_div === null) {\n      collapse = divisionId;\n    }else{\n      if (divisionId === collapse_div) collapse = null;\n      else collapse = divisionId;\n    }\n    this.setState({\n      collapse_div: collapse\n    })\n  }\n\n  collapseTeamList = (teamId) => {\n    var {collapse_team} = this.state;\n    var collapse = null;\n    if (collapse_team === null) {\n      collapse = teamId;\n    }else{\n      if (teamId === collapse_team) collapse = null;\n      else collapse = teamId;\n    }\n    this.setState({\n      collapse_team: collapse\n    })\n  }\n\n  render() {\n    const models = this.state.models;\n    var editDivison = this.state.editDivison;\n    var stripes = true;\n    if (this.state.editDivison !== null) {\n      var eDRead = false;\n      var eDWrite = false;\n      this.state.grants.forEach((item) => {\n        if (item.principal.id === this.state.editDivison.id) {\n          eDRead = item.permissions.includes( \"RESOURCE_READ\" ) ? true : false;\n          eDWrite = item.permissions.includes( \"RESOURCE_ANY\" ) ? true : false;\n        }\n      });\n    }\n    return (\n      <div className=\"browser\">\n        <Modal isOpen={this.state.popup} toggle={this.modalToggle} className=\"selectModal\" >\n          <ModalBody>\n            {this.state.eventType === \"model-choose\" && (\n              <div>\n                  <h3 className=\"d-inline-block modal-title\">Choose model</h3>\n                  <button className=\"btn grey-btn modal-top-btn\" onClick={this.modalToggle}> Done <img src={check} alt=\"\" /> </button>\n                  <p className=\"text-white text-size-16 m-t-10\">\n                    Choose which model you want to edit\n                  </p>\n                  <div className=\"model-list m-t-35\">\n                    <ul>\n                      {models && models.map((item, i) => (\n                        <li  key={\"models_\" + i} className=\"d-flex\">\n                          <Col md=\"8\" className=\"modelName\"> {item.title} </Col>\n                          <Col md=\"4\">\n                            <input type=\"radio\" id={\"mod_opt\"+i} name=\"modelUri\" value={item.uri} checked={this.state.modeluri === item.uri} onChange={this.selectModel} />\n                            <label htmlFor={\"mod_opt\"+i}></label>\n                            <div className=\"check\"></div>\n                          </Col>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n              </div>\n            )}\n            {this.state.eventType === \"access-edit\" &&(\n              <div>\n                  <h3 className=\"d-inline-block modal-title\"> Edit access for {editDivison.name} </h3>\n                  <button className=\"btn grey-btn modal-top-btn\" onClick={this.modalToggle}> Done <img src={check} alt=\"\" /> </button>\n                  <div className=\"modalAccesListing\">\n                    <div className=\"browser_body\">\n                      <div className=\"division_model\">\n                        <div className=\"browser_body_content\">\n                          <div>\n                            <ul className=\"modelListWrapper\">\n                              <li className=\"modelListHeader text-white\">\n                                <Row>\n                                  <Col sm=\"5\"></Col>\n                                  <Col sm=\"3\" className=\"text-center\"> Read </Col>\n                                  <Col sm=\"3\" className=\"text-center\"> Write </Col>\n                                  <Col sm=\"1\"></Col>\n                                </Row>\n                              </li>\n                              <li className=\"modelListbody text-white divisionListItem no_bg\">\n                                <div className={`d-flex ${stripes ? 'linestripe':''}`}>\n                                  <Col sm=\"5\" className=\"divisionitemtext listpadding\">\n                                  {editDivison.teams.length !== 0 &&(\n                                    <i className=\"fas fa-chevron-down \"></i>\n                                  )}\n                                  {editDivison.name}\n                                  </Col>\n                                  <Col sm=\"3\" className=\"text-center listpadding\">\n                                    <input type=\"checkbox\" className=\"regular-checkbox\" checked={eDRead ? \"checked\" : \"\"} id={\"read_\" + editDivison.id} defaultValue=\"RESOURCE_READ\" onChange={e => { this.onGrantChange(e, editDivison.id); }}/>\n                                    <label htmlFor={\"read_\" + editDivison.id}></label>\n                                  </Col>\n                                  <Col sm=\"3\" className=\"text-center listpadding\">\n                                    <input type=\"checkbox\" className=\"regular-checkbox\" checked={eDWrite ? \"checked\" : \"\"} id={\"write_\" + editDivison.id} defaultValue=\"RESOURCE_ANY\" onChange={e => { this.onGrantChange(e, editDivison.id); }} />\n                                    <label htmlFor={\"write_\" + editDivison.id}></label>\n                                  </Col>\n                                  <Col sm=\"1\"></Col>\n                                </div>\n\n                                <ul className=\"teamListWrapper\">\n                                  {\n                                    editDivison.teams.map((team, i) => {\n                                      var tmRead = false;\n                                      var tmWrite = false;\n                                      stripes = (stripes)? false: true;\n                                      this.state.grants.forEach((item) => {\n                                        if (item.principal.id === team.id) {\n                                          tmRead = item.permissions.includes( \"RESOURCE_READ\" ) ? true : false;\n                                          tmWrite = item.permissions.includes( \"RESOURCE_ANY\" ) ? true : false;\n                                        }\n                                      });\n                                      return (\n                                        <li key={\"tm_key\"+i} className=\"teamListItem\">\n                                          <div className={`d-flex ${stripes ? 'linestripe':''}`}>\n                                            <Col sm=\"5\" className=\"teamitemtext listpadding\">\n                                            {team.persons.length !== 0 &&(\n                                              <i className=\"fas fa-chevron-down \"></i>\n                                            )}\n                                            {team.name}\n                                            </Col>\n                                            <Col sm=\"3\" className=\"text-center listpadding\">\n                                              <input type=\"checkbox\" className=\"regular-checkbox\" checked={tmRead ? \"checked\" : \"\"} id={\"read_\" + team.id} defaultValue=\"RESOURCE_READ\" onChange={e => { this.onGrantChange(e, team.id); }}/>\n                                              <label htmlFor={\"read_\" + team.id}></label>\n                                            </Col>\n                                            <Col sm=\"3\" className=\"text-center listpadding\">\n                                              <input type=\"checkbox\" className=\"regular-checkbox\" checked={tmWrite ? \"checked\" : \"\"} id={\"write_\" + team.id} defaultValue=\"RESOURCE_ANY\" onChange={e => { this.onGrantChange(e, team.id); }} />\n                                              <label htmlFor={\"write_\" + team.id}></label>\n                                            </Col>\n                                            <Col sm=\"1\"></Col>\n                                          </div>\n                                          <ul className=\"developerListWrapper\">\n                                            {\n                                              team.persons.map((person, i) => {\n                                                var prRead = false;\n                                                var prWrite = false;\n                                                stripes = (stripes)? false: true;\n                                                this.state.grants.forEach((item) => {\n                                                  if (item.principal.id === person.id) {\n                                                    prRead = item.permissions.includes( \"RESOURCE_READ\" ) ? true : false;\n                                                    prWrite = item.permissions.includes( \"RESOURCE_ANY\" ) ? true : false;\n                                                  }\n                                                });\n                                                return (\n                                                  <li key={\"pr_key\"+i} className=\"developerListItem\">\n                                                    <div className={`d-flex ${stripes ? 'linestripe':''}`}>\n                                                      <Col sm=\"5\" className=\"developeritemtext listpadding\"> {person.name} </Col>\n                                                      <Col sm=\"3\" className=\"text-center listpadding\">\n                                                        <input type=\"checkbox\" className=\"regular-checkbox\" checked={prRead ? \"checked\" : \"\"} id={\"read_\" + person.id} defaultValue=\"RESOURCE_READ\" onChange={e => { this.onGrantChange(e, person.id); }}/>\n                                                        <label htmlFor={\"read_\" + person.id}></label>\n                                                      </Col>\n                                                      <Col sm=\"3\" className=\"text-center listpadding\">\n                                                        <input type=\"checkbox\" className=\"regular-checkbox\" checked={prWrite ? \"checked\" : \"\"} id={\"write_\" + person.id} defaultValue=\"RESOURCE_ANY\" onChange={e => { this.onGrantChange(e, person.id); }}/>\n                                                        <label htmlFor={\"write_\" + person.id}></label>\n                                                      </Col>\n                                                      <Col sm=\"1\"></Col>\n                                                    </div>\n                                                  </li>\n                                                )\n                                              })\n                                            }\n                                          </ul>\n                                        </li>\n                                      )\n                                    })\n                                  }\n                                </ul>\n\n                              </li>\n\n                            </ul>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n              </div>\n            )}\n\n          </ModalBody>\n        </Modal>\n        {this.state.accessEditor === false && (\n          <div className=\"modalAccesListing\">\n            <div className=\"browser_header text-white\">\n              <div>\n                <i className=\"fas fa-key submenu-icon\"></i>\n                <h3 className=\"d-inline-block\">Model Access</h3>\n                <img\n            src={closeIcon}\n            alt=\"starlify\"\n            className=\"system-down-icon submenu-icon\"\n            onClick={() => this.close(\"modelAccess\")}\n          />\n              </div>\n              <div className=\"text-right modelChooseWrapper\">\n                <button href={null} className=\"modelChoose raleway\" onClick={() => { this.setState({ eventType: \"model-choose\", popup: true }); }} > Choose model </button>\n              </div>\n            </div>\n            <div className=\"browser_body emptyBody\">\n              <p className=\"text-center text-white m-t-45 text-size-18\">\n                So you need to give access to your division, teams or\n                developers?\n                <br />\n                You’ve come to the right place.\n              </p>\n              <p className=\"text-center text-white m-t-40 text-size-18\">\n                Just click the <strong>Choose model</strong> button and choose what <br />\n                model you need to work in and then you can start adding <br />\n                your division, teams and developers.\n              </p>\n              <h1 className=\"text-center text-grey m-t-85\">No chosen model</h1>\n            </div>\n          </div>\n        )}\n\n        {this.state.accessEditor === true && (\n          <div className=\"modalAccesListing\">\n            <div className=\"browser_header text-white\">\n              <div>\n                <i className=\"fas fa-key submenu-icon\"></i>\n                <h3 className=\"d-inline-block\">Model Access</h3>\n                <img\n            src={closeIcon}\n            alt=\"starlify\"\n            className=\"system-down-icon submenu-icon\"\n            onClick={() => this.close(\"modelAccess\")}\n          />\n              </div>\n              <p>\n                Edit models access for <span>{this.state.model.name}</span>\n              </p>\n              <div className=\"text-right modelChooseWrapper\">\n                <button className=\"d-inline-block modelChoose\" onClick={() => { this.setState({ eventType: \"model-choose\", popup: true }); }} > Change model </button>\n              </div>\n            </div>\n            <div className=\"browser_body\">\n              <div className=\"division_model\">\n                <div className=\"browser_body_header text-white\">\n                  <h4 className=\"d-inline-block\">Divisions</h4>\n                </div>\n                <div className=\"browser_body_content\">\n                  <div>\n                    <ul className=\"modelListWrapper\">\n                      <li className=\"modelListHeader text-white\">\n                        <Row>\n                          <Col sm=\"5\"></Col>\n                          <Col sm=\"3\" className=\"text-center\"> Read </Col>\n                          <Col sm=\"3\" className=\"text-center\"> Write </Col>\n                          <Col sm=\"1\"></Col>\n                        </Row>\n                      </li>\n\n                      {this.state.divisions && this.state.divisions.length !== 0 && this.state.divisions.map((division, i) => {\n                          var divRead = false;\n                          var divWrite = false;\n                          this.state.grants.forEach((item) => {\n                            if (item.principal.id === division.id) {\n                              divRead = item.permissions.includes( \"RESOURCE_READ\" ) ? true : false;\n                              divWrite = item.permissions.includes( \"RESOURCE_ANY\" ) ? true : false;\n                            }\n                          });\n                          return (\n                            <li key={\"dv_key\"+i} className=\"modelListbody text-white divisionListItem\" >\n                              <Row onClick={() => this.collapseDivList(division.id)}>\n                                <Col sm=\"5\" className=\"divisionitemtext listpadding\">\n                                  {division.teams.length !== 0 &&(\n                                    <i className={`fas fa-chevron-${this.state.collapse_div === division.id ? 'down' : 'right'}`}></i>\n                                  )}\n                                  {division.name}\n                                </Col>\n                                <Col sm=\"3\" className=\"text-center listpadding\">\n                                  <i className={divRead ? \"fas fa-check\" : \"fas fa-times\"}></i>\n                                </Col>\n                                <Col sm=\"3\" className=\"text-center listpadding\">\n                                  <i className={divWrite ? \"fas fa-check\" : \"fas fa-times\"}></i>\n                                </Col>\n                                <Col sm=\"1\" className=\"listpadding p-l-0\"> <i id={division.id} className=\"fas fa-pen\" onClick={this.editAccess}></i> </Col>\n                              </Row>\n\n                              <Collapse isOpen={this.state.collapse_div === division.id ? true : false}>\n                                <ul className=\"teamListWrapper\">\n                                  {\n                                    division.teams.map((team, i) => {\n                                      var tmRead = false;\n                                      var tmWrite = false;\n                                      this.state.grants.forEach((item) => {\n                                        if (item.principal.id === team.id) {\n                                          tmRead = item.permissions.includes( \"RESOURCE_READ\" ) ? true : false;\n                                          tmWrite = item.permissions.includes( \"RESOURCE_ANY\" ) ? true : false;\n                                        }\n                                      });\n                                      return (\n                                        <li key={\"tm_key\"+i} className=\"teamListItem\">\n                                          <Row onClick={() => this.collapseTeamList(team.id)}>\n                                            <Col sm=\"5\" className=\"teamitemtext listpadding\">\n                                              {team.persons.length !== 0 &&(\n                                                <i className={`fas fa-chevron-${this.state.collapse_team === team.id ? 'down' : 'right'}`}></i>\n                                              )}\n                                              {team.name}\n                                            </Col>\n                                            <Col sm=\"3\" className=\"text-center listpadding\">\n                                              <i className={tmRead ? \"fas fa-check\" : \"fas fa-times\"}></i>\n                                            </Col>\n                                            <Col sm=\"3\" className=\"text-center listpadding\">\n                                              <i className={tmWrite ? \"fas fa-check\" : \"fas fa-times\"}></i>\n                                            </Col>\n                                          </Row>\n                                          <Collapse isOpen={this.state.collapse_team === team.id ? true : false}>\n                                            <ul className=\"developerListWrapper\">\n                                              {\n                                                team.persons.map((person, i) => {\n                                                  var prRead = false;\n                                                  var prWrite = false;\n                                                  this.state.grants.forEach((item) => {\n                                                    if (item.principal.id === person.id) {\n                                                      prRead = item.permissions.includes( \"RESOURCE_READ\" ) ? true : false;\n                                                      prWrite = item.permissions.includes( \"RESOURCE_ANY\" ) ? true : false;\n                                                    }\n                                                  });\n                                                  return (\n                                                    <li key={\"pr_key\"+i} className=\"developerListItem\">\n                                                      <Row>\n                                                        <Col sm=\"5\" className=\"developeritemtext listpadding\"> {person.name} </Col>\n                                                        <Col sm=\"3\" className=\"text-center listpadding\">\n                                                          <i className={prRead ? \"fas fa-check\" : \"fas fa-times\"}></i>\n                                                        </Col>\n                                                        <Col sm=\"3\" className=\"text-center listpadding\">\n                                                          <i className={prWrite ? \"fas fa-check\" : \"fas fa-times\"}></i>\n                                                        </Col>\n                                                      </Row>\n                                                    </li>\n                                                  )\n                                                })\n                                              }\n                                            </ul>\n                                          </Collapse>\n\n                                        </li>\n                                      )\n                                    })\n                                  }\n                                </ul>\n                              </Collapse>\n\n                            </li>\n                          );\n                        })}\n\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain,\n    type: state.model.type\n  };\n}\n\nexport default connect(mapStateToProps)(ModalAcess);\n"]},"metadata":{},"sourceType":"module"}