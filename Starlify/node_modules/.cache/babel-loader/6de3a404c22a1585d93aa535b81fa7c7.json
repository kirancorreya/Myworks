{"ast":null,"code":"import _objectSpread from \"/Users/kirancorreya/Site/Starlify/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/SystemDetails.js\";\nimport React, { Component } from \"react\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport { fetchSystemDetils } from \"../../../store/system/systemActions\";\nimport { fetchModel } from \"../../../store/model/modelActions\";\nimport { connect } from \"react-redux\";\nimport { Collapse, Modal, ModalBody, Tooltip, Input, Label, Button } from \"reactstrap\";\n\nclass SystemDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = target => {\n      this.setState(_objectSpread({}, this.state, {\n        [target]: !this.state[target]\n      }));\n    };\n\n    this.state = {\n      collapse: true,\n      systemCollapseId: false,\n      subSystemCollapseId: false,\n      modal: false,\n      editSubSystem: false,\n      details: {},\n      formData: {\n        name: \"\",\n        description: \"\",\n        supportLevel: \"\"\n      },\n      subsystemName: '',\n      serviceName: ''\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateSystem = this.updateSystem.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addUiToggle = this.addUiToggle.bind(this);\n  } //manage add more system/flow text box to ui\n\n\n  addUiToggle(event, type) {\n    if (type === \"system\") {\n      this.setState(state => ({\n        systemAdd: !state.systemAdd\n      }));\n    } else if (type === \"service\") {\n      this.setState(state => ({\n        serviceAdd: !state.serviceAdd\n      }));\n    } else if (type === \"reference\") {\n      this.setState(state => ({\n        referenceAdd: !state.referenceAdd\n      }));\n    }\n  }\n\n  editfield(key, title, type) {\n    if (type === \"subsystem\") {\n      this.setState({\n        [\"subsystem-\" + key]: true\n      });\n      this.setState({\n        [\"subsystem-value-\" + key]: title\n      });\n    } else if (type === \"service\") {\n      this.setState({\n        [\"service-\" + key]: true\n      });\n      this.setState({\n        [\"service-value-\" + key]: title\n      });\n    } else if (type === \"reference\") {\n      this.setState({\n        [\"reference-\" + key]: true\n      });\n      this.setState({\n        [\"reference-value-\" + key]: title\n      });\n    }\n  }\n\n  editFieldChange(key, type, event) {\n    if (type === \"subsystem\") {\n      this.setState({\n        [\"subsystem-\" + key]: true\n      });\n      this.setState({\n        [\"subsystem-value-\" + key]: event.target.value\n      });\n    } else if (type === \"service\") {\n      this.setState({\n        [\"service-\" + key]: true\n      });\n      this.setState({\n        [\"service-value-\" + key]: event.target.value\n      });\n    } else if (type === \"reference\") {\n      this.setState({\n        [\"reference-\" + key]: true\n      });\n      this.setState({\n        [\"reference-value-\" + key]: event.target.value\n      });\n    }\n  }\n\n  updateEntity(key, uri, type) {\n    var value = \"\";\n    var id = \"\";\n\n    if (type === \"system\") {\n      let splitArray = uri.split(\"/\");\n      if (splitArray.length > 0) id = splitArray[4];\n      this.setState({\n        [\"subsystem-\" + key]: false\n      });\n      value = this.state[\"subsystem-value-\".concat(key)];\n    } else if (type === \"service\") {\n      this.setState({\n        [\"service-\" + key]: false\n      });\n      id = uri;\n      value = this.state[\"service-value-\".concat(key)];\n    } else if (type === \"reference\") {\n      id = uri;\n      this.setState({\n        [\"reference-\" + key]: false\n      });\n      value = this.state[\"reference-value-\".concat(key)];\n    }\n\n    fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/\").concat(type, \"/\") + id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: value\n      })\n    }).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n    });\n  }\n\n  getAllSystems() {\n    return fetch(process.env.REACT_APP_API + \"/hypermedia/network/\" + this.props.activeModelId + \"/allsystems\").then(res => res.json()).then(response => {\n      this.setState({\n        systems: response\n      });\n    }).catch(error => console.log(error));\n  } //create Sub System\n\n\n  createSubSystem() {\n    fetch(process.env.REACT_APP_API + \"/hypermedia/network/\".concat(this.props.activeModelId, \"/system/\").concat(this.props.activeSystem, \"/system\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(responseJson => {\n      return fetch(process.env.REACT_APP_API + \"/hypermedia/network/\".concat(this.props.activeModelId, \"/system/\") + responseJson.id, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: this.state.subsystemName\n        })\n      }).then(response => {\n        this.setState({\n          'subsystemName': ''\n        });\n        this.props.getSystems(this.props.activeModelId);\n        this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n      });\n    });\n  } //create service\n\n\n  createService(event) {\n    fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/system/\").concat(this.props.activeSystem, \"/service\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(responseJson => {\n      return fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/service/\") + responseJson.id, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: this.state.serviceName\n        })\n      }).then(response => {\n        this.setState({\n          'serviceName': ''\n        });\n        this.props.getSystems(this.props.activeModelId);\n        this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n      });\n    });\n  } //create reference\n\n\n  createReference(event) {\n    let value = event.target.value;\n\n    if ((event.key === \"Enter\" || event.type === \"blur\") && value && this.state.serviceId) {\n      event.target.value = \"\";\n      fetch(process.env.REACT_APP_API + \"\".concat(this.props.activeModel, \"/system/\").concat(this.props.activeSystem, \"/reference/\").concat(this.state.serviceId), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: value\n        })\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"\".concat(this.props.activeModel, \"/reference/\") + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: value\n          })\n        }).then(response => {\n          this.props.getSystems(this.props.activeModelId);\n          this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n          this.getAllSystems();\n        });\n      });\n    }\n  } //Delete sub system\n\n\n  getSubSystemId(Uri, type) {\n    let splitArray = Uri.split(\"/\");\n\n    if (splitArray.length > 0) {\n      this.deleteEntity(splitArray[4]);\n    }\n  } //Delete entity\n\n\n  deleteEntity(id) {\n    return fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/modeled/\").concat(id), {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n    });\n  } //get systems and services list for adding new reference\n\n\n  getSystemService(event) {\n    let parents = this.state.systems;\n    let parent = parents.filter(parent => parent.name === event.target.value);\n    if (parent) this.setState({\n      servicesList: parent[0].services\n    });\n  }\n\n  handleChange(event) {\n    const formData = this.state.formData;\n    formData[event.target.name] = event.target.value;\n    this.setState({\n      formData\n    });\n  }\n\n  serviceHandleChange(event) {\n    this.setState({\n      serviceId: event.target.value\n    });\n  }\n\n  addHandleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    console.log(event.target.name);\n    console.log(event.target.value);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.activeSystem !== nextProps.activeSystem) this.props.getSystemDetails(this.props.activeModel, nextProps.activeSystem);\n  }\n\n  componentWillMount() {\n    this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n    this.getAllSystems();\n  }\n\n  updateSystem() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n    fetch(process.env.REACT_APP_API + \"/hypermedia/network/\".concat(this.props.activeModelId, \"/system/\") + this.props.systemDetails.id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state.formData)\n    }).then(response => this.props.getSystemDetails(this.props.activeModel, this.props.systemDetails.id)).catch(error => console.log(error));\n  }\n\n  toggleDescription() {\n    this.setState(state => ({\n      collapse: !state.collapse\n    }));\n  } //Closes the system details section\n\n\n  close(menu, type) {\n    this.props.close(menu, type);\n  } //control right click modal\n\n\n  modalToggle(e, data) {\n    this.setState({\n      formData: {\n        name: this.props.systemDetails.name,\n        description: this.props.systemDetails.description\n      }\n    });\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    if (data) {\n      this.setState({\n        details: {\n          description: data.description\n        }\n      });\n    }\n  }\n\n  render() {\n    var _this$state = this.state,\n        formData = _this$state.formData,\n        systems = _this$state.systems;\n    return React.createElement(\"div\", {\n      className: \"org_browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper system-full-edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org-selector col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left float-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"Edit System Details\"), React.createElement(\"button\", {\n      className: \"btn grey-btn done-btn float-right\",\n      onClick: this.updateSystem.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-check-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }), \" Done\"))), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"system-detail-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      className: \"text-input\",\n      value: formData.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"description\",\n      className: \"text-input\",\n      value: formData.description || \"\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"ob-block row mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-white text-left mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"Sub systems\", \" \", !this.state.systemAdd && React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon round-button\",\n      id: \"system\",\n      onClick: e => {\n        this.addUiToggle(e, \"system\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }), this.state.systemAdd && React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      className: \"bullet-line w-100 green-bullet extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"text-input form-control text-grey adding-text\",\n      type: \"text\",\n      id: \"system\",\n      name: \"subsystemName\",\n      value: this.state.subsystemName,\n      onChange: this.addHandleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"round-button\",\n      onClick: e => {\n        this.addUiToggle(e, \"system\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      onClick: this.createSubSystem.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    })))), this.props.systemDetails.subsystemLinks ? this.props.systemDetails.subsystemLinks.map((subsystem, i) => {\n      return React.createElement(\"div\", {\n        className: \"text-white text-left mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bullet-line text-grey green-bullet w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, !this.state[\"subsystem-\".concat(i)] && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, subsystem.title), this.state[\"subsystem-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"input\", {\n        className: \"text-input form-control text-grey adding-text\",\n        type: \"text\",\n        id: \"system\",\n        onChange: this.editFieldChange.bind(this, i, \"subsystem\"),\n        value: this.state[\"subsystem-value-\".concat(i)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }))), this.state[\"subsystem-\".concat(i)] && React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        onClick: this.updateEntity.bind(this, i, subsystem.uri, \"system\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      })), !this.state[\"subsystem-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pencil-alt\",\n        onClick: this.editfield.bind(this, i, subsystem.title, \"subsystem\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash\",\n        onClick: this.getSubSystemId.bind(this, subsystem.uri),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      })))));\n    }) : \"\")), React.createElement(\"div\", {\n      className: \"ob-block row mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-white text-left mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, \"Services\", \" \", !this.state.serviceAdd && React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon round-button\",\n      id: \"system\",\n      onClick: e => {\n        this.addUiToggle(e, \"service\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }), this.state.serviceAdd && React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bullet-line w-100 blue-bullet extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"text-input form-control text-grey adding-text\",\n      type: \"text\",\n      id: \"system\",\n      name: \"serviceName\",\n      onChange: this.addHandleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"round-button\",\n      onClick: e => {\n        this.addUiToggle(e, \"service\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      onClick: this.createService.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    })))), this.props.systemDetails.services ? this.props.systemDetails.services.map((service, i) => {\n      return React.createElement(\"div\", {\n        className: \"text-white text-left mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bullet-line text-grey green-bullet w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, !this.state[\"service-\".concat(i)] && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, service.name), this.state[\"service-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"input\", {\n        className: \"text-input form-control text-grey adding-text\",\n        type: \"text\",\n        id: \"service\",\n        onChange: this.editFieldChange.bind(this, i, \"service\"),\n        value: this.state[\"service-value-\".concat(i)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }))), this.state[\"service-\".concat(i)] && React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        onClick: this.updateEntity.bind(this, i, service.id, \"service\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      })), !this.state[\"service-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pencil-alt\",\n        onClick: this.editfield.bind(this, i, service.name, \"service\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash\",\n        onClick: this.deleteEntity.bind(this, service.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      })))));\n    }) : \"\")), React.createElement(\"div\", {\n      className: \"ob-block row mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637\n      },\n      __self: this\n    }, \"References\", \" \", !this.state.referenceAdd && React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon round-button\",\n      id: \"system\",\n      onClick: e => {\n        this.addUiToggle(e, \"reference\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640\n      },\n      __self: this\n    })), this.state.referenceAdd && React.createElement(\"div\", {\n      className: \" w-100 no-bullet extra-add mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }, \"Create new reference\"), React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"text-input no-border\",\n      type: \"select\",\n      name: \"select\",\n      onChange: this.getSystemService.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663\n      },\n      __self: this\n    }, \"Systems\"), this.state.systems ? systems.map((system, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: system.name,\n        id: system.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }, system.name);\n    }) : \"\")), React.createElement(\"div\", {\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"text-input no-border\",\n      type: \"select\",\n      name: \"select\",\n      id: \"exampleSelect\",\n      onChange: this.serviceHandleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }, \"Service\"), this.state.servicesList ? this.state.servicesList.map((item, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691\n        },\n        __self: this\n      }, item.name);\n    }) : \"\")), React.createElement(\"div\", {\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"text-input mt-0 no-border\",\n      type: \"text\",\n      name: \"text\",\n      id: \"example\",\n      placeholder: \"Add New Reference\",\n      onBlur: this.createReference.bind(this),\n      onKeyDown: this.createReference.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"round-button mt-2\",\n      onClick: e => {\n        this.addUiToggle(e, \"reference\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724\n      },\n      __self: this\n    }, this.props.systemDetails.references ? this.props.systemDetails.references.map((reference, i) => {\n      return React.createElement(\"div\", {\n        className: \"text-white text-left mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bullet-line text-grey arrow-bullet w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731\n        },\n        __self: this\n      }, !this.state[\"reference-\".concat(i)] && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733\n        },\n        __self: this\n      }, reference.name), this.state[\"reference-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"input\", {\n        className: \"text-input form-control text-grey adding-text\",\n        type: \"text\",\n        id: \"service\",\n        onChange: this.editFieldChange.bind(this, i, \"reference\"),\n        value: this.state[\"reference-value-\".concat(i)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }))), this.state[\"reference-\".concat(i)] && React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        onClick: this.updateEntity.bind(this, i, reference.id, \"reference\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      })), !this.state[\"reference-\".concat(i)] && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pencil-alt\",\n        onClick: this.editfield.bind(this, i, reference.name, \"reference\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"action-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash\",\n        onClick: this.deleteEntity.bind(this, reference.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782\n        },\n        __self: this\n      })))));\n    }) : \"\"))))), React.createElement(\"h3\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804\n      },\n      __self: this\n    }, \"System Details\", React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon browser_close\",\n      onClick: () => this.close(\"systemDetail\", \"menuDetail\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"far fa-edit\",\n      onClick: () => this.modalToggle(this, this.props.systemDetails),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      autoHide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"system-detail-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824\n      },\n      __self: this\n    }, this.props.systemDetails.name, React.createElement(Tooltip, {\n      className: \"tooltip-custom\",\n      placement: \"top\",\n      toggle: () => this.toggle(\"system-detail-name\"),\n      isOpen: this.state[\"system-detail-name\"],\n      autohide: false,\n      target: \"system-detail-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826\n      },\n      __self: this\n    }, this.props.systemDetails.id)), React.createElement(\"i\", {\n      className: \"fas fa-chevron-down system-down-icon\",\n      onClick: this.toggleDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-md-6 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      isOpen: this.state.collapse,\n      className: \"systemDetailsDisc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849\n      },\n      __self: this\n    }, this.props.systemDetails.description ? this.props.systemDetails.description : \"No Description\"))), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858\n      },\n      __self: this\n    }, \"Sub systems\"), this.props.systemDetails.subsystemLinks ? this.props.systemDetails.subsystemLinks.map((subsystem, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"subsystemCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867\n        },\n        __self: this\n      }, subsystem.title))));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877\n      },\n      __self: this\n    }, \"Services\"), this.props.systemDetails.services ? this.props.systemDetails.services.map((services, i) => {\n      return React.createElement(\"div\", {\n        key: services.id,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"serviceCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"service-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886\n        },\n        __self: this\n      }, services.name, React.createElement(Tooltip, {\n        className: \"tooltip-custom\",\n        placement: \"top\",\n        toggle: () => this.toggle(\"service-\".concat(i)),\n        isOpen: this.state[\"service-\".concat(i)],\n        autohide: false,\n        target: \"service-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 888\n        },\n        __self: this\n      }, services.id)))));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907\n      },\n      __self: this\n    }, \"References\"), this.props.systemDetails.references ? this.props.systemDetails.references.map((references, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 911\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 912\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 913\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"referenceArrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914\n        },\n        __self: this\n      }, \"\\u2192\"), React.createElement(\"span\", {\n        id: \"reference-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916\n        },\n        __self: this\n      }, references.name, \" \", React.createElement(Tooltip, {\n        placement: \"top\",\n        className: \"tooltip-custom\",\n        toggle: () => this.toggle(\"reference-\".concat(i)),\n        isOpen: this.state[\"reference-\".concat(i)],\n        autohide: false,\n        target: \"reference-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918\n        },\n        __self: this\n      }, references.id)))));\n    }) : \"\"))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getSystemDetails: (modelId, systemId) => {\n      dispatch(fetchSystemDetils(modelId, systemId));\n    },\n    getSystems: modelId => {\n      dispatch(fetchModel(modelId));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeModel: state.model.modelUri,\n    activeModelId: state.model.modelId,\n    systemDetails: state.system.systemDetails,\n    type: state.system.type\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemDetails);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/SystemDetails.js"],"names":["React","Component","VerticalScrollbars","fetchSystemDetils","fetchModel","connect","Collapse","Modal","ModalBody","Tooltip","Input","Label","Button","SystemDetails","constructor","props","toggle","target","setState","state","collapse","systemCollapseId","subSystemCollapseId","modal","editSubSystem","details","formData","name","description","supportLevel","subsystemName","serviceName","close","bind","toggleDescription","modalToggle","updateSystem","handleChange","addUiToggle","event","type","systemAdd","serviceAdd","referenceAdd","editfield","key","title","editFieldChange","value","updateEntity","uri","id","splitArray","split","length","fetch","process","env","REACT_APP_API","activeModelId","method","headers","body","JSON","stringify","then","response","getSystems","getSystemDetails","activeModel","activeSystem","getAllSystems","res","json","systems","catch","error","console","log","createSubSystem","responseJson","createService","createReference","serviceId","getSubSystemId","Uri","deleteEntity","getSystemService","parents","parent","filter","servicesList","services","serviceHandleChange","addHandleChange","componentWillReceiveProps","nextProps","componentWillMount","prevState","systemDetails","menu","e","data","render","subsystemLinks","map","subsystem","i","service","system","item","references","reference","mapDispatchToProps","dispatch","modelId","systemId","mapStateToProps","model","modelUri"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport { fetchSystemDetils } from \"../../../store/system/systemActions\";\nimport { fetchModel } from \"../../../store/model/modelActions\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Modal,\n  ModalBody,\n  Tooltip,\n  Input,\n  Label,\n  Button\n} from \"reactstrap\";\n\nclass SystemDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: true,\n      systemCollapseId: false,\n      subSystemCollapseId: false,\n      modal: false,\n      editSubSystem: false,\n      details: {},\n      formData: {\n        name: \"\",\n        description: \"\",\n        supportLevel: \"\"\n      },\n      subsystemName : '',\n      serviceName : ''\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateSystem = this.updateSystem.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addUiToggle = this.addUiToggle.bind(this);\n  }\n\n  //manage add more system/flow text box to ui\n  addUiToggle(event, type) {\n    if (type === \"system\") {\n      this.setState(state => ({ systemAdd: !state.systemAdd }));\n    } else if (type === \"service\") {\n      this.setState(state => ({ serviceAdd: !state.serviceAdd }));\n    } else if (type === \"reference\") {\n      this.setState(state => ({ referenceAdd: !state.referenceAdd }));\n    }\n  }\n\n  editfield(key, title, type) {\n    if (type === \"subsystem\") {\n      this.setState({ [\"subsystem-\" + key]: true });\n      this.setState({ [\"subsystem-value-\" + key]: title });\n    } else if (type === \"service\") {\n      this.setState({ [\"service-\" + key]: true });\n      this.setState({ [\"service-value-\" + key]: title });\n    } else if (type === \"reference\") {\n      this.setState({ [\"reference-\" + key]: true });\n      this.setState({ [\"reference-value-\" + key]: title });\n    }\n  }\n\n  editFieldChange(key, type, event) {\n    if (type === \"subsystem\") {\n      this.setState({ [\"subsystem-\" + key]: true });\n      this.setState({ [\"subsystem-value-\" + key]: event.target.value });\n    } else if (type === \"service\") {\n      this.setState({ [\"service-\" + key]: true });\n      this.setState({ [\"service-value-\" + key]: event.target.value });\n    } else if (type === \"reference\") {\n      this.setState({ [\"reference-\" + key]: true });\n      this.setState({ [\"reference-value-\" + key]: event.target.value });\n    }\n  }\n\n  updateEntity(key, uri, type) {\n    var value = \"\";\n    var id = \"\";\n    if (type === \"system\") {\n      let splitArray = uri.split(\"/\");\n      if (splitArray.length > 0) id = splitArray[4];\n      this.setState({ [\"subsystem-\" + key]: false });\n      value = this.state[`subsystem-value-${key}`];\n    } else if (type === \"service\") {\n      this.setState({ [\"service-\" + key]: false });\n      id = uri;\n      value = this.state[`service-value-${key}`];\n    } else if (type === \"reference\") {\n      id = uri;\n      this.setState({ [\"reference-\" + key]: false });\n      value = this.state[`reference-value-${key}`];\n    }\n\n    fetch(\n      process.env.REACT_APP_API +\n      `/model/${this.props.activeModelId}/${type}/` +\n      id,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ name: value })\n      }\n    ).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(\n        this.props.activeModel,\n        this.props.activeSystem\n      );\n    });\n  }\n\n  getAllSystems() {\n    return fetch(\n      process.env.REACT_APP_API +\n      \"/hypermedia/network/\" +\n      this.props.activeModelId +\n      \"/allsystems\"\n    )\n      .then(res => res.json())\n      .then(response => {\n        this.setState({ systems: response });\n      })\n      .catch(error => console.log(error));\n  }\n\n  //create Sub System\n  createSubSystem() {\n      fetch(\n        process.env.REACT_APP_API +\n        `/hypermedia/network/${this.props.activeModelId}/system/${this.props.activeSystem}/system`,\n        { method: \"POST\", headers: { \"Content-Type\": \"application/json\" } }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          return fetch(\n            process.env.REACT_APP_API +\n            `/hypermedia/network/${this.props.activeModelId}/system/` +\n            responseJson.id,\n            {\n              method: \"PATCH\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ name: this.state.subsystemName })\n            }\n          ).then(response => {\n            this.setState({'subsystemName' : ''})\n            this.props.getSystems(this.props.activeModelId);\n            this.props.getSystemDetails(\n              this.props.activeModel,\n              this.props.activeSystem\n            );\n          });\n        });\n  }\n\n  //create service\n  createService(event) {\n      fetch(\n        process.env.REACT_APP_API +\n        `/model/${this.props.activeModelId}/system/${this.props.activeSystem}/service`,\n        { method: \"POST\", headers: { \"Content-Type\": \"application/json\" } }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          return fetch(\n            process.env.REACT_APP_API +\n            `/model/${this.props.activeModelId}/service/` +\n            responseJson.id,\n            {\n              method: \"PATCH\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ name: this.state.serviceName })\n            }\n          ).then(response => {\n            this.setState({'serviceName' : ''})\n            this.props.getSystems(this.props.activeModelId);\n            this.props.getSystemDetails(\n              this.props.activeModel,\n              this.props.activeSystem\n            );\n          });\n        });\n  }\n\n  //create reference\n  createReference(event) {\n    let value = event.target.value;\n    if (\n      (event.key === \"Enter\" || event.type === \"blur\") &&\n      value &&\n      this.state.serviceId\n    ) {\n      event.target.value = \"\";\n      fetch(\n        process.env.REACT_APP_API +\n        `${this.props.activeModel}/system/${this.props.activeSystem}/reference/${this.state.serviceId}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ name: value })\n        }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          return fetch(\n            process.env.REACT_APP_API +\n            `${this.props.activeModel}/reference/` +\n            responseJson.id,\n\n            {\n              method: \"PATCH\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({ name: value })\n            }\n          ).then(response => {\n            this.props.getSystems(this.props.activeModelId);\n            this.props.getSystemDetails(\n              this.props.activeModel,\n              this.props.activeSystem\n            );\n            this.getAllSystems();\n          });\n        });\n    }\n  }\n\n  //Delete sub system\n  getSubSystemId(Uri, type) {\n    let splitArray = Uri.split(\"/\");\n    if (splitArray.length > 0) {\n      this.deleteEntity(splitArray[4]);\n    }\n  }\n\n  //Delete entity\n  deleteEntity(id) {\n    return fetch(\n      process.env.REACT_APP_API +\n      `/model/${this.props.activeModelId}/modeled/${id}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    ).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(\n        this.props.activeModel,\n        this.props.activeSystem\n      );\n    });\n  }\n  //get systems and services list for adding new reference\n  getSystemService(event) {\n    let parents = this.state.systems;\n    let parent = parents.filter(parent => parent.name === event.target.value);\n    if (parent) this.setState({ servicesList: parent[0].services });\n  }\n  handleChange(event) {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({\n      formData\n    });\n  }\n\n  serviceHandleChange(event) {\n    this.setState({ serviceId: event.target.value });\n  }\n\n  addHandleChange(event) {\n    this.setState({[event.target.name] : event.target.value});\n    console.log(event.target.name)\n    console.log(event.target.value)\n  }\n\n  toggle = target => {\n    this.setState({\n      ...this.state,\n      [target]: !this.state[target]\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.activeSystem !== nextProps.activeSystem)\n      this.props.getSystemDetails(\n        this.props.activeModel,\n        nextProps.activeSystem\n      );\n  }\n\n  componentWillMount() {\n    this.props.getSystemDetails(\n      this.props.activeModel,\n      this.props.activeSystem\n    );\n    this.getAllSystems();\n  }\n\n  updateSystem() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n    fetch(\n      process.env.REACT_APP_API +\n      `/hypermedia/network/${this.props.activeModelId}/system/` +\n      this.props.systemDetails.id,\n      {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(this.state.formData)\n      }\n    )\n      .then(response =>\n        this.props.getSystemDetails(\n          this.props.activeModel,\n          this.props.systemDetails.id\n        )\n      )\n      .catch(error => console.log(error));\n  }\n\n  toggleDescription() {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n\n  //Closes the system details section\n  close(menu, type) {\n    this.props.close(menu, type);\n  }\n\n  //control right click modal\n  modalToggle(e, data) {\n    this.setState({\n      formData: {\n        name: this.props.systemDetails.name,\n        description: this.props.systemDetails.description\n      }\n    });\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    if (data) {\n      this.setState({\n        details: { description: data.description }\n      });\n    }\n  }\n\n  render() {\n    var { formData, systems } = this.state;\n    return (\n      <div className=\"org_browser\">\n        <Modal isOpen={this.state.modal} toggle={this.modalToggle}>\n          <ModalBody>\n            <div className=\"browser_wrapper system-full-edit\">\n              <div className=\"row\">\n                <div className=\"org-selector col-md-12\">\n                  <p className=\"text-white text-left float-left\">\n                    Edit System Details\n                </p>\n                  <button className=\"btn grey-btn done-btn float-right\"  onClick={this.updateSystem.bind(this)}>\n                    <i className=\"fas fa-check-circle\"></i> Done\n                </button>\n                </div>\n              </div>\n              <div className=\"ob-block row\">\n                <div className=\"col-md-8 m-b-20\">\n                  <p className=\"text-white text-left\">\n                    <span id=\"system-detail-name\">\n                      <Label for=\"name\">Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"name\"\n                        className=\"text-input\"\n                        value={formData.name}\n                        onChange={this.handleChange}\n                      />\n                    </span>\n                  </p>\n\n                  <p className=\"text-white\">\n                    <Label for=\"name\">Description</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"description\"\n                      className=\"text-input\"\n                      value={formData.description || \"\"}\n                      onChange={this.handleChange}\n                    />\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"ob-block row mb-3\">\n                <div className=\"col-md-8\">\n                  <div className=\"text-white text-left mb-2\">\n                    Sub systems{\" \"}\n                    {!this.state.systemAdd && (\n                      <i\n                        className=\"fas fa-plus system-down-icon round-button\"\n                        id=\"system\"\n                        onClick={e => {\n                          this.addUiToggle(e, \"system\");\n                        }}\n                      />\n                    )}\n                    {this.state.systemAdd && (\n                      <div className=\"d-flex\">\n                        {\" \"}\n                        <div className=\"bullet-line w-100 green-bullet extra-add\">\n                          <input\n                            className=\"text-input form-control text-grey adding-text\"\n                            type=\"text\"\n                            id=\"system\"\n                            name = \"subsystemName\"\n                            value = {this.state.subsystemName}\n                            onChange = {this.addHandleChange.bind(this)}\n                            \n                          />\n                        </div>\n                        <div\n                          className=\"round-button\"\n                          onClick={e => {\n                            this.addUiToggle(e, \"system\");\n                          }}\n                        >\n                          <i className=\"fas fa-check\" onClick={this.createSubSystem.bind(this)}></i>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n\n\n                  {this.props.systemDetails.subsystemLinks\n                    ? this.props.systemDetails.subsystemLinks.map(\n                      (subsystem, i) => {\n                        return (\n                          <div className=\"text-white text-left mb-2\">\n                            <div className=\"d-flex\">\n                              <div className=\"bullet-line text-grey green-bullet w-100\">\n                                {!this.state[`subsystem-${i}`] && (\n                                  <span>{subsystem.title}</span>\n                                )}\n\n                                {this.state[`subsystem-${i}`] && (\n                                  <>\n                                    <input\n                                      className=\"text-input form-control text-grey adding-text\"\n                                      type=\"text\"\n                                      id=\"system\"\n                                      onChange={this.editFieldChange.bind(\n                                        this,\n                                        i,\n                                        \"subsystem\"\n                                      )}\n                                      value={this.state[`subsystem-value-${i}`]}\n                                    />\n\n                                  </>\n                                )}\n                              </div>\n\n                              {this.state[`subsystem-${i}`] && (\n                                <span className=\"action-button\">\n\n                                  <i\n                                    className=\"fas fa-check\"\n                                    onClick={this.updateEntity.bind(\n                                      this,\n                                      i,\n                                      subsystem.uri,\n                                      \"system\"\n                                    )}\n                                  ></i>\n\n                                </span>\n                              )}\n                              {!this.state[`subsystem-${i}`] && (\n                                <>\n                                  <span className=\"action-button\">\n                                    <i\n                                      className=\"fas fa-pencil-alt\"\n                                      onClick={this.editfield.bind(\n                                        this,\n                                        i,\n                                        subsystem.title,\n                                        \"subsystem\"\n                                      )}\n                                    ></i>\n                                  </span>\n                                  <span className=\"action-button\">\n                                    <i\n                                      className=\"fas fa-trash\"\n                                      onClick={this.getSubSystemId.bind(\n                                        this,\n                                        subsystem.uri\n                                      )}\n                                    ></i>\n                                  </span>\n                                </>\n                              )}\n                            </div>\n                          </div>\n\n\n                        );\n                      }\n                    )\n                    : \"\"}\n                </div>\n              </div>\n              <div className=\"ob-block row mb-3\">\n                <div className=\"col-md-8\">\n                  <div className=\"text-white text-left mb-2\">\n                    Services{\" \"}\n                    {!this.state.serviceAdd && (\n                      <i\n                        className=\"fas fa-plus system-down-icon round-button\"\n                        id=\"system\"\n                        onClick={e => {\n                          this.addUiToggle(e, \"service\");\n                        }}\n                      />\n                    )}\n                    {this.state.serviceAdd && (\n                      <div className=\"d-flex\">\n                        <div className=\"bullet-line w-100 blue-bullet extra-add\">\n                          <input\n                            className=\"text-input form-control text-grey adding-text\"\n                            type=\"text\"\n                            id=\"system\"\n                            name = \"serviceName\"\n                            onChange={this.addHandleChange.bind(this)}\n                          />\n\n                        </div>\n                        <div\n                          className=\"round-button\"\n                          onClick={e => {\n                            this.addUiToggle(e, \"service\");\n                          }}\n                        >\n                          <i className=\"fas fa-check\" onClick={this.createService.bind(this)}/>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  {this.props.systemDetails.services\n                    ? this.props.systemDetails.services.map((service, i) => {\n                      return (\n                        <div className=\"text-white text-left mb-2\">\n                          <div className=\"d-flex\">\n                            <div className=\"bullet-line text-grey green-bullet w-100\">\n                              {!this.state[`service-${i}`] && (\n                                <span>{service.name}</span>\n                              )}\n\n                              {this.state[`service-${i}`] && (\n                                <>\n                                  <input\n                                    className=\"text-input form-control text-grey adding-text\"\n                                    type=\"text\"\n                                    id=\"service\"\n                                    onChange={this.editFieldChange.bind(\n                                      this,\n                                      i,\n                                      \"service\"\n                                    )}\n                                    value={this.state[`service-value-${i}`]}\n                                  />\n\n                                </>\n                              )}\n                            </div>\n                            {this.state[`service-${i}`] && (\n                              <span className=\"action-button\">\n                                <i\n                                  className=\"fas fa-check\"\n                                  onClick={this.updateEntity.bind(\n                                    this,\n                                    i,\n                                    service.id,\n                                    \"service\"\n                                  )}\n                                ></i>\n                              </span>\n                            )}\n\n                            {!this.state[`service-${i}`] && (\n                              <>\n                                <span className=\"action-button\">\n                                  <i\n                                    className=\"fas fa-pencil-alt\"\n                                    onClick={this.editfield.bind(\n                                      this,\n                                      i,\n                                      service.name,\n                                      \"service\"\n                                    )}\n                                  ></i>\n                                </span>\n                                <span className=\"action-button\">\n                                  <i\n                                    className=\"fas fa-trash\"\n                                    onClick={this.deleteEntity.bind(\n                                      this,\n                                      service.id\n                                    )}\n                                  ></i>\n                                </span>\n                              </>\n                            )}\n                          </div>\n                        </div>\n\n                      );\n                    })\n                    : \"\"}\n                </div>\n              </div>\n              <div className=\"ob-block row mb-3\">\n                <div className=\"col-md-12\">\n                  <p className=\"text-white text-left\">\n                    References{\" \"}\n                    {!this.state.referenceAdd && (\n                      <i\n                        className=\"fas fa-plus system-down-icon round-button\"\n                        id=\"system\"\n                        onClick={e => {\n                          this.addUiToggle(e, \"reference\");\n                        }}\n                      />\n                    )}\n                  </p>\n\n                  {this.state.referenceAdd && (\n                    <div className=\" w-100 no-bullet extra-add mb-3\">\n                      \n                      <div className=\"text-grey\">Create new reference</div>\n\n                      <div className=\"d-flex\">\n                        <div className=\"mr-2\">\n                          <Input\n                            className=\"text-input no-border\"\n                            type=\"select\"\n                            name=\"select\"\n                            onChange={this.getSystemService.bind(this)}\n                          >\n                            <option>Systems</option>\n                            {this.state.systems\n                              ? systems.map((system, i) => {\n                                return (\n                                  <option\n                                    key={i}\n                                    value={system.name}\n                                    id={system.id}\n                                  >\n                                    {system.name}\n                                  </option>\n                                );\n                              })\n                              : \"\"}\n                          </Input>\n                        </div>\n                        <div className=\"mr-2\">\n                          <Input\n                            className=\"text-input no-border\"\n                            type=\"select\"\n                            name=\"select\"\n                            id=\"exampleSelect\"\n                            onChange={this.serviceHandleChange.bind(this)}\n                          >\n                            <option>Service</option>\n                            {this.state.servicesList\n                              ? this.state.servicesList.map((item, i) => {\n                                return (\n                                  <option key={i} value={item.id}>\n                                    {item.name}\n                                  </option>\n                                );\n                              })\n                              : \"\"}\n                          </Input>\n                        </div>\n                        <div className=\"mr-2\">\n                          <Input\n                            className=\"text-input mt-0 no-border\"\n                            type=\"text\"\n                            name=\"text\"\n                            id=\"example\"\n                            placeholder=\"Add New Reference\"\n                            onBlur={this.createReference.bind(this)}\n                            onKeyDown={this.createReference.bind(this)}\n                          />\n                        </div>\n                        <div>\n                          <div\n                            className=\"round-button mt-2\"\n                            onClick={e => {\n                              this.addUiToggle(e, \"reference\");\n                            }}\n                          >\n                            <i className=\"fas fa-check\" />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className=\"col-md-8\">\n                  {this.props.systemDetails.references\n                    ? this.props.systemDetails.references.map(\n                      (reference, i) => {\n                        return (\n                          <div className=\"text-white text-left mb-2\">\n                            <div className=\"d-flex\">\n                              <div className=\"bullet-line text-grey arrow-bullet w-100\">\n                                {!this.state[`reference-${i}`] && (\n                                  <span>{reference.name}</span>\n                                )}\n\n                                {this.state[`reference-${i}`] && (\n                                  <>\n                                    <input\n                                      className=\"text-input form-control text-grey adding-text\"\n                                      type=\"text\"\n                                      id=\"service\"\n                                      onChange={this.editFieldChange.bind(\n                                        this,\n                                        i,\n                                        \"reference\"\n                                      )}\n                                      value={this.state[`reference-value-${i}`]}\n                                    />\n\n                                  </>\n                                )}\n\n                              </div>\n                              {this.state[`reference-${i}`] && (\n                                <span className=\"action-button\">\n                                  <i\n                                    className=\"fas fa-check\"\n                                    onClick={this.updateEntity.bind(\n                                      this,\n                                      i,\n                                      reference.id,\n                                      \"reference\"\n                                    )}\n                                  ></i>\n                                </span>\n                              )}\n\n                              {!this.state[`reference-${i}`] && (\n                                <>\n                                  <span className=\"action-button\">\n                                    <i\n                                      className=\"fas fa-pencil-alt\"\n                                      onClick={this.editfield.bind(\n                                        this,\n                                        i,\n                                        reference.name,\n                                        \"reference\"\n                                      )}\n                                    ></i>\n                                  </span>\n                                  <span className=\"action-button\">\n                                    <i\n                                      className=\"fas fa-trash\"\n                                      onClick={this.deleteEntity.bind(\n                                        this,\n                                        reference.id\n                                      )}\n                                    ></i>\n                                  </span>\n                                </>\n                              )}\n                            </div>\n                          </div>\n\n                        );\n                      }\n                    )\n                    : \"\"}\n                </div>\n              </div>\n            </div>\n          </ModalBody>\n        </Modal>\n        <h3 className=\"text-white\">\n          System Details\n          <i\n            className=\"fas fa-times system-down-icon browser_close\"\n            onClick={() => this.close(\"systemDetail\", \"menuDetail\")}\n          />\n          <i\n            className=\"far fa-edit\"\n            onClick={() => this.modalToggle(this, this.props.systemDetails)}\n          ></i>\n        </h3>\n\n        <VerticalScrollbars autoHide>\n          <div className=\"browser_wrapper\">\n            <div className=\"org-selector\">\n              <p className=\"text-white text-left\"></p>\n            </div>\n            <div className=\"ob-block row\">\n              <div className=\"col-md-6 m-b-20\">\n                <p className=\"text-white text-left\">\n                  <span id=\"system-detail-name\">\n                    {this.props.systemDetails.name}\n                    <Tooltip\n                      className=\"tooltip-custom\"\n                      placement=\"top\"\n                      toggle={() => this.toggle(\"system-detail-name\")}\n                      isOpen={this.state[\"system-detail-name\"]}\n                      autohide={false}\n                      target={\"system-detail-name\"}\n                    >\n                      {this.props.systemDetails.id}\n                    </Tooltip>\n                  </span>\n\n                  <i\n                    className=\"fas fa-chevron-down system-down-icon\"\n                    onClick={this.toggleDescription}\n                  />\n                </p>\n              </div>\n              <div className=\"col-md-6 m-b-20\"></div>\n              <Collapse\n                isOpen={this.state.collapse}\n                className=\"systemDetailsDisc\"\n              >\n                <p className=\"text-grey\">\n                  {this.props.systemDetails.description\n                    ? this.props.systemDetails.description\n                    : \"No Description\"}\n                </p>\n              </Collapse>\n            </div>\n\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">Sub systems</p>\n              {this.props.systemDetails.subsystemLinks\n                ? this.props.systemDetails.subsystemLinks.map(\n                  (subsystem, i) => {\n                    return (\n                      <div key={i} className=\"d-flex w-100\">\n                        <div className=\"col-md-12\">\n                          <p className=\"text-grey text-left\">\n                            <span className=\"subsystemCircle\"></span>\n                            <span>{subsystem.title}</span>\n                          </p>\n                        </div>\n                      </div>\n                    );\n                  }\n                )\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">Services</p>\n              {this.props.systemDetails.services\n                ? this.props.systemDetails.services.map((services, i) => {\n                  return (\n                    <div key={services.id} className=\"d-flex w-100\">\n                      <div className=\"col-md-12\">\n                        <p className=\"text-grey text-left\">\n                          <span className=\"serviceCircle\" />\n\n                          <span id={`service-${i}`}>\n                            {services.name}\n                            <Tooltip\n                              className=\"tooltip-custom\"\n                              placement=\"top\"\n                              toggle={() => this.toggle(`service-${i}`)}\n                              isOpen={this.state[`service-${i}`]}\n                              autohide={false}\n                              target={`service-${i}`}\n                            >\n                              {services.id}\n                            </Tooltip>\n                          </span>\n                        </p>\n                      </div>\n                    </div>\n                  );\n                })\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">References</p>\n              {this.props.systemDetails.references\n                ? this.props.systemDetails.references.map((references, i) => {\n                  return (\n                    <div key={i} className=\"d-flex w-100\">\n                      <div className=\"col-md-12\">\n                        <p className=\"text-grey text-left\">\n                          <span className=\"referenceArrow\">→</span>\n\n                          <span id={`reference-${i}`}>\n                            {references.name}{\" \"}\n                            <Tooltip\n                              placement=\"top\"\n                              className=\"tooltip-custom\"\n                              toggle={() => this.toggle(`reference-${i}`)}\n                              isOpen={this.state[`reference-${i}`]}\n                              autohide={false}\n                              target={`reference-${i}`}\n                            >\n                              {references.id}\n                            </Tooltip>\n                          </span>\n                        </p>\n                      </div>\n                    </div>\n                  );\n                })\n                : \"\"}\n            </div>\n          </div>\n        </VerticalScrollbars>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getSystemDetails: (modelId, systemId) => {\n      dispatch(fetchSystemDetils(modelId, systemId));\n    },\n    getSystems: modelId => {\n      dispatch(fetchModel(modelId));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeModel: state.model.modelUri,\n    activeModelId: state.model.modelId,\n    systemDetails: state.system.systemDetails,\n    type: state.system.type\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SystemDetails);\n"]},"metadata":{},"sourceType":"module"}