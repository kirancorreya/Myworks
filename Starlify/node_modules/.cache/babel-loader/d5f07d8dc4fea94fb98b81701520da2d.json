{"ast":null,"code":"/*!\n * @pixi/canvas-particles - v5.0.4\n * Compiled Fri, 07 Jun 2019 17:17:49 UTC\n *\n * @pixi/canvas-particles is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { ParticleContainer } from '@pixi/particles';\n/**\n * Renders the object using the Canvas renderer\n * @method renderCanvas\n * @memberof PIXI.ParticleContainer#\n * @private\n * @param {PIXI.CanvasRenderer} renderer - a reference to the canvas renderer\n */\n\nParticleContainer.prototype.renderCanvas = function renderCanvas(renderer) {\n  if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable) {\n    return;\n  }\n\n  var context = renderer.context;\n  var transform = this.worldTransform;\n  var isRotated = true;\n  var positionX = 0;\n  var positionY = 0;\n  var finalWidth = 0;\n  var finalHeight = 0;\n  renderer.setBlendMode(this.blendMode);\n  context.globalAlpha = this.worldAlpha;\n  this.displayObjectUpdateTransform();\n\n  for (var i = 0; i < this.children.length; ++i) {\n    var child = this.children[i];\n\n    if (!child.visible) {\n      continue;\n    }\n\n    var frame = child._texture.frame;\n    context.globalAlpha = this.worldAlpha * child.alpha;\n\n    if (child.rotation % (Math.PI * 2) === 0) {\n      // this is the fastest  way to optimise! - if rotation is 0 then we can avoid any kind of setTransform call\n      if (isRotated) {\n        context.setTransform(transform.a, transform.b, transform.c, transform.d, transform.tx * renderer.resolution, transform.ty * renderer.resolution);\n        isRotated = false;\n      }\n\n      positionX = child.anchor.x * (-frame.width * child.scale.x) + child.position.x + 0.5;\n      positionY = child.anchor.y * (-frame.height * child.scale.y) + child.position.y + 0.5;\n      finalWidth = frame.width * child.scale.x;\n      finalHeight = frame.height * child.scale.y;\n    } else {\n      if (!isRotated) {\n        isRotated = true;\n      }\n\n      child.displayObjectUpdateTransform();\n      var childTransform = child.worldTransform;\n\n      if (this.roundPixels) {\n        context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx * renderer.resolution | 0, childTransform.ty * renderer.resolution | 0);\n      } else {\n        context.setTransform(childTransform.a, childTransform.b, childTransform.c, childTransform.d, childTransform.tx * renderer.resolution, childTransform.ty * renderer.resolution);\n      }\n\n      positionX = child.anchor.x * -frame.width + 0.5;\n      positionY = child.anchor.y * -frame.height + 0.5;\n      finalWidth = frame.width;\n      finalHeight = frame.height;\n    }\n\n    var resolution = child._texture.baseTexture.resolution;\n    context.drawImage(child._texture.baseTexture.source, frame.x * resolution, frame.y * resolution, frame.width * resolution, frame.height * resolution, positionX * renderer.resolution, positionY * renderer.resolution, finalWidth * renderer.resolution, finalHeight * renderer.resolution);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}