{"ast":null,"code":"import _objectSpread from \"/Users/kirancorreya/Site/Starlify/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/kirancorreya/Site/Starlify/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/_assets/coloredscrollbar/coloredscrollbar.js\";\nimport React, { Component } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nexport default class ColoredScrollbars extends Component {\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    this.state = {\n      top: 0\n    };\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.renderView = this.renderView.bind(this);\n    this.renderThumb = this.renderThumb.bind(this);\n  }\n\n  handleUpdate(values) {\n    const top = values.top;\n    this.setState({\n      top\n    });\n  }\n\n  renderView(_ref) {\n    let style = _ref.style,\n        props = _objectWithoutProperties(_ref, [\"style\"]);\n\n    const top = this.state.top;\n    const viewStyle = {\n      padding: 15,\n      backgroundColor: \"transparent\"\n    };\n    return React.createElement(\"div\", Object.assign({\n      className: \"box\",\n      style: _objectSpread({}, style, viewStyle)\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n  renderThumb(_ref2) {\n    let style = _ref2.style,\n        props = _objectWithoutProperties(_ref2, [\"style\"]);\n\n    const top = this.state.top;\n    const thumbStyle = {\n      backgroundColor: \"rgb(\".concat(Math.round(255 - top * 255), \", \").concat(Math.round(255 - top * 255), \", \").concat(Math.round(255 - top * 255), \")\")\n    };\n    return React.createElement(\"div\", Object.assign({\n      style: _objectSpread({}, style, thumbStyle)\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(Scrollbars, Object.assign({\n      renderView: this.renderView,\n      renderThumbHorizontal: this.renderThumb,\n      renderThumbVertical: this.renderThumb,\n      onUpdate: this.handleUpdate\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/_assets/coloredscrollbar/coloredscrollbar.js"],"names":["React","Component","Scrollbars","ColoredScrollbars","constructor","props","rest","state","top","handleUpdate","bind","renderView","renderThumb","values","setState","style","viewStyle","padding","backgroundColor","thumbStyle","Math","round","render"],"mappings":";;;AAAA,OAAOA,KAAP,IACIC,SADJ,QAEO,OAFP;AAGA,SACIC,UADJ,QAEO,yBAFP;AAIA,eAAe,MAAMC,iBAAN,SAAgCF,SAAhC,CAA0C;AAErDG,EAAAA,WAAW,CAACC,KAAD,EAAQ,GAAGC,IAAX,EAAiB;AACxB,UAAMD,KAAN,EAAa,GAAGC,IAAhB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE;AADI,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,YAAY,CAACI,MAAD,EAAS;AAAA,UAEbL,GAFa,GAGbK,MAHa,CAEbL,GAFa;AAIjB,SAAKM,QAAL,CAAc;AACVN,MAAAA;AADU,KAAd;AAGH;;AAEDG,EAAAA,UAAU,OAGP;AAAA,QAFCI,KAED,QAFCA,KAED;AAAA,QADIV,KACJ;;AAAA,UAEKG,GAFL,GAGK,KAAKD,KAHV,CAEKC,GAFL;AAIC,UAAMQ,SAAS,GAAG;AACdC,MAAAA,OAAO,EAAE,EADK;AAEdC,MAAAA,eAAe;AAFD,KAAlB;AAKA,WAAS;AACD,MAAA,SAAS,EAAG,KADX;AAEL,MAAA,KAAK,oBAEMH,KAFN,EAGMC,SAHN;AAFA,OAQEX,KARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAT;AAYH;;AAEDO,EAAAA,WAAW,QAGR;AAAA,QAFCG,KAED,SAFCA,KAED;AAAA,QADIV,KACJ;;AAAA,UAEKG,GAFL,GAGK,KAAKD,KAHV,CAEKC,GAFL;AAIC,UAAMW,UAAU,GAAG;AACfD,MAAAA,eAAe,gBAASE,IAAI,CAACC,KAAL,CAAW,MAAOb,GAAG,GAAG,GAAxB,CAAT,eAA2CY,IAAI,CAACC,KAAL,CAAW,MAAOb,GAAG,GAAG,GAAxB,CAA3C,eAA6EY,IAAI,CAACC,KAAL,CAAW,MAAOb,GAAG,GAAG,GAAxB,CAA7E;AADA,KAAnB;AAGA,WAAS;AACD,MAAA,KAAK,oBAEEO,KAFF,EAGEI,UAHF;AADJ,OAOEd,KAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAT;AAWH;;AAEDiB,EAAAA,MAAM,GAAG;AACL,WAAS,oBACL,UADK;AACM,MAAA,UAAU,EACjB,KAAKX,UAFJ;AAIL,MAAA,qBAAqB,EACjB,KAAKC,WALJ;AAOL,MAAA,mBAAmB,EACf,KAAKA,WARJ;AAUL,MAAA,QAAQ,EACJ,KAAKH;AAXJ,OAaE,KAAKJ,KAbP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAT;AAiBH;;AAxFoD","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport {\n    Scrollbars\n} from 'react-custom-scrollbars';\n\nexport default class ColoredScrollbars extends Component {\n\n    constructor(props, ...rest) {\n        super(props, ...rest);\n        this.state = {\n            top: 0\n        };\n        this.handleUpdate = this.handleUpdate.bind(this);\n        this.renderView = this.renderView.bind(this);\n        this.renderThumb = this.renderThumb.bind(this);\n    }\n\n    handleUpdate(values) {\n        const {\n            top\n        } = values;\n        this.setState({\n            top\n        });\n    }\n\n    renderView({\n        style,\n        ...props\n    }) {\n        const {\n            top\n        } = this.state;\n        const viewStyle = {\n            padding: 15,\n            backgroundColor: `transparent`,\n\n        };\n        return ( <\n            div className = \"box\"\n            style = {\n                {\n                    ...style,\n                    ...viewStyle\n                }\n            } {\n                ...props\n            }\n            />\n        );\n    }\n\n    renderThumb({\n        style,\n        ...props\n    }) {\n        const {\n            top\n        } = this.state;\n        const thumbStyle = {\n            backgroundColor: `rgb(${Math.round(255 - (top * 255))}, ${Math.round(255 - (top * 255))}, ${Math.round(255 - (top * 255))})`\n        };\n        return ( <\n            div style = {\n                {\n                    ...style,\n                    ...thumbStyle\n                }\n            } {\n                ...props\n            }\n            />\n        );\n    }\n\n    render() {\n        return ( <\n            Scrollbars renderView = {\n                this.renderView\n            }\n            renderThumbHorizontal = {\n                this.renderThumb\n            }\n            renderThumbVertical = {\n                this.renderThumb\n            }\n            onUpdate = {\n                this.handleUpdate\n            } {\n                ...this.props\n            }\n            />\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}