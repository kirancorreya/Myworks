{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/FlowDetails.js\";\nimport React, { Component } from \"react\";\nimport { fetchFlowDetils } from \"../../../store/flows/Actions\";\nimport { connect } from \"react-redux\";\nimport { Modal, ModalBody, FormGroup, Input } from \"reactstrap\";\nimport Select from \"react-select\";\nimport check from \"../../../_assets/icons/icons/check-icon.svg\";\nimport addCircle from \"../../../_assets/icons/icons/add-icon-circle.svg\";\nimport sequence from \"../../../_assets/images/Sequence-diagram.png\";\nimport edit from \"../../../_assets/icons/icons/edit.svg\";\nimport { fetchSystems } from '../../../store/system/Actions';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move'; //invocation listing - sorting module \n\nconst SortableItem = SortableElement(({\n  value\n}) => React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(\"ul\", {\n  className: \"row body\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  className: \"col-md-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-bars\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n})), React.createElement(\"li\", {\n  className: \"col-md-4 text-white\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, value.consumerSystem), React.createElement(\"li\", {\n  className: \"col-md-3 text-white\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, value.providerSystem), React.createElement(\"li\", {\n  className: \"col-md-3 text-white word-wrap\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, value.consumedService), React.createElement(\"li\", {\n  className: \"col-md-1 text-white\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-trash-alt\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}))))); //invocation listing - sorting module \n\nconst SortableList = SortableContainer(({\n  items\n}) => {\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, items.map((value, index) => React.createElement(SortableItem, {\n    key: \"item-\".concat(index),\n    index: index,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n}); //Flow Details\n\nclass FlowDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSortEnd = ({\n      oldIndex,\n      newIndex\n    }) => {\n      this.setState(({\n        data\n      }) => ({\n        data: arrayMove(data, oldIndex, newIndex)\n      }), () => {\n        this.sortInvocation();\n      });\n    };\n\n    this.state = {\n      formData: {\n        name: \"\",\n        description: \"\",\n        supportLevel: \"\",\n        custom: {\n          documentationUrl: \"\"\n        }\n      },\n      filterOptions: [],\n      invocations: [],\n      referenceData: {\n        consumerSystem: \"\",\n        consumerSystemId: \"\",\n        consumedService: \"\",\n        consumedServiceId: \"\",\n        providerSystem: \"\"\n      },\n      servicesList: \"\",\n      data: [],\n      referenceAdd: false\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.type === 'FETCH_FLOW_DETAILS_SUCCESS' && this.props.activeFlow !== nextProps.activeFlow) {\n      this.setState({\n        'invocations': this.props.flowDetails.invocations\n      });\n      this.displayInvocation();\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.type === 'FETCH_FLOW_DETAILS_SUCCESS' && this.props.flowDetails.invocations !== this.state.invocations) {\n      this.setState({\n        'invocations': this.props.flowDetails.invocations\n      });\n      this.displayInvocation();\n    }\n  } //display invocation list\n\n\n  displayInvocation() {\n    this.setState({\n      'data': []\n    });\n    var serviceName, serviceId;\n    this.props.flowDetails.invocations.sort((a, b) => a.index - b.index).map(invocation => {\n      invocation._links.filter(links => links.rel === \"THROUGH\").map(reference => {\n        this.props.systems.map(system => {\n          system.references.filter(systemReference => systemReference.id === reference.params.id).map((referenceData, i) => {\n            referenceData._links.filter(link => link.rel === 'TO').map((serviceData, i) => {\n              serviceName = serviceData.title;\n              serviceId = serviceData.params.id;\n              fetch(process.env.REACT_APP_API + serviceData.uri, {\n                method: \"GET\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              }).then(response => response.json()).then(responseJson => {\n                referenceData._links.filter(link => link.rel === 'OF').map((consumerSystem, i) => {\n                  this.setState(prevState => ({\n                    data: [...prevState.data, {\n                      'id': invocation.index,\n                      'invocationId': invocation.id,\n                      'referenceId': referenceData.id,\n                      'refrenceName': referenceData.name,\n                      'consumedServiceId': serviceId,\n                      'consumedService': serviceName,\n                      'consumerSystem': consumerSystem.title,\n                      'consumerSystemId': consumerSystem.params.id,\n                      'providerSystem': responseJson._links[0].title,\n                      'providerSystemId': responseJson._links[0].params.id,\n                      'type': 'existing'\n                    }]\n                  }));\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  } //handling change of documentation url as custom attribute\n\n\n  handleUrlChange(event) {\n    const formData = this.state.formData;\n    formData[event.target.name] = {\n      documentationUrl: event.target.value\n    };\n    this.setState({\n      formData\n    });\n  } //handling change of flow basic attributes\n\n\n  handleChange(event) {\n    const formData = this.state.formData;\n    formData[event.target.name] = event.target.value;\n    this.setState({\n      formData\n    });\n  } //handling change of refrence attributes\n\n\n  handleReferenceChange(event) {\n    var index = event.target.selectedIndex;\n    const referenceData = this.state.referenceData;\n    referenceData[event.target.name] = event.target[index].text;\n    this.setState({\n      referenceData\n    });\n    referenceData[event.target.name + 'Id'] = event.target.value;\n  } //show or hide add refrence settings\n\n\n  toggleAddReference(event) {\n    this.setState(prev => ({\n      referenceAdd: !prev.referenceAdd\n    }));\n  } //update flow\n\n\n  updateFlow() {\n    fetch(process.env.REACT_APP_API + \"\".concat(this.props.activeModel, \"/flow/\") + this.props.activeFlow, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state.formData)\n    }).then(response => {\n      if (this.state.deletedSourceSystems.length > 0) this.deleteSourceSystems();\n      if (this.state.deletedTargetSystems.length > 0) this.deleteTargetSystems();\n      this.addSourceSystems();\n      this.addTargetSystems();\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n      setTimeout(() => {\n        this.props.getFlowDetails(this.props.activeModelId, this.props.activeFlow);\n      }, 2000);\n    }).catch(error => console.log(error));\n  } //add source systems\n\n\n  addSourceSystems() {\n    this.state.sourceSystems.map(system => {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/network/\" + this.props.activeModelId + \"/flow/\" + this.props.activeFlow + \"/source/\" + system.value, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {}).catch(error => console.log(error));\n      return true;\n    });\n  } //add target systems\n\n\n  addTargetSystems() {\n    this.state.targetSystems.map(system => {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/network/\" + this.props.activeModelId + \"/flow/\" + this.props.activeFlow + \"/target/\" + system.value, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {}).catch(error => console.log(error));\n      return true;\n    });\n  } //delete source systems\n\n\n  deleteSourceSystems() {\n    this.state.deletedSourceSystems.map(system => {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/network/\" + this.props.activeModelId + \"/flow/\" + this.props.activeFlow + \"/source/\" + system.value, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {}).catch(error => console.log(error));\n      return true;\n    });\n  } //delete target systems\n\n\n  deleteTargetSystems() {\n    this.state.deletedTargetSystems.map(system => {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/network/\" + this.props.activeModelId + \"/flow/\" + this.props.activeFlow + \"/target/\" + system.value, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {}).catch(error => console.log(error));\n      return true;\n    });\n  } //handle change of source systems\n\n\n  handleSourceChange(option, event) {\n    let difference = this.state.sourceSystems.filter(x => !option.includes(x));\n\n    if (difference.length > 0) {\n      this.state.deletedSourceSystems.push(difference[0]);\n    }\n\n    this.setState(state => {\n      return {\n        sourceSystems: option\n      };\n    });\n  } //handle change of target systems\n\n\n  handleTargetChange(option) {\n    let difference = this.state.targetSystems.filter(x => !option.includes(x));\n\n    if (difference.length > 0) {\n      this.state.deletedTargetSystems.push(difference[0]);\n    }\n\n    this.setState(state => {\n      return {\n        targetSystems: option\n      };\n    });\n  } //show or hide description\n\n\n  toggleDescription() {\n    this.setState(state => ({\n      collapse: !state.collapse\n    }));\n  } //closes the flow detail window\n\n\n  close(type) {\n    this.props.close(type);\n  } //show or hide flow full edit pop up\n\n\n  modalToggle(e, data) {\n    this.state.sourceSystems = [];\n    this.state.targetSystems = [];\n    this.state.deletedSourceSystems = [];\n    this.state.deletedTargetSystems = [];\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    this.props.flowDetails._links.filter(links => links.rel === \"SOURCE\").map(source => {\n      this.state.sourceSystems.push({\n        value: source.params.id,\n        label: source.title\n      });\n      return true;\n    });\n\n    this.props.flowDetails._links.filter(links => links.rel === \"TARGET\").map(target => {\n      this.state.targetSystems.push({\n        value: target.params.id,\n        label: target.title\n      });\n      return true;\n    });\n\n    this.setState({\n      formData: {\n        name: this.props.flowDetails.name,\n        description: this.props.flowDetails.description,\n        supportLevel: this.props.flowDetails.supportLevel,\n        custom: {\n          documentationUrl: this.props.flowDetails.custom.documentationUrl\n        }\n      }\n    });\n    this.getSystems();\n  }\n\n  getSystems() {\n    return fetch(process.env.REACT_APP_API + \"/hypermedia/network/\" + this.props.activeModelId + \"/allsystems\").then(res => res.json()).then(response => {\n      this.setState({\n        systems: response\n      });\n      response.map((systems, i) => {\n        this.state.filterOptions.push({\n          value: systems.id,\n          label: systems.name\n        });\n      });\n      return true;\n    }).catch(error => console.log(error));\n  }\n\n  getSystemServices(event) {\n    let parents = this.props.systems;\n    let parent = parents.filter(parent => parent.name === event.target.value);\n    if (parent) this.setState({\n      servicesList: parent[0].services\n    });\n    var index = event.target.selectedIndex;\n    const referenceData = this.state.referenceData;\n    referenceData[event.target.name] = event.target[index].text;\n    this.setState({\n      referenceData\n    });\n    referenceData[event.target.name + 'Id'] = event.target.value;\n  } //create reference and invocation\n\n\n  createReference(event) {\n    /*this.setState(prevState => ({\n      data: [...prevState.data, {'invocationId' : '','referenceId' : '', 'refrenceName' :  '', 'consumedServiceId' : this.state.referenceData.consumedServiceId, \n      'consumedService' : this.state.referenceData.consumedService, 'consumerSystem' : this.state.referenceData.consumerSystem, 'consumerSystemId' : this.state.referenceData.consumerSystemId, 'providerSystem': this.state.referenceData.providerSystem, 'providerSystemId' :this.state.referenceData.providerSystemId, 'type' : 'new'}]\n    }))*/\n    fetch(process.env.REACT_APP_API + \"/hypermedia/network/\".concat(this.props.activeModelId, \"/system/\").concat(this.state.referenceData.consumerSystemId, \"/reference/service/\").concat(this.state.referenceData.consumedServiceId), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(referenceJson => {\n      this.props.getSystems(this.props.activeModelId);\n      fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/service/\").concat(this.props.activeFlow, \"/invocation/\") + referenceJson.id, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(invocationJson => {\n        this.props.getFlowDetails(this.props.activeModelId, this.props.activeFlow);\n        this.toggleAddReference();\n      }).catch(error => console.log(error));\n    });\n  } //sort the invocation list\n\n\n  sortInvocation() {\n    console.log(this.state.data);\n    this.state.data.map((reference, index) => {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/network/\".concat(this.props.activeModelId, \"/flow/\").concat(this.props.activeFlow, \"/invocation/\") + reference.invocationId, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          'index': index\n        })\n      }).then(response => {\n        return true;\n      }).catch(error => console.log(error));\n    });\n    this.props.getFlowDetails(this.props.activeModelId, this.props.activeFlow);\n  } //handling sort event of the invocation list\n\n\n  render() {\n    var formData = this.state.formData;\n    return React.createElement(\"div\", {\n      className: \"browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editFlow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"d-inline-block modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, \"Edit Flow Details\"), React.createElement(\"button\", {\n      className: \"btn grey-btn modal-top-btn\",\n      onClick: this.updateFlow.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, \"Done \", React.createElement(\"img\", {\n      src: check,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ModalInput m-t-50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, \"Flow name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: formData.name,\n      name: \"name\",\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ModalInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"select-css\",\n      type: \"select\",\n      name: \"supportLevel\",\n      value: formData.supportLevel,\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, \"Support Level\"), React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, \"Gold\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, \"Platinum\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, \"Silver\"), \"))}\"))), React.createElement(\"div\", {\n      className: \"ModalInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, \"Documentation URL\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"custom\",\n      value: formData.custom.documentationUrl,\n      onChange: this.handleUrlChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ModalInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"description\",\n      value: formData.description,\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ModalInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, \"Source system\"), React.createElement(\"div\", {\n      className: \"searchbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      sm: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, React.createElement(Select, {\n      name: \"filters\",\n      placeholder: \"\",\n      value: this.state.sourceSystems,\n      options: this.state.filterOptions,\n      onChange: this.handleSourceChange.bind(this),\n      multi: true,\n      clearable: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"ModalInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, \"Target system\"), React.createElement(\"div\", {\n      className: \"searchbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      sm: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(Select, {\n      name: \"filters\",\n      placeholder: \"\",\n      value: this.state.targetSystems,\n      options: this.state.filterOptions,\n      onChange: this.handleTargetChange.bind(this),\n      multi: true,\n      clearable: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      className: \"browser_header text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon icon-Share submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, \"Flow Details\"), React.createElement(\"img\", {\n      src: edit,\n      alt: \"starlify\",\n      className: \"edit\",\n      onClick: () => this.modalToggle(this, this.props.flowDetails),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon browser_close\",\n      onClick: () => this.close(\"flowDetail\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"browser_wrapper browser_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"p\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }, this.props.flowDetails.name)), React.createElement(\"div\", {\n      className: \"support m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, \"Support level\"), this.props.flowDetails.supportLevel === 1 && React.createElement(\"p\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, \"Gold\"), this.props.flowDetails.supportLevel === 2 && React.createElement(\"p\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }, \"Platinum\"), this.props.flowDetails.supportLevel === 3 && React.createElement(\"p\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, \"Silver\")), React.createElement(\"div\", {\n      className: \"url m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }, \"Documentation URL\"), React.createElement(\"p\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    }, this.props.flowDetails.custom ? this.props.flowDetails.custom.documentationUrl : \"\")), React.createElement(\"div\", {\n      className: \"desc m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"p\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, this.props.flowDetails.description)), React.createElement(\"div\", {\n      className: \"system m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, \"Source\"), this.props.flowDetails._links ? this.props.flowDetails._links.filter(links => links.rel === \"SOURCE\").map((source, index) => {\n      return React.createElement(\"p\", {\n        key: index,\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, source.title);\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"target m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    }, \"Target\"), this.props.flowDetails._links ? this.props.flowDetails._links.filter(links => links.rel === \"TARGET\").map((target, index) => {\n      return React.createElement(\"p\", {\n        key: index,\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }, target.title);\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"technical row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"technical-header col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }, \"Technical\"), !this.state.referenceAdd && React.createElement(\"div\", {\n      className: \"addModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.toggleAddReference.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: addCircle,\n      alt: \"starlify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }), \"Add Refrence\"))), React.createElement(\"div\", {\n      className: \"technical-body col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"row head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"col-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639\n      },\n      __self: this\n    }, \"Consumer\"), React.createElement(\"li\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640\n      },\n      __self: this\n    }, \"Provider\"), React.createElement(\"li\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641\n      },\n      __self: this\n    }, \"Service\"), React.createElement(\"li\", {\n      className: \"col-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    })), React.createElement(SortableList, {\n      items: this.state.data,\n      onSortEnd: this.onSortEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sequence\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: sequence,\n      alt: \"starlify\",\n      className: \"d-block mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }))), this.state.referenceAdd && React.createElement(\"div\", {\n      className: \"d-block mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"d-flex formGroupWrapper justify-content-md-center create-ref\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"consumerSystem\",\n      onChange: this.handleReferenceChange.bind(this),\n      className: \"p-l-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664\n      },\n      __self: this\n    }, \"Consumer System\"), this.props.systems ? this.props.systems.map((item, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: item.id,\n        id: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668\n        },\n        __self: this\n      }, item.name);\n    }) : \"\")), React.createElement(\"li\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"providerSystem\",\n      onChange: this.getSystemServices.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }, \"Provider System\"), this.props.systems ? this.props.systems.map((item, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: item.name,\n        id: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686\n        },\n        __self: this\n      }, item.name);\n    }) : \"\")), React.createElement(\"li\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"consumedService\",\n      id: \"exampleSelect\",\n      onChange: this.handleReferenceChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701\n      },\n      __self: this\n    }, \"Service\"), this.state.servicesList ? this.state.servicesList.map((item, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705\n        },\n        __self: this\n      }, item.name);\n    }) : \"\")), React.createElement(\"li\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"link-btn modal-top-btn m-l-15\",\n      onClick: this.createReference.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714\n      },\n      __self: this\n    }, \"Done\")))))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getFlowDetails: (modelId, flowId) => {\n      dispatch(fetchFlowDetils(modelId, flowId));\n    },\n    getSystems: modelId => {\n      dispatch(fetchSystems(modelId));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeFlow: state.flows.activeFlow,\n    activeModel: state.model.modelUri,\n    flowDetails: state.flows.flowDetails,\n    activeModelId: state.model.modelId,\n    type: state.flows.type,\n    systems: state.systems.items\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlowDetails);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/FlowDetails.js"],"names":["React","Component","fetchFlowDetils","connect","Modal","ModalBody","FormGroup","Input","Select","sequence","fetchSystems","SortableContainer","SortableElement","arrayMove","SortableItem","value","consumerSystem","providerSystem","consumedService","SortableList","items","map","index","FlowDetails","constructor","props","onSortEnd","oldIndex","newIndex","setState","data","sortInvocation","state","formData","name","description","supportLevel","custom","documentationUrl","filterOptions","invocations","referenceData","consumerSystemId","consumedServiceId","servicesList","referenceAdd","close","bind","toggleDescription","modalToggle","componentWillReceiveProps","nextProps","type","activeFlow","flowDetails","displayInvocation","componentDidMount","serviceName","serviceId","sort","a","b","invocation","_links","filter","links","rel","reference","systems","system","references","systemReference","id","params","i","link","serviceData","title","fetch","process","env","REACT_APP_API","uri","method","headers","then","response","json","responseJson","prevState","handleUrlChange","event","target","handleChange","handleReferenceChange","selectedIndex","text","toggleAddReference","prev","updateFlow","activeModel","body","JSON","stringify","deletedSourceSystems","length","deleteSourceSystems","deletedTargetSystems","deleteTargetSystems","addSourceSystems","addTargetSystems","modal","setTimeout","getFlowDetails","activeModelId","catch","error","console","log","sourceSystems","targetSystems","handleSourceChange","option","difference","x","includes","push","handleTargetChange","collapse","e","source","label","getSystems","res","getSystemServices","parents","parent","services","createReference","referenceJson","invocationJson","invocationId","render","check","edit","addCircle","item","mapDispatchToProps","dispatch","modelId","flowId","mapStateToProps","activeSystem","model","flows","modelUri"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { fetchFlowDetils } from \"../../../store/flows/Actions\";\nimport { connect } from \"react-redux\";\nimport { Modal, ModalBody, FormGroup, Input } from \"reactstrap\";\nimport Select from \"react-select\";\nimport check from \"../../../_assets/icons/icons/check-icon.svg\";\nimport addCircle from \"../../../_assets/icons/icons/add-icon-circle.svg\";\nimport sequence from \"../../../_assets/images/Sequence-diagram.png\";\nimport edit from \"../../../_assets/icons/icons/edit.svg\";\nimport { fetchSystems } from '../../../store/system/Actions'\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\n//invocation listing - sorting module \nconst SortableItem = SortableElement(({ value }) =>\n  <li >\n    <ul className=\"row body\">\n      <li className=\"col-md-1\">\n        <i className=\"fas fa-bars\"></i>\n      </li>\n      <li className=\"col-md-4 text-white\">\n        {value.consumerSystem}\n      </li>\n      <li className=\"col-md-3 text-white\">\n        {value.providerSystem}\n      </li>\n      <li className=\"col-md-3 text-white word-wrap\">\n        {value.consumedService}\n      </li>\n      <li className=\"col-md-1 text-white\">\n        <i\n          className=\"fas fa-trash-alt\"\n        ></i>\n      </li>\n    </ul>\n  </li>\n);\n\n//invocation listing - sorting module \nconst SortableList = SortableContainer(({ items }) => {\n  return (\n    <ul>\n      {items.map((value, index) => (\n        <SortableItem key={`item-${index}`} index={index} value={value} />\n      ))}\n    </ul>\n  );\n});\n\n//Flow Details\nclass FlowDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: {\n        name: \"\",\n        description: \"\",\n        supportLevel: \"\",\n        custom: { documentationUrl: \"\" }\n      },\n      filterOptions: [],\n      invocations: [],\n      referenceData: {\n        consumerSystem: \"\",\n        consumerSystemId: \"\",\n        consumedService: \"\",\n        consumedServiceId: \"\",\n        providerSystem: \"\",\n      },\n      servicesList: \"\",\n      data: [],\n      referenceAdd: false,\n    };\n\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.type === 'FETCH_FLOW_DETAILS_SUCCESS' && this.props.activeFlow !== nextProps.activeFlow) {\n      this.setState({ 'invocations': this.props.flowDetails.invocations })\n      this.displayInvocation()\n    }\n  }\n  componentDidMount() {\n    if (this.props.type === 'FETCH_FLOW_DETAILS_SUCCESS' && this.props.flowDetails.invocations !== this.state.invocations) {\n      this.setState({ 'invocations': this.props.flowDetails.invocations })\n      this.displayInvocation()\n    }\n  }\n\n  //display invocation list\n  displayInvocation() {\n    this.setState({ 'data': [] })\n    var serviceName, serviceId\n    this.props.flowDetails.invocations\n      .sort((a, b) => a.index - b.index)\n      .map(invocation => {\n        invocation._links\n          .filter(links => links.rel === \"THROUGH\")\n          .map(reference => {\n            this.props.systems.map((system) => {\n              system.references\n                .filter(systemReference => systemReference.id === reference.params.id)\n                .map((referenceData, i) => {\n                  referenceData._links\n                    .filter(link => link.rel === 'TO')\n                    .map((serviceData, i) => {\n                      serviceName = serviceData.title\n                      serviceId = serviceData.params.id\n                      fetch(\n                        process.env.REACT_APP_API +\n                        serviceData.uri,\n                        {\n                          method: \"GET\",\n                          headers: {\n                            \"Content-Type\": \"application/json\"\n                          }\n                        }\n                      ).then(response => response.json())\n                        .then(responseJson => {\n                          referenceData._links\n                            .filter(link => link.rel === 'OF')\n                            .map((consumerSystem, i) => {\n                              this.setState(prevState => ({\n                                data: [...prevState.data, {\n                                  'id': invocation.index, 'invocationId': invocation.id, 'referenceId': referenceData.id, 'refrenceName': referenceData.name, 'consumedServiceId': serviceId,\n                                  'consumedService': serviceName, 'consumerSystem': consumerSystem.title, 'consumerSystemId': consumerSystem.params.id, 'providerSystem': responseJson._links[0].title, 'providerSystemId': responseJson._links[0].params.id, 'type': 'existing'\n                                }]\n                              }))\n\n                            })\n                        });\n\n                    })\n                })\n            })\n          });\n      });\n  }\n\n  //handling change of documentation url as custom attribute\n  handleUrlChange(event) {\n    const { formData } = this.state;\n    formData[event.target.name] = { documentationUrl: event.target.value };\n    this.setState({\n      formData\n    });\n  }\n\n  //handling change of flow basic attributes\n  handleChange(event) {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({\n      formData\n    });\n  }\n\n  //handling change of refrence attributes\n  handleReferenceChange(event) {\n    var index = event.target.selectedIndex;\n    const { referenceData } = this.state;\n    referenceData[event.target.name] = event.target[index].text;\n    this.setState({\n      referenceData\n    });\n    referenceData[event.target.name + 'Id'] = event.target.value;\n  }\n\n  //show or hide add refrence settings\n  toggleAddReference(event) {\n    this.setState(prev => ({\n      referenceAdd: !prev.referenceAdd,\n    }));\n  }\n\n  //update flow\n  updateFlow() {\n    fetch(\n      process.env.REACT_APP_API + `${this.props.activeModel}/flow/` + this.props.activeFlow,\n      {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(this.state.formData)\n      }\n    )\n      .then(response => {\n        if (this.state.deletedSourceSystems.length > 0)\n          this.deleteSourceSystems();\n        if (this.state.deletedTargetSystems.length > 0)\n          this.deleteTargetSystems();\n        this.addSourceSystems();\n        this.addTargetSystems();\n        this.setState(prevState => ({\n          modal: !prevState.modal\n        }));\n        \n        setTimeout( () => {\n          this.props.getFlowDetails(this.props.activeModelId, this.props.activeFlow);\n      }, 2000);\n        \n      })\n      .catch(error => console.log(error));\n  }\n\n  //add source systems\n  addSourceSystems() {\n    this.state.sourceSystems.map((system) => {\n      fetch(\n        process.env.REACT_APP_API + \"/hypermedia/network/\" + this.props.activeModelId + \"/flow/\" + this.props.activeFlow + \"/source/\" + system.value,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n        .then(response => { })\n        .catch(error => console.log(error));\n      return true;\n    });\n  }\n\n  //add target systems\n  addTargetSystems() {\n    this.state.targetSystems.map((system) => {\n      fetch(\n        process.env.REACT_APP_API + \"/hypermedia/network/\" + this.props.activeModelId + \"/flow/\" + this.props.activeFlow + \"/target/\" + system.value,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n        .then(response => { })\n        .catch(error => console.log(error));\n      return true;\n    });\n  }\n\n  //delete source systems\n  deleteSourceSystems() {\n    this.state.deletedSourceSystems.map((system) => {\n      fetch(\n        process.env.REACT_APP_API + \"/hypermedia/network/\" + this.props.activeModelId + \"/flow/\" + this.props.activeFlow + \"/source/\" + system.value,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n        .then(response => { })\n        .catch(error => console.log(error));\n      return true;\n    });\n  }\n\n  //delete target systems\n  deleteTargetSystems() {\n    this.state.deletedTargetSystems.map((system) => {\n      fetch(\n        process.env.REACT_APP_API + \"/hypermedia/network/\" + this.props.activeModelId + \"/flow/\" + this.props.activeFlow + \"/target/\" + system.value,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n        .then(response => { })\n        .catch(error => console.log(error));\n      return true;\n    });\n  }\n\n  //handle change of source systems\n  handleSourceChange(option, event) {\n    let difference = this.state.sourceSystems.filter(x => !option.includes(x));\n    if (difference.length > 0) {\n      this.state.deletedSourceSystems.push(difference[0]);\n    }\n    this.setState(state => {\n      return {\n        sourceSystems: option\n      };\n    });\n  }\n\n  //handle change of target systems\n  handleTargetChange(option) {\n    let difference = this.state.targetSystems.filter(x => !option.includes(x));\n    if (difference.length > 0) {\n      this.state.deletedTargetSystems.push(difference[0]);\n    }\n    this.setState(state => {\n      return {\n        targetSystems: option\n      };\n    });\n  }\n\n  //show or hide description\n  toggleDescription() {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n\n  //closes the flow detail window\n  close(type) {\n    this.props.close(type);\n  }\n\n  //show or hide flow full edit pop up\n  modalToggle(e, data) {\n    this.state.sourceSystems = [];\n    this.state.targetSystems = [];\n    this.state.deletedSourceSystems = [];\n    this.state.deletedTargetSystems = [];\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    this.props.flowDetails._links\n      .filter(links => links.rel === \"SOURCE\")\n      .map(source => {\n        this.state.sourceSystems.push({\n          value: source.params.id,\n          label: source.title\n        });\n        return true\n      });\n\n    this.props.flowDetails._links\n      .filter(links => links.rel === \"TARGET\")\n      .map(target => {\n        this.state.targetSystems.push({\n          value: target.params.id,\n          label: target.title\n        });\n        return true\n      })\n\n    this.setState({\n      formData: {\n        name: this.props.flowDetails.name,\n        description: this.props.flowDetails.description,\n        supportLevel: this.props.flowDetails.supportLevel,\n        custom: {\n          documentationUrl: this.props.flowDetails.custom.documentationUrl\n        }\n      }\n    });\n    this.getSystems();\n  }\n\n  getSystems() {\n    return fetch(\n      process.env.REACT_APP_API +\n      \"/hypermedia/network/\" +\n      this.props.activeModelId +\n      \"/allsystems\"\n    )\n      .then(res => res.json())\n      .then(response => {\n        this.setState({ systems: response });\n        response.map((systems, i) => {\n          this.state.filterOptions.push({\n            value: systems.id,\n            label: systems.name\n          });\n        });\n        return true\n      })\n      .catch(error => console.log(error));\n  }\n\n  getSystemServices(event) {\n    let parents = this.props.systems;\n    let parent = parents.filter(parent => parent.name === event.target.value);\n    if (parent) this.setState({ servicesList: parent[0].services });\n    var index = event.target.selectedIndex;\n    const { referenceData } = this.state;\n    referenceData[event.target.name] = event.target[index].text;\n    this.setState({\n      referenceData\n    });\n    referenceData[event.target.name + 'Id'] = event.target.value;\n  }\n\n  //create reference and invocation\n  createReference(event) {\n    /*this.setState(prevState => ({\n      data: [...prevState.data, {'invocationId' : '','referenceId' : '', 'refrenceName' :  '', 'consumedServiceId' : this.state.referenceData.consumedServiceId, \n      'consumedService' : this.state.referenceData.consumedService, 'consumerSystem' : this.state.referenceData.consumerSystem, 'consumerSystemId' : this.state.referenceData.consumerSystemId, 'providerSystem': this.state.referenceData.providerSystem, 'providerSystemId' :this.state.referenceData.providerSystemId, 'type' : 'new'}]\n    }))*/\n\n    fetch(\n      process.env.REACT_APP_API +\n      `/hypermedia/network/${this.props.activeModelId}/system/${this.state.referenceData.consumerSystemId}/reference/service/${this.state.referenceData.consumedServiceId}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    )\n      .then(response => response.json())\n      .then(referenceJson => {\n        this.props.getSystems(this.props.activeModelId)\n        fetch(\n          process.env.REACT_APP_API +\n          `/model/${this.props.activeModelId}/service/${this.props.activeFlow}/invocation/` +\n          referenceJson.id,\n          {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" }\n          }\n        )\n          .then(response => response.json())\n          .then(invocationJson => {\n            this.props.getFlowDetails(\n              this.props.activeModelId,\n              this.props.activeFlow\n            );\n            this.toggleAddReference()\n          })\n          .catch(error => console.log(error));\n      });\n  }\n\n  //sort the invocation list\n  sortInvocation() {\n    console.log(this.state.data)\n    this.state.data.map((reference, index) => {\n      fetch(\n        process.env.REACT_APP_API +\n        `/hypermedia/network/${this.props.activeModelId}/flow/${this.props.activeFlow}/invocation/` + reference.invocationId,\n        {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ 'index': index })\n        }\n      )\n        .then(response => {\n          return true\n        })\n        .catch(error => console.log(error));\n    })\n    this.props.getFlowDetails(this.props.activeModelId, this.props.activeFlow);\n  }\n\n  //handling sort event of the invocation list\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    this.setState(({ data }) => ({\n      data: arrayMove(data, oldIndex, newIndex),\n    }), () => {\n      this.sortInvocation()\n    });\n  };\n\n  render() {\n    var { formData } = this.state;\n    return (\n      <div className=\"browser\">\n        <Modal isOpen={this.state.modal} toggle={this.modalToggle}>\n          <ModalBody>\n            <div className=\"editFlow\">\n              <h3 className=\"d-inline-block modal-title\">Edit Flow Details</h3>\n              <button\n                className=\"btn grey-btn modal-top-btn\"\n                onClick={this.updateFlow.bind(this)}\n              >\n                Done <img src={check} alt=\"\" />\n              </button>\n              <div className=\"ModalInput m-t-50\">\n                <h4>Flow name</h4>\n                <input\n                  type=\"text\"\n                  value={formData.name}\n                  name=\"name\"\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n              <div className=\"ModalInput\">\n                <FormGroup>\n                  <Input\n                    className=\"select-css\"\n                    type=\"select\"\n                    name=\"supportLevel\"\n                    value={formData.supportLevel}\n                    onChange={this.handleChange.bind(this)}\n                  >\n                    <option value=\"\">Support Level</option>\n                    <option value=\"1\">Gold</option>\n                    <option value=\"2\">Platinum</option>\n                    <option value=\"3\">Silver</option>\n                    ))}\n                  </Input>\n                </FormGroup>\n              </div>\n              <div className=\"ModalInput\">\n                <h4>Documentation URL</h4>\n                <input\n                  type=\"text\"\n                  name=\"custom\"\n                  value={formData.custom.documentationUrl}\n                  onChange={this.handleUrlChange.bind(this)}\n                />\n              </div>\n              <div className=\"ModalInput\">\n                <h4>Description</h4>\n                <textarea\n                  type=\"text\"\n                  name=\"description\"\n                  value={formData.description}\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n              <div className=\"ModalInput\">\n                <h4>Source system</h4>\n                <div className=\"searchbar\">\n                  <div sm=\"12\">\n                    <Select\n                      name=\"filters\"\n                      placeholder=\"\"\n                      value={this.state.sourceSystems}\n                      options={this.state.filterOptions}\n                      onChange={this.handleSourceChange.bind(this)}\n                      multi\n                      clearable={false}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"ModalInput\">\n                <h4>Target system</h4>\n                <div className=\"searchbar\">\n                  <div sm=\"12\">\n                    <Select\n                      name=\"filters\"\n                      placeholder=\"\"\n                      value={this.state.targetSystems}\n                      options={this.state.filterOptions}\n                      onChange={this.handleTargetChange.bind(this)}\n                      multi\n                      clearable={false}\n                    />\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </ModalBody>\n        </Modal>\n\n        <div className=\"browser_header text-white\">\n          <div>\n            <span className=\"icon icon-Share submenu-icon\" />\n            <h3 className=\"d-inline-block\">Flow Details</h3>\n            <img\n              src={edit}\n              alt=\"starlify\"\n              className=\"edit\"\n              onClick={() => this.modalToggle(this, this.props.flowDetails)}\n            />\n            <i\n              className=\"fas fa-times system-down-icon browser_close\"\n              onClick={() => this.close(\"flowDetail\")}\n            />\n          </div>\n        </div>\n        <div className=\"browser_wrapper browser_body\">\n          <div className=\"name m-b-20\">\n            <p className=\"text-grey\">Name</p>\n            <p className=\"text-white\">{this.props.flowDetails.name}</p>\n          </div>\n          <div className=\"support m-b-20\">\n            <p className=\"text-grey\">Support level</p>\n            {this.props.flowDetails.supportLevel === 1 && (\n              <p className=\"text-white\">Gold</p>\n            )}\n            {this.props.flowDetails.supportLevel === 2 && (\n              <p className=\"text-white\">Platinum</p>\n            )}\n            {this.props.flowDetails.supportLevel === 3 && (\n              <p className=\"text-white\">Silver</p>\n            )}\n          </div>\n          <div className=\"url m-b-20\">\n            <p className=\"text-grey\">Documentation URL</p>\n            <p className=\"text-white\">\n              {this.props.flowDetails.custom\n                ? this.props.flowDetails.custom.documentationUrl\n                : \"\"}\n            </p>\n          </div>\n          <div className=\"desc m-b-20\">\n            <p className=\"text-grey\">Description</p>\n            <p className=\"text-white\">{this.props.flowDetails.description}</p>\n          </div>\n          <div className=\"system m-b-20\">\n            <p className=\"text-grey\">Source</p>\n            {this.props.flowDetails._links\n              ? this.props.flowDetails._links\n                .filter(links => links.rel === \"SOURCE\")\n                .map((source, index) => {\n                  return <p key={index} className=\"text-white\">{source.title}</p>;\n                })\n              : \"\"}\n          </div>\n          <div className=\"target m-b-20\">\n            <p className=\"text-grey\">Target</p>\n            {this.props.flowDetails._links\n              ? this.props.flowDetails._links\n                .filter(links => links.rel === \"TARGET\")\n                .map((target, index) => {\n                  return <p key={index} className=\"text-white\">{target.title}</p>;\n                })\n              : \"\"}\n          </div>\n          <div className=\"technical row\">\n            <div className=\"technical-header col-md-12\">\n              <span className=\"text-grey\">Technical</span>\n              {!this.state.referenceAdd && (\n                <div className=\"addModal\">\n                  <span onClick={this.toggleAddReference.bind(this)}>\n                    <img src={addCircle} alt=\"starlify\" />\n                    Add Refrence\n                    </span>\n                </div>\n              )}\n            </div>\n            <div className=\"technical-body col-md-12\">\n              <ul className=\"row head\">\n                <li className=\"col-md-1\"></li>\n                <li className=\"col-md-4\">Consumer</li>\n                <li className=\"col-md-3\">Provider</li>\n                <li className=\"col-md-3\">Service</li>\n                <li className=\"col-md-1\"></li>\n              </ul>\n\n              <SortableList items={this.state.data} onSortEnd={this.onSortEnd} />\n              <div className=\"sequence\">\n                <img\n                  src={sequence}\n                  alt=\"starlify\"\n                  className=\"d-block mx-auto\"\n                />\n              </div>\n            </div>\n            {this.state.referenceAdd && (\n              <div className=\"d-block mx-auto\">\n                <ul className=\"d-flex formGroupWrapper justify-content-md-center create-ref\">\n                  <li className=\"form-group\">\n                    <Input\n                      type=\"select\"\n                      name=\"consumerSystem\"\n                      onChange={this.handleReferenceChange.bind(this)}\n                      className=\"p-l-0\"\n                    >\n                      <option>Consumer System</option>\n                      {this.props.systems\n                        ? this.props.systems.map((item, i) => {\n                          return (\n                            <option key={i} value={item.id} id={item.id}>\n                              {item.name}\n                            </option>\n                          );\n                        })\n                        : \"\"}\n                    </Input>\n                  </li>\n                  <li className=\"form-group\">\n                    <Input\n                      type=\"select\"\n                      name=\"providerSystem\"\n                      onChange={this.getSystemServices.bind(this)}\n                    >\n                      <option>Provider System</option>\n                      {this.props.systems\n                        ? this.props.systems.map((item, i) => {\n                          return (\n                            <option key={i} value={item.name} id={item.id}>\n                              {item.name}\n                            </option>\n                          );\n                        })\n                        : \"\"}\n                    </Input>\n                  </li>\n                  <li className=\"form-group\">\n                    <Input\n                      type=\"select\"\n                      name=\"consumedService\"\n                      id=\"exampleSelect\"\n                      onChange={this.handleReferenceChange.bind(this)}\n                    >\n                      <option>Service</option>\n                      {this.state.servicesList\n                        ? this.state.servicesList.map((item, i) => {\n                          return (\n                            <option key={i} value={item.id}>\n                              {item.name}\n                            </option>\n                          );\n                        })\n                        : \"\"}\n                    </Input>\n                  </li>\n                  <li className=\"form-group\">\n                    <button\n                      className=\"link-btn modal-top-btn m-l-15\"\n                      onClick={this.createReference.bind(this)}\n                    >\n                      Done\n                      </button>\n                  </li>\n                </ul>\n              </div>)}\n          </div>\n\n\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getFlowDetails: (modelId, flowId) => {\n      dispatch(fetchFlowDetils(modelId, flowId));\n    },\n    getSystems: (modelId) => {\n      dispatch(fetchSystems(modelId));\n    },\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeFlow: state.flows.activeFlow,\n    activeModel: state.model.modelUri,\n    flowDetails: state.flows.flowDetails,\n    activeModelId: state.model.modelId,\n    type: state.flows.type,\n    systems: state.systems.items,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FlowDetails);\n"]},"metadata":{},"sourceType":"module"}