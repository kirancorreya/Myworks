{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/Organisation.js\";\nimport React, { Component } from \"react\";\nimport { Modal, ModalBody, Input, Row, Col, InputGroup, InputGroupAddon, InputGroupText, Collapse } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { fetchDivisions } from \"../../../store/organisation/orgActions\";\nimport addCircle from \"../../../_assets/icons/icons/add-icon-circle.svg\";\nimport AddDivision from \"../../../_components/organisation/AddDivision\";\nimport EditDivision from \"../../../_components/organisation/EditDivision\";\nimport DeleteDivision from \"../../../_components/organisation/DeleteDivision\";\nimport AddTeam from \"../../../_components/organisation/AddTeam\";\nimport EditTeam from \"../../../_components/organisation/EditTeam\";\nimport DeleteTeam from \"../../../_components/organisation/DeleteTeam\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport closeIcon from \"../../../_assets/icons/icons/exitwhite.svg\";\n\nclass Organisation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editDivisionToggle = division => {\n      this.setState(state => {\n        let edit = Object.assign({}, state.edit);\n        edit.division = division;\n        return {\n          edit,\n          eventType: \"division-edit\",\n          popup: true\n        };\n      });\n    };\n\n    this.deleteDivisionToggle = division => {\n      this.setState(state => {\n        let edit = Object.assign({}, state.edit);\n        edit.division = division;\n        return {\n          edit,\n          eventType: \"division-delete\",\n          popup: true\n        };\n      });\n    };\n\n    this.addTeamToggle = division => {\n      this.setState(state => {\n        let edit = Object.assign({}, state.edit);\n        edit.division = division;\n        return {\n          edit,\n          eventType: \"team-add\",\n          popup: true\n        };\n      });\n    };\n\n    this.editTeamToggle = team => {\n      this.setState(state => {\n        let edit = Object.assign({}, state.edit);\n        edit.team = team;\n        return {\n          edit,\n          eventType: \"team-edit\",\n          popup: true\n        };\n      });\n    };\n\n    this.modalToggle = (fetch = false) => {\n      this.setState(state => {\n        let edit = Object.assign({}, state.edit);\n        edit.division = null;\n        return {\n          edit,\n          popup: !this.state.popup,\n          eventType: null\n        };\n      });\n      if (fetch === true) this.props.onfetchDivisions(this.props.domain);\n    };\n\n    this.collapseDivList = divisionId => {\n      var collapse_div = this.state.collapse_div;\n      var collapse = null;\n\n      if (collapse_div === null) {\n        collapse = divisionId;\n      } else {\n        if (divisionId === collapse_div) collapse = null;else collapse = divisionId;\n      }\n\n      this.setState({\n        collapse_div: collapse\n      });\n    };\n\n    this.collapseTeamList = teamId => {\n      var collapse_team = this.state.collapse_team;\n      var collapse = null;\n\n      if (collapse_team === null) {\n        collapse = teamId;\n      } else {\n        if (teamId === collapse_team) collapse = null;else collapse = teamId;\n      }\n\n      this.setState({\n        collapse_team: collapse\n      });\n    };\n\n    this.close = this.close.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.state = {\n      popup: false,\n      eventType: null,\n      addDivision: false,\n      collapse_div: null,\n      collapse_team: null,\n      edit: {\n        division: null,\n        team: null\n      }\n    };\n  } // closes the organisation section\n\n\n  close(menu, type) {\n    this.props.close(menu, type);\n  }\n\n  componentDidMount() {\n    if (this.props.domain !== \"\") {\n      this.props.onfetchDivisions(this.props.domain);\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n\n    if (oldProps.domain !== newProps.domain) {\n      this.props.onfetchDivisions(newProps.domain);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"org_browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.popup,\n      toggle: this.modalToggle,\n      className: \"modal-dialog-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.state.eventType === \"division-add\" && React.createElement(AddDivision, {\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), this.state.eventType === \"division-edit\" && React.createElement(EditDivision, {\n      division: this.state.edit.division,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), this.state.eventType === \"division-delete\" && React.createElement(DeleteDivision, {\n      division: this.state.edit.division,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), this.state.eventType === \"team-add\" && React.createElement(AddTeam, {\n      division: this.state.edit.division,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), this.state.eventType === \"team-edit\" && React.createElement(EditTeam, {\n      team: this.state.edit.team,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), this.state.eventType === \"team-delete\" && React.createElement(DeleteTeam, {\n      team: this.state.edit.team,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"browser_header text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-users submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Organisation\"), React.createElement(\"img\", {\n      src: closeIcon,\n      alt: \"starlify\",\n      className: \"system-down-icon\",\n      onClick: () => this.close(\"organisation\", \"menu\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), this.props.orgid !== \"\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"searchbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(InputGroupAddon, {\n      addonType: \"append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"addDivisionIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: () => {\n        this.setState({\n          eventType: \"division-add\",\n          popup: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: addCircle,\n      alt: \"starlify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), \"Add Division\")))), this.props.orgid !== \"\" && React.createElement(\"div\", {\n      className: \"browser_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(VerticalScrollbars, {\n      style: {\n        height: \"calc(100vh - 175px)\"\n      },\n      autoHide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"division_model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_body_header text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"browser_body_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"modelListWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.props.divisions.length !== 0 && this.props.divisions.map((division, index) => {\n      return React.createElement(\"li\", {\n        className: \"modelListbody text-white divisionListItem\",\n        key: division.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"7\",\n        className: \"divisionitemtext\",\n        onClick: () => this.collapseDivList(division.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, division.teams.length !== 0 && React.createElement(\"i\", {\n        className: \"fas fa-chevron-\".concat(this.state.collapse_div === division.id ? \"down\" : \"right\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), division.name), React.createElement(Col, {\n        sm: \"5\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"hoversettings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: () => {\n          this.addTeamToggle(division);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: addCircle,\n        alt: \"starlify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: () => {\n          this.editDivisionToggle(division);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: () => {\n          this.deleteDivisionToggle(division);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }))))), React.createElement(Collapse, {\n        isOpen: this.state.collapse_div === division.id ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"teamListWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, division.teams.map((team, index) => {\n        return React.createElement(\"li\", {\n          key: team.id,\n          className: \"teamListItem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"7\",\n          className: \"teamitemtext\",\n          onClick: () => this.collapseTeamList(team.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, team.persons.length !== 0 && React.createElement(\"i\", {\n          className: \"fas fa-chevron-\".concat(this.state.collapse_team === team.id ? \"down\" : \"right\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }), team.name), React.createElement(Col, {\n          sm: \"5\",\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"hoversettings\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          onClick: () => {\n            this.editTeamToggle(team);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-pen\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }))))), React.createElement(Collapse, {\n          isOpen: this.state.collapse_team === team.id ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"developerListWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, team.persons.map((person, i) => {\n          return React.createElement(\"li\", {\n            key: person.id,\n            className: \"developerListItem\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 334\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 338\n            },\n            __self: this\n          }, person.firstName && person.lastName ? React.createElement(Col, {\n            sm: \"7\",\n            className: \"developeritemtext\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 341\n            },\n            __self: this\n          }, \" \", person.firstName + \" \" + person.lastName, \" \") : React.createElement(Col, {\n            sm: \"7\",\n            className: \"developeritemtext\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 351\n            },\n            __self: this\n          }, \" \", \"Unknown\", \" \")));\n        }))));\n      }))));\n    }))))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain,\n    orgid: state.organisation.orgid,\n    divisions: state.organisation.divisions\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onfetchDivisions: domainId => {\n      dispatch(fetchDivisions(domainId));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Organisation);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/Organisation.js"],"names":["React","Component","Modal","ModalBody","Input","Row","Col","InputGroup","InputGroupAddon","InputGroupText","Collapse","connect","fetchDivisions","AddDivision","EditDivision","DeleteDivision","AddTeam","EditTeam","DeleteTeam","VerticalScrollbars","Organisation","constructor","props","editDivisionToggle","division","setState","state","edit","Object","assign","eventType","popup","deleteDivisionToggle","addTeamToggle","editTeamToggle","team","modalToggle","fetch","onfetchDivisions","domain","collapseDivList","divisionId","collapse_div","collapse","collapseTeamList","teamId","collapse_team","close","bind","addDivision","menu","type","componentDidMount","componentDidUpdate","oldProps","newProps","render","closeIcon","orgid","addCircle","height","divisions","length","map","index","id","teams","name","persons","person","i","firstName","lastName","mapStateToProps","model","organisation","mapDispatchToProps","dispatch","domainId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Modal,\n  ModalBody,\n  Input,\n  Row,\n  Col,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Collapse\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { fetchDivisions } from \"../../../store/organisation/orgActions\";\nimport addCircle from \"../../../_assets/icons/icons/add-icon-circle.svg\";\n\nimport AddDivision from \"../../../_components/organisation/AddDivision\";\nimport EditDivision from \"../../../_components/organisation/EditDivision\";\nimport DeleteDivision from \"../../../_components/organisation/DeleteDivision\";\n\nimport AddTeam from \"../../../_components/organisation/AddTeam\";\nimport EditTeam from \"../../../_components/organisation/EditTeam\";\nimport DeleteTeam from \"../../../_components/organisation/DeleteTeam\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport closeIcon from \"../../../_assets/icons/icons/exitwhite.svg\";\n\nclass Organisation extends Component {\n  constructor(props) {\n    super(props);\n    this.close = this.close.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.state = {\n      popup: false,\n      eventType: null,\n      addDivision: false,\n      collapse_div: null,\n      collapse_team: null,\n      edit: {\n        division: null,\n        team: null\n      }\n    };\n  }\n\n  // closes the organisation section\n  close(menu, type) {\n    this.props.close(menu, type);\n  }\n\n  componentDidMount() {\n    if (this.props.domain !== \"\") {\n      this.props.onfetchDivisions(this.props.domain);\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n    if (oldProps.domain !== newProps.domain) {\n      this.props.onfetchDivisions(newProps.domain);\n    }\n  }\n\n  editDivisionToggle = division => {\n    this.setState(state => {\n      let edit = Object.assign({}, state.edit);\n      edit.division = division;\n      return { edit, eventType: \"division-edit\", popup: true };\n    });\n  };\n\n  deleteDivisionToggle = division => {\n    this.setState(state => {\n      let edit = Object.assign({}, state.edit);\n      edit.division = division;\n      return { edit, eventType: \"division-delete\", popup: true };\n    });\n  };\n\n  addTeamToggle = division => {\n    this.setState(state => {\n      let edit = Object.assign({}, state.edit);\n      edit.division = division;\n      return { edit, eventType: \"team-add\", popup: true };\n    });\n  };\n\n  editTeamToggle = team => {\n    this.setState(state => {\n      let edit = Object.assign({}, state.edit);\n      edit.team = team;\n      return { edit, eventType: \"team-edit\", popup: true };\n    });\n  };\n\n  modalToggle = (fetch = false) => {\n    this.setState(state => {\n      let edit = Object.assign({}, state.edit);\n      edit.division = null;\n      return { edit, popup: !this.state.popup, eventType: null };\n    });\n    if (fetch === true) this.props.onfetchDivisions(this.props.domain);\n  };\n\n  collapseDivList = divisionId => {\n    var { collapse_div } = this.state;\n    var collapse = null;\n    if (collapse_div === null) {\n      collapse = divisionId;\n    } else {\n      if (divisionId === collapse_div) collapse = null;\n      else collapse = divisionId;\n    }\n    this.setState({\n      collapse_div: collapse\n    });\n  };\n\n  collapseTeamList = teamId => {\n    var { collapse_team } = this.state;\n    var collapse = null;\n    if (collapse_team === null) {\n      collapse = teamId;\n    } else {\n      if (teamId === collapse_team) collapse = null;\n      else collapse = teamId;\n    }\n    this.setState({\n      collapse_team: collapse\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"org_browser\">\n        <Modal\n          isOpen={this.state.popup}\n          toggle={this.modalToggle}\n          className=\"modal-dialog-centered\"\n        >\n          <ModalBody>\n            {this.state.eventType === \"division-add\" && (\n              <AddDivision toggle={this.modalToggle} />\n            )}\n            {this.state.eventType === \"division-edit\" && (\n              <EditDivision\n                division={this.state.edit.division}\n                toggle={this.modalToggle}\n              />\n            )}\n            {this.state.eventType === \"division-delete\" && (\n              <DeleteDivision\n                division={this.state.edit.division}\n                toggle={this.modalToggle}\n              />\n            )}\n            {this.state.eventType === \"team-add\" && (\n              <AddTeam\n                division={this.state.edit.division}\n                toggle={this.modalToggle}\n              />\n            )}\n            {this.state.eventType === \"team-edit\" && (\n              <EditTeam team={this.state.edit.team} toggle={this.modalToggle} />\n            )}\n            {this.state.eventType === \"team-delete\" && (\n              <DeleteTeam\n                team={this.state.edit.team}\n                toggle={this.modalToggle}\n              />\n            )}\n          </ModalBody>\n        </Modal>\n\n        <div className=\"browser_header text-white\">\n          <div>\n            <i className=\"fas fa-users submenu-icon\"></i>\n            <h3 className=\"d-inline-block\">Organisation</h3>\n            <img\n              src={closeIcon}\n              alt=\"starlify\"\n              className=\"system-down-icon\"\n              onClick={() => this.close(\"organisation\", \"menu\")}\n            />\n          </div>\n          {this.props.orgid !== \"\" && (\n            <div>\n              <Row className=\"searchbar\">\n                <Col sm=\"6\">\n                  <InputGroup>\n                    <Input placeholder=\"search\" />\n                    <InputGroupAddon addonType=\"append\">\n                      <InputGroupText>\n                        <i className=\"fas fa-search\"></i>\n                      </InputGroupText>\n                    </InputGroupAddon>\n                  </InputGroup>\n                </Col>\n              </Row>\n              <div className=\"addDivisionIcon\">\n                <span\n                  onClick={() => {\n                    this.setState({ eventType: \"division-add\", popup: true });\n                  }}\n                >\n                  <img src={addCircle} alt=\"starlify\" />\n                  Add Division\n                </span>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {this.props.orgid !== \"\" && (\n          <div className=\"browser_body\">\n            <VerticalScrollbars\n              style={{ height: \"calc(100vh - 175px)\" }}\n              autoHide\n            >\n              <div className=\"division_model\">\n                <div className=\"browser_body_header text-white\"></div>\n                <div className=\"browser_body_content\">\n                  <div>\n                    <ul className=\"modelListWrapper\">\n                      {this.props.divisions.length !== 0 &&\n                        this.props.divisions.map((division, index) => {\n                          return (\n                            <li\n                              className=\"modelListbody text-white divisionListItem\"\n                              key={division.id}\n                            >\n                              <Row>\n                                <Col\n                                  sm=\"7\"\n                                  className=\"divisionitemtext\"\n                                  onClick={() =>\n                                    this.collapseDivList(division.id)\n                                  }\n                                >\n                                  {division.teams.length !== 0 && (\n                                    <i\n                                      className={`fas fa-chevron-${\n                                        this.state.collapse_div === division.id\n                                          ? \"down\"\n                                          : \"right\"\n                                      }`}\n                                    ></i>\n                                  )}\n                                  {division.name}\n                                </Col>\n                                <Col sm=\"5\" className=\"text-center\">\n                                  <ul className=\"hoversettings\">\n                                    <li\n                                      onClick={() => {\n                                        this.addTeamToggle(division);\n                                      }}\n                                    >\n                                      <img src={addCircle} alt=\"starlify\" />\n                                    </li>\n                                    <li\n                                      onClick={() => {\n                                        this.editDivisionToggle(division);\n                                      }}\n                                    >\n                                      <i className=\"fas fa-pen\"></i>\n                                    </li>\n                                    <li\n                                      onClick={() => {\n                                        this.deleteDivisionToggle(division);\n                                      }}\n                                    >\n                                      <i className=\"fas fa-trash-alt\"></i>\n                                    </li>\n                                  </ul>\n                                </Col>\n                              </Row>\n\n                              <Collapse\n                                isOpen={\n                                  this.state.collapse_div === division.id\n                                    ? true\n                                    : false\n                                }\n                              >\n                                <ul className=\"teamListWrapper\">\n                                  {division.teams.map((team, index) => {\n                                    return (\n                                      <li\n                                        key={team.id}\n                                        className=\"teamListItem\"\n                                      >\n                                        <Row>\n                                          <Col\n                                            sm=\"7\"\n                                            className=\"teamitemtext\"\n                                            onClick={() =>\n                                              this.collapseTeamList(team.id)\n                                            }\n                                          >\n                                            {team.persons.length !== 0 && (\n                                              <i\n                                                className={`fas fa-chevron-${\n                                                  this.state.collapse_team ===\n                                                  team.id\n                                                    ? \"down\"\n                                                    : \"right\"\n                                                }`}\n                                              ></i>\n                                            )}\n                                            {team.name}\n                                          </Col>\n                                          <Col sm=\"5\" className=\"text-center\">\n                                            <ul className=\"hoversettings\">\n                                              <li\n                                                onClick={() => {\n                                                  this.editTeamToggle(team);\n                                                }}\n                                              >\n                                                <i className=\"fas fa-pen\"></i>\n                                              </li>\n                                            </ul>\n                                          </Col>\n                                        </Row>\n\n                                        <Collapse\n                                          isOpen={\n                                            this.state.collapse_team === team.id\n                                              ? true\n                                              : false\n                                          }\n                                        >\n                                          <ul className=\"developerListWrapper\">\n                                            {team.persons.map((person, i) => {\n                                              return (\n                                                <li\n                                                  key={person.id}\n                                                  className=\"developerListItem\"\n                                                >\n                                                  <Row>\n                                                    {person.firstName &&\n                                                    person.lastName ? (\n                                                      <Col\n                                                        sm=\"7\"\n                                                        className=\"developeritemtext\"\n                                                      >\n                                                        {\" \"}\n                                                        {person.firstName +\n                                                          \" \" +\n                                                          person.lastName}{\" \"}\n                                                      </Col>\n                                                    ) : (\n                                                      <Col\n                                                        sm=\"7\"\n                                                        className=\"developeritemtext\"\n                                                      >\n                                                        {\" \"}\n                                                        Unknown{\" \"}\n                                                      </Col>\n                                                    )}\n                                                  </Row>\n                                                </li>\n                                              );\n                                            })}\n                                          </ul>\n                                        </Collapse>\n                                      </li>\n                                    );\n                                  })}\n                                </ul>\n                              </Collapse>\n                            </li>\n                          );\n                        })}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </VerticalScrollbars>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain,\n    orgid: state.organisation.orgid,\n    divisions: state.organisation.divisions\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onfetchDivisions: domainId => {\n      dispatch(fetchDivisions(domainId));\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Organisation);\n"]},"metadata":{},"sourceType":"module"}