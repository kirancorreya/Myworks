{"ast":null,"code":"/**\n * nav-mesh\n *\n * Waits for a mesh to be loaded on the current entity, then sets it as the\n * nav mesh in the pathfinding system.\n */\nmodule.exports = AFRAME.registerComponent('nav-mesh', {\n  init: function () {\n    this.system = this.el.sceneEl.systems.nav;\n    this.hasLoadedNavMesh = false;\n    this.el.addEventListener('object3dset', this.loadNavMesh.bind(this));\n  },\n  play: function () {\n    if (!this.hasLoadedNavMesh) this.loadNavMesh();\n  },\n  loadNavMesh: function () {\n    const object = this.el.getObject3D('mesh');\n    const scene = this.el.sceneEl.object3D;\n    if (!object) return;\n    let navMesh;\n    object.traverse(node => {\n      if (node.isMesh) navMesh = node;\n    });\n    if (!navMesh) return;\n    const navMeshGeometry = navMesh.geometry.isBufferGeometry ? new THREE.Geometry().fromBufferGeometry(navMesh.geometry) : navMesh.geometry.clone();\n    scene.updateMatrixWorld();\n    navMeshGeometry.applyMatrix(navMesh.matrixWorld);\n    this.system.setNavMeshGeometry(navMeshGeometry);\n    this.hasLoadedNavMesh = true;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}