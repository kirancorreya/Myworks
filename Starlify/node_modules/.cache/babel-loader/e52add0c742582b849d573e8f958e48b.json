{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/_components/organisation/AddTeam.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport check from \"../../_assets/icons/icons/check-icon.svg\";\n\nclass AddTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addTeam = () => {\n      const division = this.props.division;\n      const add_team_name = this.state.add_team_name;\n\n      if (add_team_name !== \"\") {\n        fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/organisation/\" + division.id + \"/organisation\", {\n          method: \"POST\"\n        }).then(res => res.json()).then(result => {\n          fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/organisation/\" + result.id, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              name: add_team_name\n            })\n          }).then(res => res.json()).then(result => {\n            this.props.toggle(true);\n          });\n        });\n      } else {\n        this.props.toggle();\n      }\n    };\n\n    this.state = {\n      add_team_name: \"\",\n      error: null\n    };\n  }\n\n  render() {\n    const division = this.props.division;\n    return React.createElement(\"div\", {\n      className: \"addTeamInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"d-inline-block modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" Add team in \", division.name, \" \"), React.createElement(\"button\", {\n      className: \"btn grey-btn modal-top-btn\",\n      onClick: this.addTeam.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" Done \", React.createElement(\"img\", {\n      src: check,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: \"modalSearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Team name\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        this.setState({\n          add_team_name: e.target.value\n        });\n      },\n      value: this.state.add_team_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"modalList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Teams\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"No Developers yet\")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain\n  };\n}\n\nexport default connect(mapStateToProps)(AddTeam);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/_components/organisation/AddTeam.js"],"names":["React","Component","connect","AddTeam","constructor","props","addTeam","division","add_team_name","state","fetch","process","env","REACT_APP_API","domain","id","method","then","res","json","result","headers","body","JSON","stringify","name","toggle","error","render","bind","check","e","setState","target","value","mapStateToProps","model"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport check from \"../../_assets/icons/icons/check-icon.svg\";\n\nclass AddTeam extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      add_team_name: \"\",\n      error: null\n    }\n  }\n\n  addTeam = () => {\n    const {division} = this.props;\n    const {add_team_name} = this.state;\n    if (add_team_name !== \"\") {\n      fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/organisation/\" + division.id + \"/organisation\", { method: \"POST\" } )\n        .then(res => res.json())\n        .then(result => {\n          fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/organisation/\" + result.id,\n              {\n                method: \"PATCH\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ name: add_team_name })\n              }\n            )\n            .then(res => res.json())\n            .then(result => {\n              this.props.toggle(true);\n            });\n        });\n    }else{\n      this.props.toggle();\n    }\n  };\n\n  render(){\n    const {division} = this.props;\n    return(\n      <div className=\"addTeamInput\">\n        <h3 className=\"d-inline-block modal-title\"> Add team in {division.name} </h3>\n        <button className=\"btn grey-btn modal-top-btn\" onClick={this.addTeam.bind(this)}> Done <img src={check} alt=\"\" /> </button>\n        <div className=\"modalSearch\">\n          <h4>Team name</h4>\n          <input type=\"text\" onChange={(e)=>{this.setState({add_team_name: e.target.value})}} value={this.state.add_team_name} />\n        </div>\n        <div className=\"modalList\">\n          <h4>Teams</h4>\n          <h1>No Developers yet</h1>\n        </div>\n      </div>\n\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain\n  };\n}\n\nexport default connect( mapStateToProps )(AddTeam);\n"]},"metadata":{},"sourceType":"module"}