{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/_partials/Header/Header.js\";\nimport React, { Component } from \"react\";\nimport { Col } from \"reactstrap\";\nimport photo from \"../../_assets/images/photo.jpg\";\nimport Organisation from \"../../pages/dashboard/browsers/Organisation\";\nimport Systems from \"../../pages/dashboard/browsers/Systems\";\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getBtnId = e => {\n      if (e.target && e.target.nodeName == \"BUTTON\") {\n        console.log(e.target);\n        this.setState({\n          panelIndex: Number(e.target.id)\n        });\n      }\n    };\n\n    this.state = {\n      panelIndex: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(HelpMenu, {\n      getBtnId: this.getBtnId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(HelpPanels, {\n      panelIndex: this.state.panelIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst HelpMenu = ({\n  getBtnId\n}) => {\n  return React.createElement(\"div\", {\n    className: \"btnGroup\",\n    onClick: getBtnId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Option 1\"), React.createElement(\"button\", {\n    id: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Option 2\"), React.createElement(\"button\", {\n    id: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Option 3\"), React.createElement(\"button\", {\n    id: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Option 4\"));\n};\n\nclass HelpPanels extends React.Component {\n  render() {\n    const panels = [React.createElement(HelpPanel1, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(HelpPanel2, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(HelpPanel3, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(HelpPanel4, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })];\n    const correctPanel = panels[this.props.panelIndex];\n    return React.createElement(\"div\", {\n      className: \"panel-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, correctPanel);\n  }\n\n}\n\nconst HelpPanel1 = () => React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, \"Panel for Option 1\");\n\nconst HelpPanel2 = () => React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, \"Panel for Option 2\");\n\nconst HelpPanel3 = () => React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, \"Panel for Option 3\");\n\nconst HelpPanel4 = () => React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \"Panel for Option 4\");\n\nReactDOM.render(React.createElement(HelpPage, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/_partials/Header/Header.js"],"names":["React","Component","Col","photo","Organisation","Systems","Header","constructor","props","getBtnId","e","target","nodeName","console","log","setState","panelIndex","Number","id","state","render","HelpMenu","HelpPanels","panels","correctPanel","HelpPanel1","HelpPanel2","HelpPanel3","HelpPanel4","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Col } from \"reactstrap\";\nimport photo from \"../../_assets/images/photo.jpg\";\nimport Organisation from \"../../pages/dashboard/browsers/Organisation\";\nimport Systems from \"../../pages/dashboard/browsers/Systems\";\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      panelIndex: 0\n    };\n  }\n\n  getBtnId = e => {\n    if (e.target && e.target.nodeName == \"BUTTON\") {\n      console.log(e.target);\n      this.setState({\n        panelIndex: Number(e.target.id)\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <HelpMenu getBtnId={this.getBtnId} />\n        <HelpPanels panelIndex={this.state.panelIndex} />\n      </div>\n    );\n  }\n}\nconst HelpMenu = ({ getBtnId }) => {\n  return (\n    <div className=\"btnGroup\" onClick={getBtnId}>\n      <button id=\"0\">Option 1</button>\n      <button id=\"1\">Option 2</button>\n      <button id=\"2\">Option 3</button>\n      <button id=\"3\">Option 4</button>\n    </div>\n  );\n};\n\nclass HelpPanels extends React.Component {\n  render() {\n    const panels = [\n      <HelpPanel1 />,\n      <HelpPanel2 />,\n      <HelpPanel3 />,\n      <HelpPanel4 />\n    ];\n    const correctPanel = panels[this.props.panelIndex];\n    return <div className=\"panel-box\">{correctPanel}</div>;\n  }\n}\n\nconst HelpPanel1 = () => <h1>Panel for Option 1</h1>;\nconst HelpPanel2 = () => <h1>Panel for Option 2</h1>;\nconst HelpPanel3 = () => <h1>Panel for Option 3</h1>;\nconst HelpPanel4 = () => <h1>Panel for Option 4</h1>;\n\nReactDOM.render(<HelpPage />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}