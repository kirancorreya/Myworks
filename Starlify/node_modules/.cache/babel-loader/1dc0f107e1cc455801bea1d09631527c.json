{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/_components/organisation/EditTeam.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col } from \"reactstrap\";\nimport check from \"../../_assets/icons/icons/check-icon.svg\";\nimport addCircle from \"../../_assets/icons/icons/add-icon-circle.svg\";\n\nclass EditTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateTeam = () => {\n      const team = this.props.team;\n      const team_name = this.state.team_name;\n\n      if (team_name !== \"\") {\n        fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/organisation/\" + team.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: team_name\n          })\n        }).then(res => res.json()).then(result => {\n          this.props.toggle(true);\n        });\n      } else {\n        this.props.toggle();\n      }\n    };\n\n    this.addPerson = () => {\n      const team = this.props.team;\n      var name = this.state.dev_firstname + \" \" + this.state.dev_lastname;\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/organisation/\" + team.id + \"/person\", {\n        method: \"POST\"\n      }).then(res => res.json()).then(result => {\n        fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/person/\" + result.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: name\n          })\n        }).then(res => res.json()).then(result => {\n          team.persons.push(result);\n          this.setState({\n            dev_firstname: \"\",\n            dev_lastname: \"\",\n            dev_email: \"\",\n            dev_add: false\n          });\n        });\n      });\n    };\n\n    this.toggleDevEdit = person => {\n      var firstName = person.name.split(' ').slice(0, -1).join(' ');\n      var lastName = person.name.split(' ').slice(-1).join(' ');\n      this.setState({\n        dev_edit: true,\n        dev_firstname: firstName,\n        dev_lastname: lastName,\n        dev_data: person\n      });\n    };\n\n    this.updatePerson = () => {\n      const team = this.props.team;\n      const _this$state = this.state,\n            dev_firstname = _this$state.dev_firstname,\n            dev_lastname = _this$state.dev_lastname,\n            dev_data = _this$state.dev_data;\n      var name = dev_firstname + \" \" + dev_lastname;\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/person/\" + dev_data.id, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: name\n        })\n      }).then(res => res.json()).then(result => {\n        team.persons.forEach(person => {\n          if (person.id === dev_data.id) {\n            person.name = result.name;\n          }\n        });\n        this.setState({\n          dev_edit: false,\n          dev_firstname: \"\",\n          dev_lastname: \"\",\n          dev_data: \"\"\n        });\n      });\n    };\n\n    this.deletePerson = () => {\n      const team = this.props.team;\n      const dev_data = this.state.dev_data;\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/person/\" + dev_data.id, {\n        method: \"DELETE\"\n      }).then(result => {\n        switch (result.status) {\n          case 200:\n            team.persons = team.persons.filter(function (person) {\n              return person.id !== dev_data.id;\n            });\n            break;\n\n          default:\n        }\n\n        this.setState({\n          dev_delete: false,\n          dev_data: null\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          dev_delete: false,\n          dev_data: null\n        });\n      });\n    };\n\n    this.state = {\n      team_name: props.team.name,\n      dev_add: false,\n      dev_edit: false,\n      dev_data: null,\n      dev_firstname: \"\",\n      dev_lastname: \"\",\n      dev_email: \"\",\n      dev_delete: false,\n      error: null\n    };\n  }\n\n  render() {\n    const team = this.props.team;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editTeam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"d-inline-block modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \" Edit \", team.name, \" \"), React.createElement(\"button\", {\n      className: \"btn grey-btn modal-top-btn\",\n      onClick: this.updateTeam.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Done \", React.createElement(\"img\", {\n      src: check,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"modalSearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Team name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.team_name,\n      onChange: e => {\n        this.setState({\n          team_name: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"modalList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Members\"), team.persons.length !== 0 ? React.createElement(\"ul\", {\n      className: \"members\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, team.persons.map((person, i) => {\n      return React.createElement(\"li\", {\n        key: person.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, this.state.dev_delete === true && this.state.dev_data.id === person.id ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \" Do you really want to delete person \", this.state.dev_data.name, \"? \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), \" Process cannot be undone!\"), React.createElement(\"div\", {\n        className: \"delete-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn black-btn\",\n        onClick: this.deletePerson.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \" confirm \"), React.createElement(\"button\", {\n        className: \"btn transparent-black-btn\",\n        onClick: () => {\n          this.setState({\n            dev_delete: false,\n            dev_data: null\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \" cancel \"))) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, person.name), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"email@email.com\"), React.createElement(Col, {\n        sm: \"5\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Accepted\"), \" \"), React.createElement(\"li\", {\n        onClick: () => {\n          this.toggleDevEdit(person);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: () => {\n          this.setState({\n            dev_delete: true,\n            dev_data: person\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }))))));\n    })) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"No members yet\")), React.createElement(\"div\", {\n      className: \"underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"addModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.state.dev_add === true && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Albert\",\n      value: this.state.dev_firstname,\n      onChange: e => {\n        this.setState({\n          dev_firstname: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Einstein\",\n      value: this.state.dev_lastname,\n      onChange: e => {\n        this.setState({\n          dev_lastname: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"relativitytheory@email.com\",\n      value: this.state.dev_email,\n      onChange: e => {\n        this.setState({\n          dev_email: e.target.dev_email\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.addPerson,\n      className: \"modalTransparent-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Add\"))), this.state.dev_add === false && this.state.dev_edit !== true && React.createElement(\"span\", {\n      onClick: () => this.setState({\n        dev_add: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \" \", React.createElement(\"img\", {\n      src: addCircle,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), \" Add member \"), this.state.dev_edit === true && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Albert\",\n      value: this.state.dev_firstname,\n      onChange: e => {\n        this.setState({\n          dev_firstname: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Einstein\",\n      value: this.state.dev_lastname,\n      onChange: e => {\n        this.setState({\n          dev_lastname: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"relativitytheory@email.com\",\n      value: this.state.dev_email,\n      onChange: e => {\n        this.setState({\n          dev_email: e.target.dev_email\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.updatePerson,\n      className: \"modalTransparent-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Update\"))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain\n  };\n}\n\nexport default connect(mapStateToProps)(EditTeam);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/_components/organisation/EditTeam.js"],"names":["React","Component","connect","Row","Col","EditTeam","constructor","props","updateTeam","team","team_name","state","fetch","process","env","REACT_APP_API","domain","id","method","headers","body","JSON","stringify","name","then","res","json","result","toggle","addPerson","dev_firstname","dev_lastname","persons","push","setState","dev_email","dev_add","toggleDevEdit","person","firstName","split","slice","join","lastName","dev_edit","dev_data","updatePerson","forEach","deletePerson","status","filter","dev_delete","catch","error","console","log","render","bind","check","e","target","value","length","map","i","addCircle","mapStateToProps","model"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col } from \"reactstrap\";\n\nimport check from \"../../_assets/icons/icons/check-icon.svg\";\nimport addCircle from \"../../_assets/icons/icons/add-icon-circle.svg\";\n\nclass EditTeam extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      team_name: props.team.name,\n      dev_add: false,\n      dev_edit: false,\n      dev_data: null,\n      dev_firstname: \"\",\n      dev_lastname: \"\",\n      dev_email: \"\",\n      dev_delete: false,\n      error: null\n    }\n  }\n\n  updateTeam = () => {\n    const {team} = this.props;\n    const {team_name} = this.state;\n    if (team_name !== \"\") {\n      fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/organisation/\" + team.id,\n        {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ name: team_name })\n        }\n      )\n      .then(res => res.json())\n      .then(result => {\n        this.props.toggle(true);\n      });\n    }else{\n      this.props.toggle();\n    }\n  };\n\n  addPerson = () => {\n    const {team} = this.props;\n    var name = this.state.dev_firstname + \" \" + this.state.dev_lastname;\n    fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/organisation/\" + team.id + \"/person\", { method: \"POST\" })\n    .then(res => res.json())\n    .then(result => {\n      fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/person/\" + result.id,\n        {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ name: name })\n        })\n        .then(res => res.json())\n        .then(result => {\n          team.persons.push(result);\n          this.setState({\n            dev_firstname: \"\",\n            dev_lastname: \"\",\n            dev_email: \"\",\n            dev_add: false\n          })\n        });\n    });\n  }\n\n  toggleDevEdit = (person) => {\n    var firstName = person.name.split(' ').slice(0, -1).join(' ');\n    var lastName = person.name.split(' ').slice(-1).join(' ');\n    this.setState({\n      dev_edit: true,\n      dev_firstname: firstName,\n      dev_lastname: lastName,\n      dev_data: person\n    })\n  }\n\n  updatePerson = () => {\n    const {team} = this.props;\n    const {dev_firstname, dev_lastname, dev_data} = this.state;\n    var name = dev_firstname + \" \" + dev_lastname;\n    fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/person/\" + dev_data.id,\n      {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: name })\n      }\n    )\n    .then(res => res.json())\n    .then(result => {\n      team.persons.forEach((person)=>{\n        if(person.id === dev_data.id){\n          person.name = result.name;\n        }\n      })\n      this.setState({\n        dev_edit: false,\n        dev_firstname: \"\",\n        dev_lastname: \"\",\n        dev_data: \"\"\n      })\n    });\n  }\n\n  deletePerson = () => {\n    const {team} = this.props;\n    const {dev_data} = this.state;\n    fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/person/\" + dev_data.id,\n      { method: \"DELETE\" }\n    )\n    .then(result => {\n      switch (result.status) {\n        case 200:\n          team.persons = team.persons.filter(function( person ) {\n            return person.id !== dev_data.id;\n          });\n          break;\n        default:\n      }\n      this.setState({ dev_delete: false, dev_data: null })\n    })\n    .catch(error => {\n      console.log(error);\n      this.setState({ dev_delete: false, dev_data: null })\n    });\n  };\n\n  render(){\n    const {team} = this.props;\n    return(\n      <div>\n        <div className=\"editTeam\">\n          <h3 className=\"d-inline-block modal-title\"> Edit {team.name} </h3>\n          <button className=\"btn grey-btn modal-top-btn\" onClick={this.updateTeam.bind(this)}>\n            Done <img src={check} alt=\"\" />\n          </button>\n          <div className=\"modalSearch\">\n            <h4>Team name</h4>\n            <input type=\"text\" value={this.state.team_name} onChange={(e)=>{this.setState({team_name: e.target.value})}} />\n          </div>\n          <div className=\"modalList\">\n            <h4>Members</h4>\n            {team.persons.length !== 0 ? (\n              <ul className=\"members\">\n                {team.persons.map((person, i)=>{\n                  return(\n                    <li key={person.id}>\n                      {this.state.dev_delete === true && this.state.dev_data.id === person.id ?(\n                        <React.Fragment>\n                          <p> Do you really want to delete person {this.state.dev_data.name}? <br /> Process cannot be undone!</p>\n                          <div className=\"delete-button\">\n                            <button className=\"btn black-btn\" onClick={this.deletePerson.bind(this)} > confirm </button>\n                            <button className=\"btn transparent-black-btn\" onClick={()=>{this.setState({ dev_delete: false, dev_data: null })}} > cancel </button>\n                          </div>\n                        </React.Fragment>\n\n                      ) : (\n                        <React.Fragment>\n                          <Col sm=\"4\">{person.name}</Col>\n                          <Col sm=\"3\">email@email.com</Col>\n                          <Col sm=\"5\" className=\"text-center\">\n                            <ul className=\"settings\">\n                              <li> <span className=\"status\">Accepted</span> </li>\n                              <li onClick={()=>{this.toggleDevEdit(person)}}>\n                                <i className=\"fas fa-pen\"></i>\n                              </li>\n                              <li onClick={()=>{this.setState({ dev_delete: true, dev_data: person })}}>\n                                <i className=\"fas fa-trash-alt\"></i>\n                              </li>\n                            </ul>\n                          </Col>\n                        </React.Fragment>\n                      )}\n                    </li>\n                  )\n                })}\n              </ul>\n            ):(\n              <h1>No members yet</h1>\n            )}\n          </div>\n          <div className=\"underline\"></div>\n          <div className=\"addModal\">\n            {this.state.dev_add === true && (\n              <Row>\n                <Col sm=\"3\">\n                  <input type=\"text\" placeholder=\"Albert\" value={this.state.dev_firstname}\n                  onChange={(e)=>{this.setState({dev_firstname: e.target.value})}} />\n                </Col>\n                <Col sm=\"3\">\n                  <input type=\"text\" placeholder=\"Einstein\" value={this.state.dev_lastname} onChange={(e)=>{this.setState({dev_lastname: e.target.value})}} />\n                </Col>\n                <Col sm=\"4\">\n                  <input type=\"text\" placeholder=\"relativitytheory@email.com\" value={this.state.dev_email} onChange={(e)=>{this.setState({dev_email: e.target.dev_email})}} />\n                </Col>\n                <Col sm=\"2\">\n                  <button onClick={this.addPerson} className=\"modalTransparent-btn\">Add</button>\n                </Col>\n              </Row>\n            )}\n            {this.state.dev_add === false && this.state.dev_edit !== true &&(\n              <span onClick={() => (this.setState({ dev_add: true }))}> <img src={addCircle} alt=\"\" /> Add member </span>\n            )}\n            {this.state.dev_edit === true && (\n              <Row>\n                <Col sm=\"3\">\n                  <input type=\"text\" placeholder=\"Albert\" value={this.state.dev_firstname}\n                  onChange={(e)=>{this.setState({dev_firstname: e.target.value})}} />\n                </Col>\n                <Col sm=\"3\">\n                  <input type=\"text\" placeholder=\"Einstein\" value={this.state.dev_lastname} onChange={(e)=>{this.setState({dev_lastname: e.target.value})}} />\n                </Col>\n                <Col sm=\"4\">\n                  <input type=\"text\" placeholder=\"relativitytheory@email.com\" value={this.state.dev_email} onChange={(e)=>{this.setState({dev_email: e.target.dev_email})}} />\n                </Col>\n                <Col sm=\"2\">\n                  <button onClick={this.updatePerson} className=\"modalTransparent-btn\">Update</button>\n                </Col>\n              </Row>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain\n  };\n}\n\nexport default connect( mapStateToProps )(EditTeam);\n"]},"metadata":{},"sourceType":"module"}