{"ast":null,"code":"const fetchScript = require('../../lib/fetch-script')();\n\nconst LOADER_SRC = 'https://rawgit.com/mrdoob/three.js/r86/examples/js/loaders/GLTFLoader.js';\n\nconst loadLoader = function () {\n  let promise;\n  return function () {\n    promise = promise || fetchScript(LOADER_SRC);\n    return promise;\n  };\n}();\n/**\n * Legacy loader for glTF 1.0 models.\n * Asynchronously loads THREE.GLTFLoader from rawgit.\n */\n\n\nmodule.exports = AFRAME.registerComponent('gltf-model-legacy', {\n  schema: {\n    type: 'model'\n  },\n  init: function () {\n    this.model = null;\n    this.loader = null;\n    this.loaderPromise = loadLoader().then(() => {\n      this.loader = new THREE.GLTFLoader();\n      this.loader.setCrossOrigin('Anonymous');\n    });\n  },\n  update: function () {\n    const self = this;\n    const el = this.el;\n    const src = this.data;\n\n    if (!src) {\n      return;\n    }\n\n    this.remove();\n    this.loaderPromise.then(() => {\n      this.loader.load(src, function gltfLoaded(gltfModel) {\n        self.model = gltfModel.scene;\n        self.model.animations = gltfModel.animations;\n        el.setObject3D('mesh', self.model);\n        el.emit('model-loaded', {\n          format: 'gltf',\n          model: self.model\n        });\n      });\n    });\n  },\n  remove: function () {\n    if (!this.model) {\n      return;\n    }\n\n    this.el.removeObject3D('mesh');\n  }\n});","map":null,"metadata":{},"sourceType":"script"}