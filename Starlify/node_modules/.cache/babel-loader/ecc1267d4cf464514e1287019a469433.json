{"ast":null,"code":"import _objectSpread from \"/Users/kirancorreya/Site/Starlify/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/SystemDetails.js\";\nimport React, { Component } from \"react\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport { fetchSystemDetils } from \"../../../store/system/systemActions\";\nimport { fetchModel } from '../../../store/model/modelActions';\nimport { connect } from \"react-redux\";\nimport { Collapse, Modal, ModalBody, Tooltip, Input, Label, Button } from \"reactstrap\";\n\nclass SystemDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = target => {\n      this.setState(_objectSpread({}, this.state, {\n        [target]: !this.state[target]\n      }));\n    };\n\n    this.state = {\n      collapse: true,\n      systemCollapseId: false,\n      subSystemCollapseId: false,\n      modal: false,\n      editSubSystem: false,\n      details: {},\n      formData: {\n        name: \"\",\n        description: \"\",\n        supportLevel: \"\"\n      }\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateSystem = this.updateSystem.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addUiToggle = this.addUiToggle.bind(this);\n  } //manage add more system/flow text box to ui\n\n\n  addUiToggle(event, type) {\n    if (type === 'system') {\n      this.setState(state => ({\n        systemAdd: !state.systemAdd\n      }));\n    } else if (type === 'service') {\n      this.setState(state => ({\n        serviceAdd: !state.serviceAdd\n      }));\n    } else if (type === 'reference') {\n      this.setState(state => ({\n        referenceAdd: !state.referenceAdd\n      }));\n    }\n  }\n\n  editfield(key, title, type) {\n    if (type == 'subsystem') {\n      this.setState({\n        ['subsystem-' + key]: true\n      });\n      this.setState({\n        ['subsystem-value-' + key]: title\n      });\n    } else if (type == 'service') {\n      this.setState({\n        ['service-' + key]: true\n      });\n      this.setState({\n        ['service-value-' + key]: title\n      });\n    } else if (type == 'reference') {\n      this.setState({\n        ['reference-' + key]: true\n      });\n      this.setState({\n        ['reference-value-' + key]: title\n      });\n    }\n  }\n\n  editFieldChange(key, type, event) {\n    if (type == 'subsystem') {\n      this.setState({\n        ['subsystem-' + key]: true\n      });\n      this.setState({\n        ['subsystem-value-' + key]: event.target.value\n      });\n    } else if (type == 'service') {\n      this.setState({\n        ['service-' + key]: true\n      });\n      this.setState({\n        ['service-value-' + key]: event.target.value\n      });\n    } else if (type == 'reference') {\n      this.setState({\n        ['reference-' + key]: true\n      });\n      this.setState({\n        ['reference-value-' + key]: event.target.value\n      });\n    }\n  }\n\n  updateEntity(key, uri, type) {\n    var value = '';\n    var id = '';\n\n    if (type === 'system') {\n      let splitArray = uri.split(\"/\");\n      if (splitArray.length > 0) id = splitArray[4];\n      this.setState({\n        ['subsystem-' + key]: false\n      });\n      value = this.state[\"subsystem-value-\".concat(key)];\n    } else if (type == 'service') {\n      this.setState({\n        ['service-' + key]: false\n      });\n      id = uri;\n      value = this.state[\"service-value-\".concat(key)];\n    } else if (type == 'reference') {\n      id = uri;\n      this.setState({\n        ['reference-' + key]: false\n      });\n      value = this.state[\"reference-value-\".concat(key)];\n    }\n\n    fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/\").concat(type, \"/\") + id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: value\n      })\n    }).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n    });\n  }\n\n  getAllSystems() {\n    return fetch(process.env.REACT_APP_API + '/hypermedia/network/' + this.props.activeModelId + '/allsystems').then(res => res.json()).then(response => {\n      this.setState({\n        'systems': response\n      });\n    }).catch(error => console.log(error));\n  } //create Sub System\n\n\n  createSubSystem(event) {\n    let value = event.target.value;\n\n    if (event.key === 'Enter') {\n      event.target.value = '';\n      fetch(process.env.REACT_APP_API + \"/hypermedia/network/\".concat(this.props.activeModelId, \"/system/\").concat(this.props.activeSystem, \"/system\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"/hypermedia/network/\".concat(this.props.activeModelId, \"/system/\") + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: value\n          })\n        }).then(response => {\n          this.props.getSystems(this.props.activeModelId);\n          this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n        });\n      });\n    }\n  } //create service\n\n\n  createService(event) {\n    let value = event.target.value;\n\n    if (event.key === 'Enter') {\n      event.target.value = '';\n      fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/system/\").concat(this.props.activeSystem, \"/service\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/service/\") + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: value\n          })\n        }).then(response => {\n          this.props.getSystems(this.props.activeModelId);\n          this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n        });\n      });\n    }\n  } //create reference\n\n\n  createReference(event) {\n    let value = event.target.value;\n\n    if ((event.key === 'Enter' || event.type === 'blur') && value && this.state.serviceId) {\n      event.target.value = '';\n      fetch(process.env.REACT_APP_API + \"\".concat(this.props.activeModel, \"/system/\").concat(this.props.activeSystem, \"/reference/\").concat(this.state.serviceId), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: value\n        })\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"\".concat(this.props.activeModel, \"/reference/\") + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: value\n          })\n        }).then(response => {\n          this.props.getSystems(this.props.activeModelId);\n          this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n          this.getAllSystems();\n        });\n      });\n    }\n  } //Delete sub system\n\n\n  getSubSystemId(Uri, type) {\n    let splitArray = Uri.split(\"/\");\n\n    if (splitArray.length > 0) {\n      this.deleteEntity(splitArray[4]);\n    }\n  } //Delete entity\n\n\n  deleteEntity(id) {\n    return fetch(process.env.REACT_APP_API + \"/model/\".concat(this.props.activeModelId, \"/modeled/\").concat(id), {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      this.props.getSystems(this.props.activeModelId);\n      this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n    });\n  } //get systems and services list for adding new reference\n\n\n  getSystemService(event) {\n    let parents = this.state.systems;\n    let parent = parents.filter(parent => parent.name === event.target.value);\n    if (parent) this.setState({\n      servicesList: parent[0].services\n    });\n  }\n\n  handleChange(event) {\n    const formData = this.state.formData;\n    formData[event.target.name] = event.target.value;\n    this.setState({\n      formData\n    });\n  }\n\n  serviceHandleChange(event) {\n    this.setState({\n      serviceId: event.target.value\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.activeSystem !== nextProps.activeSystem) this.props.getSystemDetails(this.props.activeModel, nextProps.activeSystem);\n  }\n\n  componentWillMount() {\n    this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n    this.getAllSystems();\n  }\n\n  updateSystem() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n    fetch(process.env.REACT_APP_API + \"/hypermedia/network/\".concat(this.props.activeModelId, \"/system/\") + this.props.systemDetails.id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state.formData)\n    }).then(response => this.props.getSystemDetails(this.props.activeModel, this.props.systemDetails.id)).catch(error => console.log(error));\n  }\n\n  toggleDescription() {\n    this.setState(state => ({\n      collapse: !state.collapse\n    }));\n  } //Closes the system details section\n\n\n  close(menu, type) {\n    this.props.close(menu, type);\n  } //control right click modal\n\n\n  modalToggle(e, data) {\n    this.setState({\n      formData: {\n        name: this.props.systemDetails.name,\n        description: this.props.systemDetails.description\n      }\n    });\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    if (data) {\n      this.setState({\n        details: {\n          description: data.description\n        }\n      });\n    }\n  }\n\n  render() {\n    var _this$state = this.state,\n        formData = _this$state.formData,\n        systems = _this$state.systems;\n    return React.createElement(\"div\", {\n      className: \"org_browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"system-detail-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      className: \"text-input\",\n      value: formData.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    })))), React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"p\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"description\",\n      className: \"text-input\",\n      value: formData.description || '',\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"Sub systems\"), !this.state.systemAdd && React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon\",\n      id: \"system\",\n      onClick: e => {\n        this.addUiToggle(e, 'system');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), this.state.systemAdd && React.createElement(\"div\", {\n      className: \"extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"system\",\n      onKeyDown: this.createSubSystem.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => {\n        this.addUiToggle(e, 'system');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-times\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }))), this.props.systemDetails.subsystemLinks ? this.props.systemDetails.subsystemLinks.map((subsystem, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"systemCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }), !this.state[\"subsystem-\".concat(i)] && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, subsystem.title)), this.state[\"subsystem-\".concat(i)] && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"system\",\n        onChange: this.editFieldChange.bind(this, i, 'subsystem'),\n        value: this.state[\"subsystem-value-\".concat(i)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        onClick: this.updateEntity.bind(this, i, subsystem.uri, 'system'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"far fa-edit edit-icon\",\n        onClick: this.editfield.bind(this, i, subsystem.title, 'subsystem'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fas fa-trash\",\n        onClick: this.getSubSystemId.bind(this, subsystem.uri),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }))));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, \"Services \"), !this.state.serviceAdd && React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon\",\n      id: \"system\",\n      onClick: e => {\n        this.addUiToggle(e, 'service');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }), this.state.serviceAdd && React.createElement(\"div\", {\n      className: \"extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"system\",\n      onKeyDown: this.createService.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => {\n        this.addUiToggle(e, 'service');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-times\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }))), this.props.systemDetails.services ? this.props.systemDetails.services.map((service, i) => {\n      return React.createElement(\"div\", {\n        key: service.id,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, !this.state[\"service-\".concat(i)] && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, service.name)), this.state[\"service-\".concat(i)] && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"service\",\n        onChange: this.editFieldChange.bind(this, i, 'service'),\n        value: this.state[\"service-value-\".concat(i)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        onClick: this.updateEntity.bind(this, i, service.id, 'service'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"far fa-edit edit-icon\",\n        onClick: this.editfield.bind(this, i, service.name, 'service'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fas fa-trash\",\n        onClick: this.deleteEntity.bind(this, service.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }))));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, \"References\"), !this.state.referenceAdd && React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon\",\n      id: \"system\",\n      onClick: e => {\n        this.addUiToggle(e, 'reference');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }), this.state.referenceAdd && React.createElement(\"div\", {\n      className: \"extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-center m-b-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, \"Create new reference\"), React.createElement(\"div\", {\n      className: \"row formGroupWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      onChange: this.getSystemService.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, \"Systems\"), this.state.systems ? systems.map((system, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: system.name,\n        id: system.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, system.name);\n    }) : '')), React.createElement(\"div\", {\n      className: \"form-group col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"exampleSelect\",\n      onChange: this.serviceHandleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, \"Service\"), this.state.servicesList ? this.state.servicesList.map((item, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, item.name);\n    }) : '')), React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"create-ref\",\n      type: \"text\",\n      name: \"text\",\n      id: \"example\",\n      placeholder: \"Add New Reference\",\n      onBlur: this.createReference.bind(this),\n      onKeyDown: this.createReference.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    })))), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => {\n        this.addUiToggle(e, 'reference');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-times\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }))), this.props.systemDetails.references ? this.props.systemDetails.references.map((reference, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, !this.state[\"reference-\".concat(i)] && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, reference.name)), this.state[\"reference-\".concat(i)] && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"reference\",\n        onChange: this.editFieldChange.bind(this, i, 'reference'),\n        value: this.state[\"reference-value-\".concat(i)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        onClick: this.updateEntity.bind(this, i, reference.id, 'reference'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"far fa-edit edit-icon\",\n        onClick: this.editfield.bind(this, i, reference.name, 'reference'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fas fa-trash\",\n        onClick: this.deleteEntity.bind(this, reference.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }))));\n    }) : \"\")), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.updateSystem,\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, \"Update\"))), React.createElement(\"h3\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, \"System Details\", React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon browser_close\",\n      onClick: () => this.close(\"systemDetail\", \"menuDetail\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"far fa-edit\",\n      onClick: () => this.modalToggle(this, this.props.systemDetails),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      autoHide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"system-detail-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }, this.props.systemDetails.name, React.createElement(Tooltip, {\n      className: \"tooltip-custom\",\n      placement: \"top\",\n      toggle: () => this.toggle(\"system-detail-name\"),\n      isOpen: this.state[\"system-detail-name\"],\n      autohide: false,\n      target: \"system-detail-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    }, this.props.systemDetails.id)), React.createElement(\"i\", {\n      className: \"fas fa-chevron-down system-down-icon\",\n      onClick: this.toggleDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-md-6 m-b-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      isOpen: this.state.collapse,\n      className: \"systemDetailsDisc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, this.props.systemDetails.description ? this.props.systemDetails.description : \"No Description\"))), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }, \"Sub systems\"), this.props.systemDetails.subsystemLinks ? this.props.systemDetails.subsystemLinks.map((subsystem, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"systemCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628\n        },\n        __self: this\n      }, subsystem.title))));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }, \"Services\"), this.props.systemDetails.services ? this.props.systemDetails.services.map((services, i) => {\n      return React.createElement(\"div\", {\n        key: services.id,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"serviceCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"service-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        },\n        __self: this\n      }, services.name, React.createElement(Tooltip, {\n        className: \"tooltip-custom\",\n        placement: \"top\",\n        toggle: () => this.toggle(\"service-\".concat(i)),\n        isOpen: this.state[\"service-\".concat(i)],\n        autohide: false,\n        target: \"service-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648\n        },\n        __self: this\n      }, services.id)))));\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"ob-block row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668\n      },\n      __self: this\n    }, \"References\"), this.props.systemDetails.references ? this.props.systemDetails.references.map((references, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"d-flex w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"referenceArrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }, \"\\u2192\"), React.createElement(\"span\", {\n        id: \"reference-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677\n        },\n        __self: this\n      }, references.name, \" \", React.createElement(Tooltip, {\n        placement: \"top\",\n        className: \"tooltip-custom\",\n        toggle: () => this.toggle(\"reference-\".concat(i)),\n        isOpen: this.state[\"reference-\".concat(i)],\n        autohide: false,\n        target: \"reference-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677\n        },\n        __self: this\n      }, references.id)))));\n    }) : \"\"))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getSystemDetails: (modelId, systemId) => {\n      dispatch(fetchSystemDetils(modelId, systemId));\n    },\n    getSystems: modelId => {\n      dispatch(fetchModel(modelId));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeModel: state.model.modelUri,\n    activeModelId: state.model.modelId,\n    systemDetails: state.system.systemDetails,\n    type: state.system.type\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemDetails);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/SystemDetails.js"],"names":["React","Component","VerticalScrollbars","fetchSystemDetils","fetchModel","connect","Collapse","Modal","ModalBody","Tooltip","Input","Label","Button","SystemDetails","constructor","props","toggle","target","setState","state","collapse","systemCollapseId","subSystemCollapseId","modal","editSubSystem","details","formData","name","description","supportLevel","close","bind","toggleDescription","modalToggle","updateSystem","handleChange","addUiToggle","event","type","systemAdd","serviceAdd","referenceAdd","editfield","key","title","editFieldChange","value","updateEntity","uri","id","splitArray","split","length","fetch","process","env","REACT_APP_API","activeModelId","method","headers","body","JSON","stringify","then","response","getSystems","getSystemDetails","activeModel","activeSystem","getAllSystems","res","json","catch","error","console","log","createSubSystem","responseJson","createService","createReference","serviceId","getSubSystemId","Uri","deleteEntity","getSystemService","parents","systems","parent","filter","servicesList","services","serviceHandleChange","componentWillReceiveProps","nextProps","componentWillMount","prevState","systemDetails","menu","e","data","render","subsystemLinks","map","subsystem","i","service","system","item","references","reference","mapDispatchToProps","dispatch","modelId","systemId","mapStateToProps","model","modelUri"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,MAA+B,gDAA/B;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8CC,KAA9C,EAAqDC,KAArD,EAA4DC,MAA5D,QAA0E,YAA1E;;AAGA,MAAMC,aAAN,SAA4BZ,SAA5B,CAAsC;AACpCa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkPnBC,MAlPmB,GAkPVC,MAAM,IAAI;AACjB,WAAKC,QAAL,mBACK,KAAKC,KADV;AAEE,SAACF,MAAD,GAAU,CAAC,KAAKE,KAAL,CAAWF,MAAX;AAFb;AAID,KAvPkB;;AAEjB,SAAKE,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,gBAAgB,EAAE,KAFP;AAGXC,MAAAA,mBAAmB,EAAE,KAHV;AAIXC,MAAAA,KAAK,EAAE,KAJI;AAKXC,MAAAA,aAAa,EAAG,KALL;AAMXC,MAAAA,OAAO,EAAE,EANE;AAOXC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE,EADE;AAERC,QAAAA,WAAW,EAAE,EAFL;AAGRC,QAAAA,YAAY,EAAE;AAHN;AAPC,KAAb;AAaA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKf,MAAL,GAAc,KAAKA,MAAL,CAAYe,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKK,WAAL,GAAmB,KAAKA,WAAL,CAAiBL,IAAjB,CAAsB,IAAtB,CAAnB;AACD,GAvBmC,CAyBpC;;;AACAK,EAAAA,WAAW,CAACC,KAAD,EAAQC,IAAR,EAAc;AACvB,QAAIA,IAAI,KAAK,QAAb,EAAuB;AACnB,WAAKpB,QAAL,CAAcC,KAAK,KAAK;AAAEoB,QAAAA,SAAS,EAAE,CAACpB,KAAK,CAACoB;AAApB,OAAL,CAAnB;AACH,KAFD,MAEO,IAAID,IAAI,KAAK,SAAb,EAAwB;AAC7B,WAAKpB,QAAL,CAAcC,KAAK,KAAK;AAAEqB,QAAAA,UAAU,EAAE,CAACrB,KAAK,CAACqB;AAArB,OAAL,CAAnB;AACD,KAFM,MAGF,IAAIF,IAAI,KAAK,WAAb,EAA0B;AAC7B,WAAKpB,QAAL,CAAcC,KAAK,KAAK;AAAEsB,QAAAA,YAAY,EAAE,CAACtB,KAAK,CAACsB;AAAvB,OAAL,CAAnB;AACD;AACJ;;AAEDC,EAAAA,SAAS,CAACC,GAAD,EAAMC,KAAN,EAAaN,IAAb,EAAkB;AACzB,QAAGA,IAAI,IAAI,WAAX,EAAwB;AACtB,WAAKpB,QAAL,CAAc;AAAE,SAAC,eAAcyB,GAAf,GAAqB;AAAvB,OAAd;AACA,WAAKzB,QAAL,CAAc;AAAE,SAAC,qBAAoByB,GAArB,GAA2BC;AAA7B,OAAd;AACD,KAHD,MAGO,IAAGN,IAAI,IAAI,SAAX,EAAsB;AAC3B,WAAKpB,QAAL,CAAc;AAAE,SAAC,aAAYyB,GAAb,GAAmB;AAArB,OAAd;AACA,WAAKzB,QAAL,CAAc;AAAE,SAAC,mBAAkByB,GAAnB,GAAyBC;AAA3B,OAAd;AACD,KAHM,MAGA,IAAGN,IAAI,IAAI,WAAX,EAAwB;AAC7B,WAAKpB,QAAL,CAAc;AAAE,SAAC,eAAcyB,GAAf,GAAqB;AAAvB,OAAd;AACA,WAAKzB,QAAL,CAAc;AAAE,SAAC,qBAAoByB,GAArB,GAA2BC;AAA7B,OAAd;AACD;AAEF;;AAEDC,EAAAA,eAAe,CAACF,GAAD,EAAML,IAAN,EAAYD,KAAZ,EAAkB;AAC/B,QAAGC,IAAI,IAAI,WAAX,EAAwB;AACtB,WAAKpB,QAAL,CAAc;AAAE,SAAC,eAAcyB,GAAf,GAAqB;AAAvB,OAAd;AACA,WAAKzB,QAAL,CAAc;AAAE,SAAC,qBAAoByB,GAArB,GAA2BN,KAAK,CAACpB,MAAN,CAAa6B;AAA1C,OAAd;AACD,KAHD,MAGO,IAAGR,IAAI,IAAI,SAAX,EAAsB;AAC3B,WAAKpB,QAAL,CAAc;AAAE,SAAC,aAAYyB,GAAb,GAAmB;AAArB,OAAd;AACA,WAAKzB,QAAL,CAAc;AAAE,SAAC,mBAAkByB,GAAnB,GAAyBN,KAAK,CAACpB,MAAN,CAAa6B;AAAxC,OAAd;AACD,KAHM,MAGA,IAAGR,IAAI,IAAI,WAAX,EAAwB;AAC7B,WAAKpB,QAAL,CAAc;AAAE,SAAC,eAAcyB,GAAf,GAAqB;AAAvB,OAAd;AACA,WAAKzB,QAAL,CAAc;AAAE,SAAC,qBAAoByB,GAArB,GAA2BN,KAAK,CAACpB,MAAN,CAAa6B;AAA1C,OAAd;AACD;AACF;;AAEDC,EAAAA,YAAY,CAACJ,GAAD,EAAMK,GAAN,EAAWV,IAAX,EAAgB;AAC1B,QAAIQ,KAAK,GAAG,EAAZ;AACA,QAAIG,EAAE,GAAG,EAAT;;AACA,QAAGX,IAAI,KAAK,QAAZ,EAAqB;AACnB,UAAIY,UAAU,GAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAjB;AACA,UAAGD,UAAU,CAACE,MAAX,GAAoB,CAAvB,EACEH,EAAE,GAAGC,UAAU,CAAC,CAAD,CAAf;AACF,WAAKhC,QAAL,CAAc;AAAE,SAAC,eAAcyB,GAAf,GAAqB;AAAvB,OAAd;AACAG,MAAAA,KAAK,GAAG,KAAK3B,KAAL,2BAA8BwB,GAA9B,EAAR;AACD,KAND,MAMO,IAAGL,IAAI,IAAI,SAAX,EAAsB;AAC3B,WAAKpB,QAAL,CAAc;AAAE,SAAC,aAAYyB,GAAb,GAAmB;AAArB,OAAd;AACAM,MAAAA,EAAE,GAAGD,GAAL;AACAF,MAAAA,KAAK,GAAG,KAAK3B,KAAL,yBAA4BwB,GAA5B,EAAR;AACD,KAJM,MAIA,IAAGL,IAAI,IAAI,WAAX,EAAwB;AAC7BW,MAAAA,EAAE,GAAGD,GAAL;AACA,WAAK9B,QAAL,CAAc;AAAE,SAAC,eAAcyB,GAAf,GAAqB;AAAvB,OAAd;AACAG,MAAAA,KAAK,GAAG,KAAK3B,KAAL,2BAA8BwB,GAA9B,EAAR;AACD;;AAMSU,IAAAA,KAAK,CACDC,OAAO,CAACC,GAAR,CAAYC,aAAZ,oBAAsC,KAAKzC,KAAL,CAAW0C,aAAjD,cAAkEnB,IAAlE,SAA4EW,EAD3E,EAED;AACIS,MAAAA,MAAM,EAAE,OADZ;AAEIC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFb;AAKIC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEnC,QAAAA,IAAI,EAAEmB;AAAR,OAAf;AALV,KAFC,CAAL,CAUKiB,IAVL,CAUUC,QAAQ,IAAI;AAChB,WAAKjD,KAAL,CAAWkD,UAAX,CAAsB,KAAKlD,KAAL,CAAW0C,aAAjC;AACE,WAAK1C,KAAL,CAAWmD,gBAAX,CAA4B,KAAKnD,KAAL,CAAWoD,WAAvC,EAAmD,KAAKpD,KAAL,CAAWqD,YAA9D;AACH,KAbL;AAgBX;;AAEDC,EAAAA,aAAa,GAAG;AACd,WAAOhB,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,aAAZ,GAA4B,sBAA5B,GAAqD,KAAKzC,KAAL,CAAW0C,aAAhE,GAAgF,aAAjF,CAAL,CACJM,IADI,CACCO,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,EAEJR,IAFI,CAECC,QAAQ,IAAI;AAChB,WAAK9C,QAAL,CAAc;AAAE,mBAAW8C;AAAb,OAAd;AACD,KAJI,EAKJQ,KALI,CAKEC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CALX,CAAP;AAMD,GAhHqC,CAkHtC;;;AACAG,EAAAA,eAAe,CAACvC,KAAD,EAAQ;AACrB,QAAIS,KAAK,GAAGT,KAAK,CAACpB,MAAN,CAAa6B,KAAzB;;AACA,QAAIT,KAAK,CAACM,GAAN,KAAc,OAAlB,EAA2B;AACvBN,MAAAA,KAAK,CAACpB,MAAN,CAAa6B,KAAb,GAAqB,EAArB;AACAO,MAAAA,KAAK,CACDC,OAAO,CAACC,GAAR,CAAYC,aAAZ,iCAAmD,KAAKzC,KAAL,CAAW0C,aAA9D,qBAAsF,KAAK1C,KAAL,CAAWqD,YAAjG,YADC,EAED;AAAEV,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAA3B,OAFC,CAAL,CAIKI,IAJL,CAIUC,QAAQ,IAAIA,QAAQ,CAACO,IAAT,EAJtB,EAKKR,IALL,CAKUc,YAAY,IAAI;AAClB,eAAOxB,KAAK,CACRC,OAAO,CAACC,GAAR,CAAYC,aAAZ,iCAAmD,KAAKzC,KAAL,CAAW0C,aAA9D,gBAAwFoB,YAAY,CAAC5B,EAD7F,EAER;AAAES,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAA5B;AAAoEC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEnC,YAAAA,IAAI,EAAEmB;AAAR,WAAf;AAA1E,SAFQ,CAAL,CAIFiB,IAJE,CAIGC,QAAQ,IAAI;AAChB,eAAKjD,KAAL,CAAWkD,UAAX,CAAsB,KAAKlD,KAAL,CAAW0C,aAAjC;AACA,eAAK1C,KAAL,CAAWmD,gBAAX,CAA4B,KAAKnD,KAAL,CAAWoD,WAAvC,EAAmD,KAAKpD,KAAL,CAAWqD,YAA9D;AACD,SAPE,CAAP;AASH,OAfL;AAgBH;AACF,GAxIqC,CA0ItC;;;AACAU,EAAAA,aAAa,CAACzC,KAAD,EAAQ;AACnB,QAAIS,KAAK,GAAGT,KAAK,CAACpB,MAAN,CAAa6B,KAAzB;;AACA,QAAIT,KAAK,CAACM,GAAN,KAAc,OAAlB,EAA2B;AACvBN,MAAAA,KAAK,CAACpB,MAAN,CAAa6B,KAAb,GAAqB,EAArB;AACAO,MAAAA,KAAK,CACDC,OAAO,CAACC,GAAR,CAAYC,aAAZ,oBAAsC,KAAKzC,KAAL,CAAW0C,aAAjD,qBAAyE,KAAK1C,KAAL,CAAWqD,YAApF,aADC,EAED;AAAEV,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAA3B,OAFC,CAAL,CAIKI,IAJL,CAIUC,QAAQ,IAAIA,QAAQ,CAACO,IAAT,EAJtB,EAKKR,IALL,CAKUc,YAAY,IAAI;AAClB,eAAOxB,KAAK,CACRC,OAAO,CAACC,GAAR,CAAYC,aAAZ,oBAAsC,KAAKzC,KAAL,CAAW0C,aAAjD,iBAA4EoB,YAAY,CAAC5B,EADjF,EAER;AAAES,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAA5B;AAAoEC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEnC,YAAAA,IAAI,EAAEmB;AAAR,WAAf;AAA1E,SAFQ,CAAL,CAIFiB,IAJE,CAIGC,QAAQ,IAAI;AAChB,eAAKjD,KAAL,CAAWkD,UAAX,CAAsB,KAAKlD,KAAL,CAAW0C,aAAjC;AACA,eAAK1C,KAAL,CAAWmD,gBAAX,CAA4B,KAAKnD,KAAL,CAAWoD,WAAvC,EAAmD,KAAKpD,KAAL,CAAWqD,YAA9D;AACD,SAPE,CAAP;AASH,OAfL;AAgBH;AACF,GAhKqC,CAkKtC;;;AACAW,EAAAA,eAAe,CAAC1C,KAAD,EAAQ;AACrB,QAAIS,KAAK,GAAGT,KAAK,CAACpB,MAAN,CAAa6B,KAAzB;;AACA,QAAI,CAACT,KAAK,CAACM,GAAN,KAAc,OAAd,IAAyBN,KAAK,CAACC,IAAN,KAAe,MAAzC,KAAoDQ,KAApD,IAA6D,KAAK3B,KAAL,CAAW6D,SAA5E,EAAuF;AACnF3C,MAAAA,KAAK,CAACpB,MAAN,CAAa6B,KAAb,GAAqB,EAArB;AACAO,MAAAA,KAAK,CACDC,OAAO,CAACC,GAAR,CAAYC,aAAZ,aAA+B,KAAKzC,KAAL,CAAWoD,WAA1C,qBAAgE,KAAKpD,KAAL,CAAWqD,YAA3E,wBAAqG,KAAKjD,KAAL,CAAW6D,SAAhH,CADC,EAED;AACItB,QAAAA,MAAM,EAAE,MADZ;AAEIC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFb;AAKIC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEnC,UAAAA,IAAI,EAAEmB;AAAR,SAAf;AALV,OAFC,CAAL,CAUKiB,IAVL,CAUUC,QAAQ,IAAIA,QAAQ,CAACO,IAAT,EAVtB,EAWKR,IAXL,CAWUc,YAAY,IAAI;AAClB,eAAOxB,KAAK,CACRC,OAAO,CAACC,GAAR,CAAYC,aAAZ,aAA+B,KAAKzC,KAAL,CAAWoD,WAA1C,mBAAqEU,YAAY,CAAC5B,EAD1E,EAGR;AACIS,UAAAA,MAAM,EAAE,OADZ;AAEIC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX,WAFb;AAKIC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEnC,YAAAA,IAAI,EAAEmB;AAAR,WAAf;AALV,SAHQ,CAAL,CAWFiB,IAXE,CAWGC,QAAQ,IAAI;AACd,eAAKjD,KAAL,CAAWkD,UAAX,CAAsB,KAAKlD,KAAL,CAAW0C,aAAjC;AACA,eAAK1C,KAAL,CAAWmD,gBAAX,CAA4B,KAAKnD,KAAL,CAAWoD,WAAvC,EAAoD,KAAKpD,KAAL,CAAWqD,YAA/D;AACA,eAAKC,aAAL;AACH,SAfE,CAAP;AAiBH,OA7BL;AA8BH;AACF,GAtMqC,CAwMtC;;;AACAY,EAAAA,cAAc,CAACC,GAAD,EAAM5C,IAAN,EAAY;AACxB,QAAIY,UAAU,GAAGgC,GAAG,CAAC/B,KAAJ,CAAU,GAAV,CAAjB;;AACA,QAAGD,UAAU,CAACE,MAAX,GAAoB,CAAvB,EAA0B;AACxB,WAAK+B,YAAL,CAAkBjC,UAAU,CAAC,CAAD,CAA5B;AACD;AACF,GA9MqC,CAgNtC;;;AACAiC,EAAAA,YAAY,CAAClC,EAAD,EAAK;AACf,WAAOI,KAAK,CACVC,OAAO,CAACC,GAAR,CAAYC,aAAZ,oBAAsC,KAAKzC,KAAL,CAAW0C,aAAjD,sBAA0ER,EAA1E,CADU,EAEV;AACIS,MAAAA,MAAM,EAAE,QADZ;AAEIC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFb,KAFU,CAAL,CASJI,IATI,CASCC,QAAQ,IAAI;AACd,WAAKjD,KAAL,CAAWkD,UAAX,CAAsB,KAAKlD,KAAL,CAAW0C,aAAjC;AACA,WAAK1C,KAAL,CAAWmD,gBAAX,CAA4B,KAAKnD,KAAL,CAAWoD,WAAvC,EAAoD,KAAKpD,KAAL,CAAWqD,YAA/D;AACH,KAZI,CAAP;AAaD,GA/NqC,CAgOtC;;;AACAgB,EAAAA,gBAAgB,CAAC/C,KAAD,EAAQ;AACtB,QAAIgD,OAAO,GAAG,KAAKlE,KAAL,CAAWmE,OAAzB;AACA,QAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,CAAeD,MAAM,IAAIA,MAAM,CAAC5D,IAAP,KAAgBU,KAAK,CAACpB,MAAN,CAAa6B,KAAtD,CAAb;AACA,QAAIyC,MAAJ,EACI,KAAKrE,QAAL,CAAc;AAAEuE,MAAAA,YAAY,EAAEF,MAAM,CAAC,CAAD,CAAN,CAAUG;AAA1B,KAAd;AACL;;AACCvD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAAA,UACVX,QADU,GACG,KAAKP,KADR,CACVO,QADU;AAElBA,IAAAA,QAAQ,CAACW,KAAK,CAACpB,MAAN,CAAaU,IAAd,CAAR,GAA8BU,KAAK,CAACpB,MAAN,CAAa6B,KAA3C;AACA,SAAK5B,QAAL,CAAc;AACZQ,MAAAA;AADY,KAAd;AAGD;;AAEDiE,EAAAA,mBAAmB,CAACtD,KAAD,EAAQ;AACzB,SAAKnB,QAAL,CAAc;AAAE8D,MAAAA,SAAS,EAAE3C,KAAK,CAACpB,MAAN,CAAa6B;AAA1B,KAAd;AACH;;AASC8C,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAI,KAAK9E,KAAL,CAAWqD,YAAX,KAA4ByB,SAAS,CAACzB,YAA1C,EACE,KAAKrD,KAAL,CAAWmD,gBAAX,CAA4B,KAAKnD,KAAL,CAAWoD,WAAvC,EAAoD0B,SAAS,CAACzB,YAA9D;AACH;;AAED0B,EAAAA,kBAAkB,GAAG;AACnB,SAAK/E,KAAL,CAAWmD,gBAAX,CAA4B,KAAKnD,KAAL,CAAWoD,WAAvC,EAAoD,KAAKpD,KAAL,CAAWqD,YAA/D;AACA,SAAKC,aAAL;AACD;;AAEDnC,EAAAA,YAAY,GAAG;AACX,SAAKhB,QAAL,CAAc6E,SAAS,KAAK;AAC1BxE,MAAAA,KAAK,EAAE,CAACwE,SAAS,CAACxE;AADQ,KAAL,CAAvB;AAGA8B,IAAAA,KAAK,CACHC,OAAO,CAACC,GAAR,CAAYC,aAAZ,iCAAmD,KAAKzC,KAAL,CAAW0C,aAA9D,gBAAwF,KAAK1C,KAAL,CAAWiF,aAAX,CAAyB/C,EAD9G,EAEH;AAAES,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAA5B;AAAoEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAK3C,KAAL,CAAWO,QAA1B;AAA1E,KAFG,CAAL,CAIGqC,IAJH,CAIQC,QAAQ,IACZ,KAAKjD,KAAL,CAAWmD,gBAAX,CAA4B,KAAKnD,KAAL,CAAWoD,WAAvC,EAAoD,KAAKpD,KAAL,CAAWiF,aAAX,CAAyB/C,EAA7E,CALJ,EAOGuB,KAPH,CAOSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAPlB;AAQH;;AAEDzC,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,QAAL,CAAcC,KAAK,KAAK;AAAEC,MAAAA,QAAQ,EAAE,CAACD,KAAK,CAACC;AAAnB,KAAL,CAAnB;AACD,GApRmC,CAsRpC;;;AACAU,EAAAA,KAAK,CAACmE,IAAD,EAAO3D,IAAP,EAAa;AAChB,SAAKvB,KAAL,CAAWe,KAAX,CAAiBmE,IAAjB,EAAuB3D,IAAvB;AACD,GAzRmC,CA2RpC;;;AACAL,EAAAA,WAAW,CAACiE,CAAD,EAAIC,IAAJ,EAAU;AACnB,SAAKjF,QAAL,CAAc;AACZQ,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAG,KAAKZ,KAAL,CAAWiF,aAAX,CAAyBrE,IADxB;AAERC,QAAAA,WAAW,EAAG,KAAKb,KAAL,CAAWiF,aAAX,CAAyBpE;AAF/B;AADE,KAAd;AAMA,SAAKV,QAAL,CAAc6E,SAAS,KAAK;AAC1BxE,MAAAA,KAAK,EAAE,CAACwE,SAAS,CAACxE;AADQ,KAAL,CAAvB;;AAIA,QAAI4E,IAAJ,EAAU;AACR,WAAKjF,QAAL,CAAc;AACZO,QAAAA,OAAO,EAAE;AAAEG,UAAAA,WAAW,EAAEuE,IAAI,CAACvE;AAApB;AADG,OAAd;AAGD;AACF;;AAEDwE,EAAAA,MAAM,GAAG;AAAA,sBACqB,KAAKjF,KAD1B;AAAA,QACDO,QADC,eACDA,QADC;AAAA,QACS4D,OADT,eACSA,OADT;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKnE,KAAL,CAAWI,KAA1B;AAAiC,MAAA,MAAM,EAAE,KAAKU,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,EAAE,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEJ,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAC,YAHZ;AAIE,MAAA,KAAK,EAAGP,QAAQ,CAACC,IAJnB;AAKE,MAAA,QAAQ,EAAE,KAAKQ,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CADF,CADF,CADF,EAmBE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAnBF,EAoBI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,IAAI,EAAC,aAFL;AAGA,MAAA,SAAS,EAAC,YAHV;AAIA,MAAA,KAAK,EAAGT,QAAQ,CAACE,WAAT,IAAwB,EAJhC;AAKA,MAAA,QAAQ,EAAE,KAAKO,YALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CApBJ,CAJF,EAqCE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEG,CAAC,KAAKhB,KAAL,CAAWoB,SAAZ,IACyB;AACI,MAAA,SAAS,EAAC,8BADd;AAEI,MAAA,EAAE,EAAC,QAFP;AAII,MAAA,OAAO,EAAG2D,CAAD,IAAO;AACZ,aAAK9D,WAAL,CAAiB8D,CAAjB,EAAoB,QAApB;AACH,OANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH5B,EAaqB,KAAK/E,KAAL,CAAWoB,SAAX,IAAyB;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACtB;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,QAFP;AAGI,MAAA,SAAS,EAAE,KAAKqC,eAAL,CAAqB7C,IAArB,CAA0B,IAA1B,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADsB,EAOtB;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAGmE,CAAD,IAAO;AAClC,aAAK9D,WAAL,CAAiB8D,CAAjB,EAAoB,QAApB;AACH,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAPsB,CAb9C,EA4BG,KAAKnF,KAAL,CAAWiF,aAAX,CAAyBK,cAAzB,GACG,KAAKtF,KAAL,CAAWiF,aAAX,CAAyBK,cAAzB,CAAwCC,GAAxC,CACE,CAACC,SAAD,EAAYC,CAAZ,KAAkB;AAChB,aACE;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGG,CAAC,KAAKrF,KAAL,qBAAwBqF,CAAxB,EAAD,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,SAAS,CAAC3D,KAAjB,CAJJ,CADF,EAQK,KAAKzB,KAAL,qBAAwBqF,CAAxB,MACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,EAAE,EAAC,QAFH;AAGA,QAAA,QAAQ,EAAE,KAAK3D,eAAL,CAAqBd,IAArB,CAA0B,IAA1B,EAA+ByE,CAA/B,EAAmC,WAAnC,CAHV;AAIA,QAAA,KAAK,EAAE,KAAKrF,KAAL,2BAA8BqF,CAA9B,EAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAQJ;AAAG,QAAA,SAAS,EAAC,cAAb;AAA4B,QAAA,OAAO,EAAE,KAAKzD,YAAL,CAAkBhB,IAAlB,CAAuB,IAAvB,EAA4ByE,CAA5B,EAAgCD,SAAS,CAACvD,GAA1C,EAA+C,QAA/C,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARI,CATN,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAqC,QAAA,OAAO,EAAE,KAAKN,SAAL,CAAeX,IAAf,CAAoB,IAApB,EAAyByE,CAAzB,EAA6BD,SAAS,CAAC3D,KAAvC,EAA8C,WAA9C,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAnBJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,EAAe;AAAG,QAAA,SAAS,EAAC,cAAb;AAA6B,QAAA,OAAO,EAAE,KAAKqC,cAAL,CAAoBlD,IAApB,CAAyB,IAAzB,EAA+BwE,SAAS,CAACvD,GAAzC,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf,CApBJ,CADF,CADF;AA2BD,KA7BH,CADH,GAgCG,EA5DN,CArCF,EAmGE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEG,CAAC,KAAK7B,KAAL,CAAWqB,UAAZ,IACyB;AACI,MAAA,SAAS,EAAC,8BADd;AAEI,MAAA,EAAE,EAAC,QAFP;AAII,MAAA,OAAO,EAAG0D,CAAD,IAAO;AACZ,aAAK9D,WAAL,CAAiB8D,CAAjB,EAAoB,SAApB;AACH,OANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH5B,EAaqB,KAAK/E,KAAL,CAAWqB,UAAX,IAA0B;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACvB;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,QAFP;AAGI,MAAA,SAAS,EAAE,KAAKsC,aAAL,CAAmB/C,IAAnB,CAAwB,IAAxB,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADuB,EAOvB;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAGmE,CAAD,IAAO;AAClC,aAAK9D,WAAL,CAAiB8D,CAAjB,EAAoB,SAApB;AACH,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAPuB,CAb/C,EA2BG,KAAKnF,KAAL,CAAWiF,aAAX,CAAyBN,QAAzB,GACG,KAAK3E,KAAL,CAAWiF,aAAX,CAAyBN,QAAzB,CAAkCY,GAAlC,CAAsC,CAACG,OAAD,EAAUD,CAAV,KAAgB;AACpD,aACE;AAAK,QAAA,GAAG,EAAEC,OAAO,CAACxD,EAAlB;AAAsB,QAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,CAAC,KAAK9B,KAAL,mBAAsBqF,CAAtB,EAAD,IACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOC,OAAO,CAAC9E,IAAf,CAFN,CADF,EAMO,KAAKR,KAAL,mBAAsBqF,CAAtB,MACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,EAAE,EAAC,SAFH;AAGA,QAAA,QAAQ,EAAE,KAAK3D,eAAL,CAAqBd,IAArB,CAA0B,IAA1B,EAA+ByE,CAA/B,EAAmC,SAAnC,CAHV;AAIA,QAAA,KAAK,EAAE,KAAKrF,KAAL,yBAA4BqF,CAA5B,EAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAQJ;AAAG,QAAA,SAAS,EAAC,cAAb;AAA4B,QAAA,OAAO,EAAE,KAAKzD,YAAL,CAAkBhB,IAAlB,CAAuB,IAAvB,EAA4ByE,CAA5B,EAAgCC,OAAO,CAACxD,EAAxC,EAA4C,SAA5C,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARI,CAPR,EAiBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAqC,QAAA,OAAO,EAAE,KAAKP,SAAL,CAAeX,IAAf,CAAoB,IAApB,EAAyByE,CAAzB,EAA6BC,OAAO,CAAC9E,IAArC,EAA2C,SAA3C,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAjBN,EAkBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,EAAe;AAAG,QAAA,SAAS,EAAC,cAAb;AAA6B,QAAA,OAAO,EAAE,KAAKwD,YAAL,CAAkBpD,IAAlB,CAAuB,IAAvB,EAA6B0E,OAAO,CAACxD,EAArC,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf,CAlBN,CADF,CADF;AAyBD,KA1BD,CADH,GA4BG,EAvDN,CAnGF,EA4JE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEG,CAAC,KAAK9B,KAAL,CAAWsB,YAAZ,IACyB;AACI,MAAA,SAAS,EAAC,8BADd;AAEI,MAAA,EAAE,EAAC,QAFP;AAII,MAAA,OAAO,EAAGyD,CAAD,IAAO;AACZ,aAAK9D,WAAL,CAAiB8D,CAAjB,EAAoB,WAApB;AACH,OANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH5B,EAaqB,KAAK/E,KAAL,CAAWsB,YAAX,IAA4B;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADA,EAEA;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAmC,MAAA,QAAQ,EAAE,KAAK2C,gBAAL,CAAsBrD,IAAtB,CAA2B,IAA3B,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEK,KAAKZ,KAAL,CAAWmE,OAAX,GACKA,OAAO,CAACgB,GAAR,CAAY,CAACI,MAAD,EAASF,CAAT,KAAe;AACzB,aACK;AAAQ,QAAA,GAAG,EAAIA,CAAf;AAAkB,QAAA,KAAK,EAAEE,MAAM,CAAC/E,IAAhC;AAAsC,QAAA,EAAE,EAAE+E,MAAM,CAACzD,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsDyD,MAAM,CAAC/E,IAA7D,CADL;AAIH,KALC,CADL,GAMQ,EARb,CADJ,CADJ,EAcI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAmC,MAAA,EAAE,EAAC,eAAtC;AAAsD,MAAA,QAAQ,EAAE,KAAKgE,mBAAL,CAAyB5D,IAAzB,CAA8B,IAA9B,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEK,KAAKZ,KAAL,CAAWsE,YAAX,GACK,KAAKtE,KAAL,CAAWsE,YAAX,CAAwBa,GAAxB,CAA4B,CAACK,IAAD,EAAOH,CAAP,KAAa;AACvC,aACI;AAAQ,QAAA,GAAG,EAAIA,CAAf;AAAkB,QAAA,KAAK,EAAEG,IAAI,CAAC1D,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmC0D,IAAI,CAAChF,IAAxC,CADJ;AAGH,KAJC,CADL,GAKQ,EAPb,CADJ,CAdJ,EAyBI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,IAAI,EAAC,MAA/C;AAAsD,MAAA,EAAE,EAAC,SAAzD;AAAmE,MAAA,WAAW,EAAC,mBAA/E;AAAmG,MAAA,MAAM,EAAE,KAAKoD,eAAL,CAAqBhD,IAArB,CAA0B,IAA1B,CAA3G;AACI,MAAA,SAAS,EAAE,KAAKgD,eAAL,CAAqBhD,IAArB,CAA0B,IAA1B,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAzBJ,CAFA,CAD6B,EAmCzB;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAGmE,CAAD,IAAO;AAClC,aAAK9D,WAAL,CAAiB8D,CAAjB,EAAoB,WAApB;AACH,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAnCyB,CAbjD,EAuDG,KAAKnF,KAAL,CAAWiF,aAAX,CAAyBY,UAAzB,GACG,KAAK7F,KAAL,CAAWiF,aAAX,CAAyBY,UAAzB,CAAoCN,GAApC,CAAwC,CAACO,SAAD,EAAYL,CAAZ,KAAkB;AACxD,aACE;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAAC,KAAKrF,KAAL,qBAAwBqF,CAAxB,EAAD,IACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOK,SAAS,CAAClF,IAAjB,CAFR,CADA,EAMO,KAAKR,KAAL,qBAAwBqF,CAAxB,MACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,EAAE,EAAC,WAFH;AAGA,QAAA,QAAQ,EAAE,KAAK3D,eAAL,CAAqBd,IAArB,CAA0B,IAA1B,EAA+ByE,CAA/B,EAAmC,WAAnC,CAHV;AAIA,QAAA,KAAK,EAAE,KAAKrF,KAAL,2BAA8BqF,CAA9B,EAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAQJ;AAAG,QAAA,SAAS,EAAC,cAAb;AAA4B,QAAA,OAAO,EAAE,KAAKzD,YAAL,CAAkBhB,IAAlB,CAAuB,IAAvB,EAA4ByE,CAA5B,EAAgCK,SAAS,CAAC5D,EAA1C,EAA8C,WAA9C,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARI,CAPR,EAiBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAqC,QAAA,OAAO,EAAE,KAAKP,SAAL,CAAeX,IAAf,CAAoB,IAApB,EAAyByE,CAAzB,EAA6BK,SAAS,CAAClF,IAAvC,EAA6C,WAA7C,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAjBN,EAkBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,EAAe;AAAG,QAAA,SAAS,EAAC,cAAb;AAA6B,QAAA,OAAO,EAAE,KAAKwD,YAAL,CAAkBpD,IAAlB,CAAuB,IAAvB,EAA6B8E,SAAS,CAAC5D,EAAvC,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf,CAlBN,CADF,CADF;AA0BD,KA3BD,CADH,GA6BG,EApFN,CA5JF,CAFA,EAqPA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,KAAKf,YAAtC;AAAoD,MAAA,IAAI,EAAC,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArPA,CADF,CADF,EA0PE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE;AACE,MAAA,SAAS,EAAC,6CADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKJ,KAAL,CAAW,cAAX,EAA2B,YAA3B,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAME;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKG,WAAL,CAAiB,IAAjB,EAAuB,KAAKlB,KAAL,CAAWiF,aAAlC,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CA1PF,EAsQE,oBAAC,kBAAD;AAAoB,MAAA,QAAQ,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,EAAE,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjF,KAAL,CAAWiF,aAAX,CAAyBrE,IAD5B,EACiC,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,gBAAnB;AACjC,MAAA,SAAS,EAAC,KADuB;AAEjC,MAAA,MAAM,EAAE,MAAM,KAAKX,MAAL,CAAY,oBAAZ,CAFmB;AAGjC,MAAA,MAAM,EAAE,KAAKG,KAAL,CAAW,oBAAX,CAHyB;AAIjC,MAAA,QAAQ,EAAE,KAJuB;AAKjC,MAAA,MAAM,EAAE,oBALyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOhC,KAAKJ,KAAL,CAAWiF,aAAX,CAAyB/C,EAPO,CADjC,CADF,EAaE;AACE,MAAA,SAAS,EAAC,sCADZ;AAEE,MAAA,OAAO,EAAE,KAAKjB,iBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF,CADF,EAsBE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,EAyBE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAE,KAAKb,KAAL,CAAWC,QADrB;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWiF,aAAX,CAAyBpE,WAAzB,GACG,KAAKb,KAAL,CAAWiF,aAAX,CAAyBpE,WAD5B,GAEG,gBAHN,CAJF,CAzBF,CAJF,EAyCE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEG,KAAKb,KAAL,CAAWiF,aAAX,CAAyBK,cAAzB,GACG,KAAKtF,KAAL,CAAWiF,aAAX,CAAyBK,cAAzB,CAAwCC,GAAxC,CACE,CAACC,SAAD,EAAYC,CAAZ,KAAkB;AAChB,aACE;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,SAAS,CAAC3D,KAAjB,CAFF,CADF,CADF,CADF;AAUD,KAZH,CADH,GAeG,EAjBN,CAzCF,EA4DE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,KAAK7B,KAAL,CAAWiF,aAAX,CAAyBN,QAAzB,GACG,KAAK3E,KAAL,CAAWiF,aAAX,CAAyBN,QAAzB,CAAkCY,GAAlC,CAAsC,CAACZ,QAAD,EAAWc,CAAX,KAAiB;AACrD,aACE;AAAK,QAAA,GAAG,EAAEd,QAAQ,CAACzC,EAAnB;AAAuB,QAAA,SAAS,EAAC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AAAM,QAAA,EAAE,oBAAauD,CAAb,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2Bd,QAAQ,CAAC/D,IAApC,EACA,oBAAC,OAAD;AACA,QAAA,SAAS,EAAC,gBADV;AAEA,QAAA,SAAS,EAAC,KAFV;AAGA,QAAA,MAAM,EAAE,MAAM,KAAKX,MAAL,mBAAuBwF,CAAvB,EAHd;AAIA,QAAA,MAAM,EAAE,KAAKrF,KAAL,mBAAsBqF,CAAtB,EAJR;AAKA,QAAA,QAAQ,EAAE,KALV;AAMA,QAAA,MAAM,oBAAaA,CAAb,CANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQCd,QAAQ,CAACzC,EARV,CADA,CAHF,CADF,CADF,CADF;AAuBD,KAxBD,CADH,GA0BG,EA5BN,CA5DF,EA0FE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEG,KAAKlC,KAAL,CAAWiF,aAAX,CAAyBY,UAAzB,GACG,KAAK7F,KAAL,CAAWiF,aAAX,CAAyBY,UAAzB,CAAoCN,GAApC,CAAwC,CAACM,UAAD,EAAaJ,CAAb,KAAmB;AACzD,aACE;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGE;AAAM,QAAA,EAAE,sBAAeA,CAAf,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BI,UAAU,CAACjF,IAAxC,OAA8C,oBAAC,OAAD;AAC9C,QAAA,SAAS,EAAC,KADoC;AAE9C,QAAA,SAAS,EAAC,gBAFoC;AAG9C,QAAA,MAAM,EAAE,MAAM,KAAKX,MAAL,qBAAyBwF,CAAzB,EAHgC;AAI9C,QAAA,MAAM,EAAE,KAAKrF,KAAL,qBAAwBqF,CAAxB,EAJsC;AAK9C,QAAA,QAAQ,EAAE,KALoC;AAM9C,QAAA,MAAM,sBAAeA,CAAf,CANwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQ7CI,UAAU,CAAC3D,EARkC,CAA9C,CAHF,CADF,CADF,CADF;AAqBD,KAtBD,CADH,GAwBG,EA1BN,CA1FF,CADF,CAtQF,CADF;AAkYD;;AAlrBmC;;AAqrBtC,SAAS6D,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACL7C,IAAAA,gBAAgB,EAAE,CAAC8C,OAAD,EAAUC,QAAV,KAAuB;AACvCF,MAAAA,QAAQ,CAAC5G,iBAAiB,CAAC6G,OAAD,EAAUC,QAAV,CAAlB,CAAR;AACD,KAHI;AAILhD,IAAAA,UAAU,EAAG+C,OAAD,IAAa;AACvBD,MAAAA,QAAQ,CAAC3G,UAAU,CAAC4G,OAAD,CAAX,CAAR;AACH;AANM,GAAP;AAQD;;AAED,SAASE,eAAT,CAAyB/F,KAAzB,EAAgC;AAC9B,SAAO;AACLiD,IAAAA,YAAY,EAAEjD,KAAK,CAACgG,KAAN,CAAY/C,YADrB;AAELD,IAAAA,WAAW,EAAEhD,KAAK,CAACgG,KAAN,CAAYC,QAFpB;AAGL3D,IAAAA,aAAa,EAAEtC,KAAK,CAACgG,KAAN,CAAYH,OAHtB;AAILhB,IAAAA,aAAa,EAAE7E,KAAK,CAACuF,MAAN,CAAaV,aAJvB;AAKL1D,IAAAA,IAAI,EAAEnB,KAAK,CAACuF,MAAN,CAAapE;AALd,GAAP;AAOD;;AAED,eAAejC,OAAO,CACpB6G,eADoB,EAEpBJ,kBAFoB,CAAP,CAGbjG,aAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport { fetchSystemDetils } from \"../../../store/system/systemActions\";\nimport { fetchModel } from '../../../store/model/modelActions'\nimport { connect } from \"react-redux\";\nimport { Collapse, Modal, ModalBody, Tooltip, Input, Label, Button } from \"reactstrap\";\n\n\nclass SystemDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: true,\n      systemCollapseId: false,\n      subSystemCollapseId: false,\n      modal: false,\n      editSubSystem : false,\n      details: {},\n      formData: {\n        name: \"\",\n        description: \"\",\n        supportLevel: \"\"\n      },\n    };\n    this.close = this.close.bind(this);\n    this.toggleDescription = this.toggleDescription.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.modalToggle = this.modalToggle.bind(this);\n    this.updateSystem = this.updateSystem.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addUiToggle = this.addUiToggle.bind(this);\n  }\n\n  //manage add more system/flow text box to ui\n  addUiToggle(event, type) {\n    if (type === 'system') {\n        this.setState(state => ({ systemAdd: !state.systemAdd }));\n    } else if (type === 'service') {\n      this.setState(state => ({ serviceAdd: !state.serviceAdd }));\n    }\n    else if (type === 'reference') {\n      this.setState(state => ({ referenceAdd: !state.referenceAdd }));\n    }\n}\n\neditfield(key, title, type){\n  if(type == 'subsystem') {\n    this.setState({ ['subsystem-'+ key]: true });\n    this.setState({ ['subsystem-value-'+ key]: title });\n  } else if(type == 'service') {\n    this.setState({ ['service-'+ key]: true });\n    this.setState({ ['service-value-'+ key]: title });\n  } else if(type == 'reference') {\n    this.setState({ ['reference-'+ key]: true });\n    this.setState({ ['reference-value-'+ key]: title });\n  }\n  \n}\n\neditFieldChange(key, type, event){\n  if(type == 'subsystem') {\n    this.setState({ ['subsystem-'+ key]: true });\n    this.setState({ ['subsystem-value-'+ key]: event.target.value });\n  } else if(type == 'service') {\n    this.setState({ ['service-'+ key]: true });\n    this.setState({ ['service-value-'+ key]: event.target.value });\n  } else if(type == 'reference') {\n    this.setState({ ['reference-'+ key]: true });\n    this.setState({ ['reference-value-'+ key]: event.target.value });\n  }\n}\n\nupdateEntity(key, uri, type){\n  var value = '';\n  var id = '';\n  if(type === 'system'){\n    let splitArray = uri.split(\"/\");\n    if(splitArray.length > 0)\n      id = splitArray[4]\n    this.setState({ ['subsystem-'+ key]: false });\n    value = this.state[`subsystem-value-${key}`]\n  } else if(type == 'service') {\n    this.setState({ ['service-'+ key]: false });\n    id = uri\n    value = this.state[`service-value-${key}`]\n  } else if(type == 'reference') {\n    id = uri\n    this.setState({ ['reference-'+ key]: false });\n    value = this.state[`reference-value-${key}`]\n  }\n  \n  \n\n\n\n            fetch(\n                process.env.REACT_APP_API + `/model/${this.props.activeModelId}/${type}/` + id,\n                {\n                    method: \"PATCH\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({ name: value })\n                }\n            )\n                .then(response => {\n                  this.props.getSystems(this.props.activeModelId)\n                    this.props.getSystemDetails(this.props.activeModel,this.props.activeSystem); \n                }\n                )\n\n}\n\ngetAllSystems() {\n  return fetch(process.env.REACT_APP_API + '/hypermedia/network/' + this.props.activeModelId + '/allsystems')\n    .then(res => res.json())\n    .then(response => {\n      this.setState({ 'systems': response })\n    })\n    .catch(error => console.log(error));\n}\n\n//create Sub System\ncreateSubSystem(event) {\n  let value = event.target.value;\n  if (event.key === 'Enter') {\n      event.target.value = '';\n      fetch(\n          process.env.REACT_APP_API + `/hypermedia/network/${this.props.activeModelId}/system/${this.props.activeSystem}/system`,\n          { method: \"POST\", headers: { \"Content-Type\": \"application/json\" } }\n      )\n          .then(response => response.json())\n          .then(responseJson => {\n              return fetch(\n                  process.env.REACT_APP_API + `/hypermedia/network/${this.props.activeModelId}/system/` + responseJson.id,\n                  { method: \"PATCH\", headers: { \"Content-Type\": \"application/json\" }, body: JSON.stringify({ name: value }) }\n              )\n                  .then(response => { \n                    this.props.getSystems(this.props.activeModelId)\n                    this.props.getSystemDetails(this.props.activeModel,this.props.activeSystem); \n                  })\n\n          });\n  }\n}\n\n//create service\ncreateService(event) {\n  let value = event.target.value;\n  if (event.key === 'Enter') {\n      event.target.value = '';\n      fetch(\n          process.env.REACT_APP_API + `/model/${this.props.activeModelId}/system/${this.props.activeSystem}/service`,\n          { method: \"POST\", headers: { \"Content-Type\": \"application/json\" } }\n      )\n          .then(response => response.json())\n          .then(responseJson => {\n              return fetch(\n                  process.env.REACT_APP_API + `/model/${this.props.activeModelId}/service/` + responseJson.id,\n                  { method: \"PATCH\", headers: { \"Content-Type\": \"application/json\" }, body: JSON.stringify({ name: value }) }\n              )\n                  .then(response => { \n                    this.props.getSystems(this.props.activeModelId)\n                    this.props.getSystemDetails(this.props.activeModel,this.props.activeSystem); \n                  })\n\n          });\n  }\n}\n\n//create reference\ncreateReference(event) {\n  let value = event.target.value;\n  if ((event.key === 'Enter' || event.type === 'blur') && value && this.state.serviceId) {\n      event.target.value = '';\n      fetch(\n          process.env.REACT_APP_API + `${this.props.activeModel}/system/${this.props.activeSystem}/reference/${this.state.serviceId}`,\n          {\n              method: \"POST\",\n              headers: {\n                  \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({ name: value })\n          }\n      )\n          .then(response => response.json())\n          .then(responseJson => {\n              return fetch(\n                  process.env.REACT_APP_API + `${this.props.activeModel}/reference/` + responseJson.id,\n\n                  {\n                      method: \"PATCH\",\n                      headers: {\n                          \"Content-Type\": \"application/json\"\n                      },\n                      body: JSON.stringify({ name: value })\n                  }\n              )\n                  .then(response => {\n                      this.props.getSystems(this.props.activeModelId)\n                      this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem)\n                      this.getAllSystems();\n                  }\n                  )\n          });\n  }\n}\n\n//Delete sub system\ngetSubSystemId(Uri, type) {\n  let splitArray = Uri.split(\"/\");\n  if(splitArray.length > 0) {\n    this.deleteEntity(splitArray[4])\n  }\n}\n\n//Delete entity\ndeleteEntity(id) {\n  return fetch(\n    process.env.REACT_APP_API + `/model/${this.props.activeModelId}/modeled/${id}`,\n    {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    }\n)\n    .then(response => {\n        this.props.getSystems(this.props.activeModelId)\n        this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem)\n    });\n}\n//get systems and services list for adding new reference\ngetSystemService(event) {\n  let parents = this.state.systems;\n  let parent = parents.filter(parent => parent.name === event.target.value);\n  if (parent)\n      this.setState({ servicesList: parent[0].services });\n}\n  handleChange(event) {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({\n      formData\n    });\n  }\n\n  serviceHandleChange(event) {\n    this.setState({ serviceId: event.target.value })\n}\n\n  toggle = target => {\n    this.setState({\n      ...this.state,\n      [target]: !this.state[target]\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.activeSystem !== nextProps.activeSystem)\n      this.props.getSystemDetails(this.props.activeModel, nextProps.activeSystem);\n  }\n\n  componentWillMount() {\n    this.props.getSystemDetails(this.props.activeModel, this.props.activeSystem);\n    this.getAllSystems();\n  }\n\n  updateSystem() {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n      fetch(\n        process.env.REACT_APP_API + `/hypermedia/network/${this.props.activeModelId}/system/` + this.props.systemDetails.id,\n        { method: \"PATCH\", headers: { \"Content-Type\": \"application/json\" }, body: JSON.stringify(this.state.formData) }\n      )\n        .then(response =>\n          this.props.getSystemDetails(this.props.activeModel, this.props.systemDetails.id)\n        )\n        .catch(error => console.log(error));\n  }\n\n  toggleDescription() {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n\n  //Closes the system details section\n  close(menu, type) {\n    this.props.close(menu, type);\n  }\n\n  //control right click modal\n  modalToggle(e, data) {\n    this.setState({\n      formData: {\n        name : this.props.systemDetails.name,\n        description : this.props.systemDetails.description\n      }\n    });\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    if (data) {\n      this.setState({\n        details: { description: data.description }\n      });\n    }\n  }\n\n  render() {\n    var { formData, systems } = this.state;\n    return (\n      <div className=\"org_browser\">\n        <Modal isOpen={this.state.modal} toggle={this.modalToggle}>\n          <ModalBody>\n          \n          <div className=\"browser_wrapper\">\n            <div className=\"org-selector\">\n              <p className=\"text-white text-left\"></p>\n            </div>\n            <div className=\"ob-block row\">\n              <div className=\"col-md-6 m-b-20\">\n                <p className=\"text-white text-left\">\n                  <span id=\"system-detail-name\">\n                    <Label for=\"name\">Name</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                className=\"text-input\"\n                value= {formData.name}\n                onChange={this.handleChange}\n              />\n                  </span>\n                  \n                 \n                </p>\n                \n              </div>\n             \n              <Label for=\"name\">Description</Label>\n                <p className=\"text-grey\">\n                <Input\n                type=\"text\"\n                name=\"description\"\n                className=\"text-input\"\n                value= {formData.description || ''}\n                onChange={this.handleChange}\n              />\n                 \n                </p>\n\n            </div>\n\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">Sub systems</p>\n              {!this.state.systemAdd && (\n                                        <i\n                                            className=\"fas fa-plus system-down-icon\"\n                                            id=\"system\"\n\n                                            onClick={(e) => {\n                                                this.addUiToggle(e, 'system')\n                                            }}\n                                        />)}\n                               \n\n                                {this.state.systemAdd && (<div className=\"extra-add\">\n                                    <input\n                                        type=\"text\"\n                                        id=\"system\"\n                                        onKeyDown={this.createSubSystem.bind(this)}\n                                       \n                                    />\n                                    <button type=\"button\" onClick={(e) => {\n                                        this.addUiToggle(e, 'system')\n                                    }}>\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>)}\n              \n              \n              {this.props.systemDetails.subsystemLinks\n                ? this.props.systemDetails.subsystemLinks.map(\n                    (subsystem, i) => {\n                      return (\n                        <div key={i} className=\"d-flex w-100\">\n                          <div className=\"col-md-12\">\n                            <p className=\"text-grey text-left\">\n                              <span className=\"systemCircle\"></span>\n                              \n                              {!this.state[`subsystem-${i}`] && (\n                                <span>{subsystem.title}</span> \n                              )}\n                              </p>\n                              {this.state[`subsystem-${i}`] && (\n                                <div>\n                                <input\n                                type=\"text\"\n                                id=\"system\"\n                                onChange={this.editFieldChange.bind(this,i , 'subsystem')}\n                                value={this.state[`subsystem-value-${i}`]}\n                               \n                            />\n                            <i className=\"fas fa-check\" onClick={this.updateEntity.bind(this,i , subsystem.uri, 'system')}></i></div>\n                              )}\n                              <span><i className=\"far fa-edit edit-icon\" onClick={this.editfield.bind(this,i , subsystem.title, 'subsystem')}></i></span>\n                              <span><br></br><i className=\"fas fa-trash\"  onClick={this.getSubSystemId.bind(this, subsystem.uri)}></i></span>\n                            \n                          </div>\n                        </div>\n                      );\n                    }\n                  )\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">Services </p>\n              {!this.state.serviceAdd && (\n                                        <i\n                                            className=\"fas fa-plus system-down-icon\"\n                                            id=\"system\"\n\n                                            onClick={(e) => {\n                                                this.addUiToggle(e, 'service')\n                                            }}\n                                        />)}\n                               \n\n                                {this.state.serviceAdd && (<div className=\"extra-add\">\n                                    <input\n                                        type=\"text\"\n                                        id=\"system\"\n                                        onKeyDown={this.createService.bind(this)}\n                                        \n                                    />\n                                    <button type=\"button\" onClick={(e) => {\n                                        this.addUiToggle(e, 'service')\n                                    }}>\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>)}\n             \n              {this.props.systemDetails.services\n                ? this.props.systemDetails.services.map((service, i) => {\n                    return (\n                      <div key={service.id} className=\"d-flex w-100\">\n                        <div className=\"col-md-12\">\n                          <p className=\"text-grey text-left\">\n                          {!this.state[`service-${i}`] && (\n                                <span>{service.name}</span> \n                              )}\n                              </p>\n                              {this.state[`service-${i}`] && (\n                                <div>\n                                <input\n                                type=\"text\"\n                                id=\"service\"\n                                onChange={this.editFieldChange.bind(this,i , 'service')}\n                                value={this.state[`service-value-${i}`]}\n                               \n                            />\n                            <i className=\"fas fa-check\" onClick={this.updateEntity.bind(this,i , service.id, 'service')}></i></div>\n                              )}\n                              <span><i className=\"far fa-edit edit-icon\" onClick={this.editfield.bind(this,i , service.name, 'service')}></i></span>\n                              <span><br></br><i className=\"fas fa-trash\"  onClick={this.deleteEntity.bind(this, service.id)}></i></span>\n                          \n                        </div>\n                      </div>\n                    );\n                  })\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">References</p>\n              {!this.state.referenceAdd && (\n                                        <i\n                                            className=\"fas fa-plus system-down-icon\"\n                                            id=\"system\"\n\n                                            onClick={(e) => {\n                                                this.addUiToggle(e, 'reference')\n                                            }}\n                                        />)}\n                               \n\n                                {this.state.referenceAdd && (<div className=\"extra-add\">\n                                <div>\n                                <h4 className=\"text-center m-b-30\">Create new reference</h4>\n                                <div className=\"row formGroupWrapper\">\n                                    <div className=\"form-group col-md-3\">\n                                        <Input type=\"select\" name=\"select\" onChange={this.getSystemService.bind(this)}>\n                                            <option>Systems</option>\n                                            {this.state.systems\n                                                ? systems.map((system, i) => {\n                                                    return (\n                                                         <option key = {i} value={system.name} id={system.id}>{system.name}</option>\n\n                                                    )\n                                                }) : ''}\n\n                                        </Input>\n                                    </div>\n                                    <div className=\"form-group col-md-3\">\n                                        <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={this.serviceHandleChange.bind(this)}>\n                                            <option>Service</option>\n                                            {this.state.servicesList\n                                                ? this.state.servicesList.map((item, i) => {\n                                                    return (\n                                                        <option key = {i} value={item.id}>{item.name}</option>\n                                                    )\n                                                }) : ''}\n                                        </Input>\n                                    </div>\n                                    <div className=\"form-group col-md-6\">\n                                        <Input className=\"create-ref\" type=\"text\" name=\"text\" id=\"example\" placeholder=\"Add New Reference\" onBlur={this.createReference.bind(this)}\n                                            onKeyDown={this.createReference.bind(this)} />\n                                    </div>\n                                </div>\n\n                            </div>\n                                    <button type=\"button\" onClick={(e) => {\n                                        this.addUiToggle(e, 'reference')\n                                    }}>\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>)}\n              \n              {this.props.systemDetails.references\n                ? this.props.systemDetails.references.map((reference, i) => {\n                    return (\n                      <div key={i} className=\"d-flex w-100\">\n                        <div className=\"col-md-12\">\n                        <p className=\"text-grey text-left\">\n                          {!this.state[`reference-${i}`] && (\n                                <span>{reference.name}</span> \n                              )}\n                              </p>\n                              {this.state[`reference-${i}`] && (\n                                <div>\n                                <input\n                                type=\"text\"\n                                id=\"reference\"\n                                onChange={this.editFieldChange.bind(this,i , 'reference')}\n                                value={this.state[`reference-value-${i}`]}\n                               \n                            />\n                            <i className=\"fas fa-check\" onClick={this.updateEntity.bind(this,i , reference.id, 'reference')}></i></div>\n                              )}\n                              <span><i className=\"far fa-edit edit-icon\" onClick={this.editfield.bind(this,i , reference.name, 'reference')}></i></span>\n                              <span><br></br><i className=\"fas fa-trash\"  onClick={this.deleteEntity.bind(this, reference.id)}></i></span>\n                         \n                         \n                        </div>\n                      </div>\n                    );\n                  })\n                : \"\"}\n            </div>\n          </div>\n          <Button color=\"primary\" onClick={this.updateSystem} size=\"sm\">Update</Button>\n          </ModalBody>\n        </Modal>\n        <h3 className=\"text-center text-white\">\n          System Details\n          <i\n            className=\"fas fa-times system-down-icon browser_close\"\n            onClick={() => this.close(\"systemDetail\", \"menuDetail\")}\n          />\n          <i\n            className=\"far fa-edit\"\n            onClick={() => this.modalToggle(this, this.props.systemDetails)}\n          ></i>\n        </h3>\n\n        <VerticalScrollbars autoHide>\n          <div className=\"browser_wrapper\">\n            <div className=\"org-selector\">\n              <p className=\"text-white text-left\"></p>\n            </div>\n            <div className=\"ob-block row\">\n              <div className=\"col-md-6 m-b-20\">\n                <p className=\"text-white text-left\">\n                  <span id=\"system-detail-name\">\n                    {this.props.systemDetails.name}<Tooltip className=\"tooltip-custom\" \n                  placement=\"top\"\n                  toggle={() => this.toggle(\"system-detail-name\")}\n                  isOpen={this.state[\"system-detail-name\"]}\n                  autohide={false}\n                  target={\"system-detail-name\"}\n                >\n                  {this.props.systemDetails.id}\n                </Tooltip>\n                  </span>\n                  \n                  <i\n                    className=\"fas fa-chevron-down system-down-icon\"\n                    onClick={this.toggleDescription}\n                  />\n                </p>\n                \n              </div>\n              <div className=\"col-md-6 m-b-20\">\n               \n              </div>\n              <Collapse\n                isOpen={this.state.collapse}\n                className=\"systemDetailsDisc\"\n              >\n                <p className=\"text-grey\">\n                  {this.props.systemDetails.description\n                    ? this.props.systemDetails.description\n                    : \"No Description\"}\n                </p>\n              </Collapse>\n            </div>\n\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">Sub systems</p>\n              {this.props.systemDetails.subsystemLinks\n                ? this.props.systemDetails.subsystemLinks.map(\n                    (subsystem, i) => {\n                      return (\n                        <div key={i} className=\"d-flex w-100\">\n                          <div className=\"col-md-12\">\n                            <p className=\"text-grey text-left\">\n                              <span className=\"systemCircle\"></span>\n                              <span>{subsystem.title}</span>\n                            </p>\n                          </div>\n                        </div>\n                      );\n                    }\n                  )\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">Services</p>\n              {this.props.systemDetails.services\n                ? this.props.systemDetails.services.map((services, i) => {\n                    return (\n                      <div key={services.id} className=\"d-flex w-100\">\n                        <div className=\"col-md-12\">\n                          <p className=\"text-grey text-left\">\n                            <span className=\"serviceCircle\" />\n\n                            <span id={`service-${i}`}>{services.name}\n                            <Tooltip\n                            className=\"tooltip-custom\"\n                            placement=\"top\"\n                            toggle={() => this.toggle(`service-${i}`)}\n                            isOpen={this.state[`service-${i}`]}\n                            autohide={false}\n                            target={`service-${i}`}\n                          >\n                            {services.id}\n                          </Tooltip>\n                            </span>\n                          </p>\n                          \n                        </div>\n                      </div>\n                    );\n                  })\n                : \"\"}\n            </div>\n            <div className=\"ob-block row\">\n              <p className=\"text-white text-left col-md-12\">References</p>\n              {this.props.systemDetails.references\n                ? this.props.systemDetails.references.map((references, i) => {\n                    return (\n                      <div key={i} className=\"d-flex w-100\">\n                        <div className=\"col-md-12\">\n                          <p className=\"text-grey text-left\">\n                            <span className=\"referenceArrow\">→</span>\n\n                            <span id={`reference-${i}`}>{references.name} <Tooltip\n                            placement=\"top\"\n                            className=\"tooltip-custom\"\n                            toggle={() => this.toggle(`reference-${i}`)}\n                            isOpen={this.state[`reference-${i}`]}\n                            autohide={false}\n                            target={`reference-${i}`}\n                          >\n                            {references.id}\n                          </Tooltip></span>\n                          </p>\n                         \n                        </div>\n                      </div>\n                    );\n                  })\n                : \"\"}\n            </div>\n          </div>\n        </VerticalScrollbars>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getSystemDetails: (modelId, systemId) => {\n      dispatch(fetchSystemDetils(modelId, systemId));\n    },\n    getSystems: (modelId) => {\n      dispatch(fetchModel(modelId));\n  },\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeSystem: state.model.activeSystem,\n    activeModel: state.model.modelUri,\n    activeModelId: state.model.modelId,\n    systemDetails: state.system.systemDetails,\n    type: state.system.type\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SystemDetails);\n"]},"metadata":{},"sourceType":"module"}