{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/Systems.js\";\nimport React, { Component } from \"react\";\nimport { Collapse } from \"reactstrap\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport subsystem from \"../../../_assets/images/subsystem.png\";\nimport services from \"../../../_assets/images/services.png\";\nimport reference from \"../../../_assets/images/reference.png\";\n\nclass Systems extends Component {\n  constructor(props) {\n    super(props);\n    this.systemMenuToggle = this.systemMenuToggle.bind(this);\n    this.systemToggle = this.systemToggle.bind(this);\n    this.flowsToggle = this.flowsToggle.bind(this);\n    this.subSystemToggle = this.subSystemToggle.bind(this);\n    this.searchSystem = this.searchSystem.bind(this);\n    this.systemSelected = this.systemSelected.bind(this);\n    this.rotateCaret = this.rotateCaret.bind(this);\n    this.state = {\n      rotateCaret: false,\n      addClass: false,\n      romoveClass: false,\n      flowsCollapse: true,\n      systemsCollapse: true,\n      collapseSystem: false,\n      collapseSubSystem: false,\n      currentSystemIndex: \"\",\n      currentSubSystemIndex: \"\",\n      systemData: {\n        system: \"\"\n      },\n      showsystemDetail: false,\n      systemDetails: {},\n      values: [],\n      system: [],\n      flow: []\n    };\n  }\n\n  rotateCaret() {\n    this.setState({\n      rotate: !this.state.rotate\n    });\n  }\n\n  componentWillMount() {\n    return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(responseJson => {\n      this.setState({\n        systemData: responseJson\n      });\n    });\n  }\n\n  createSystem() {\n    return this.state.system ? this.state.system.map((el, i) => React.createElement(\"div\", {\n      key: i,\n      className: \"extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"system\",\n      onBlur: this.handleChange.bind(this, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.removeClick.bind(this, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-times\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })))) : \"\";\n  }\n\n  createFlow() {\n    return this.state.flow ? this.state.flow.map((el, i) => React.createElement(\"div\", {\n      key: i,\n      className: \"extra-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"flow\",\n      onBlur: this.handleChange.bind(this, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.removeClick.bind(this, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-times\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })))) : \"\";\n  }\n\n  handleChange(i, event) {\n    let type = event.target.id;\n    let systemName = event.target.value;\n\n    if (type == \"system\") {\n      let values = [...this.state.system];\n      values[i] = event.target.value;\n      this.setState({\n        values\n      });\n      this.state.system.splice(i, 1);\n      return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/\" + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: systemName\n          })\n        }).then(response => response.json()).then(responseJson => {});\n      });\n    } else {\n      let values = [...this.state.flow];\n      values[i] = event.target.value;\n      this.setState({\n        values\n      }); //this.state.system.splice(i, 1);\n      //console.log(this.state.system)\n\n      this.state.flow.splice(i, 1);\n      return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow/\" + responseJson.id, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: systemName\n          })\n        }).then(response => response.json()).then(responseJson => {});\n      });\n    }\n  }\n\n  addClick(event) {\n    if (event.target.id == \"system\") this.setState(prevState => ({\n      system: [...prevState.system, \"\"]\n    }));else this.setState(prevState => ({\n      flow: [...prevState.flow, \"\"]\n    }));\n  }\n\n  removeClick(i) {//let value = [...this.state.values];\n    //value.splice(i, 1);\n    //this.setState({ values : value });\n    // console.log(values)\n  }\n\n  systemSelected(systemId) {\n    this.props.systemSelected(systemId);\n  }\n\n  systemMenuToggle() {\n    this.setState(state => ({\n      systemsCollapse: !state.systemsCollapse\n    }));\n  }\n\n  flowsToggle() {\n    this.setState(state => ({\n      flowsCollapse: !state.flowsCollapse\n    }));\n  }\n\n  systemToggle(systemId) {\n    this.systemSelected(systemId);\n    this.setState({\n      collapse: !this.state.collapse\n    });\n\n    if (this.state.currentSystemIndex == systemId) {\n      this.state.currentSystemIndex = 0;\n    } else {\n      this.setState({\n        currentSystemIndex: systemId\n      });\n      this.setState({\n        showsystemDetail: true\n      });\n      return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/f1dc3452-e1a5-4a4e-9ae4-5fee3b34b647\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        this.setState({\n          systemDetails: responseJson\n        });\n      });\n    }\n  }\n\n  subSystemToggle(systemId) {\n    this.setState({\n      collapseSubSystem: !this.state.collapseSubSystem\n    });\n\n    if (this.state.currentSubSystemIndex == systemId) {\n      this.state.currentSubSystemIndex = 0;\n    } else {\n      this.setState({\n        currentSubSystemIndex: systemId\n      });\n    }\n  }\n\n  searchSystem(event) {\n    var searchedPara = document.querySelector(\".systems\");\n    var words = event.currentTarget.value;\n    var regex = RegExp(words, \"gi\");\n    var replacement = \"<span>\" + words + \"</span>\";\n    var newHTML = searchedPara.textContent.replace(regex, replacement);\n    searchedPara.innerHTML = newHTML;\n  }\n\n  toggle() {\n    this.setState({\n      addClass: !this.state.addClass\n    });\n  }\n\n  removeToggle() {\n    this.setState({\n      romoveClass: !this.state.romoveClass\n    });\n  }\n\n  render() {\n    let boxClass = [\"_search\"];\n\n    if (this.state.addClass) {\n      boxClass.push(\"active\");\n    }\n\n    let box1Class = [\"_search\"];\n\n    if (this.state.romoveClass) {\n      box1Class.push(\"active\");\n    }\n\n    var rotateCaret = {\n      display: this.state.rotateCaret ? \"block\" : \"none\"\n    };\n    return React.createElement(\"div\", {\n      className: \"org_browser\",\n      onClick: this.removeToggle.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Systems and Flows \", React.createElement(\"i\", {\n      class: \"fas fa-times system-down-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      style: {\n        width: 350\n      },\n      autoHide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Selector\"), React.createElement(\"div\", {\n      className: (boxClass.join(\" \"), box1Class.join(\" \")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-input\",\n      onKeyUp: this.searchSystem,\n      onClick: this.toggle.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"icon icon-Search search-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"systems w-100 d-inline-block montserrat text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"system-search montserrat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(VerticalScrollbars, {\n      style: {\n        height: 220\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white click\",\n      onClick: this.systemMenuToggle,\n      style: {\n        marginBottom: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Systems \", React.createElement(\"i\", {\n      className: \"fas fa-chevron-down system-down-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon\",\n      id: \"system\",\n      onClick: this.addClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    })), this.createSystem(), React.createElement(Collapse, {\n      isOpen: this.state.systemsCollapse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, this.state.systemData.systems ? this.state.systemData.systems.map((item, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey click\",\n        onClick: () => this.systemToggle(item.id),\n        style: {\n          marginBottom: \"1rem\",\n          marginLeft: \"1rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: subsystem,\n        alt: \"starlify\",\n        className: \"m-r-15 m-b-5 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }), item.name ? item.name : \"Empty System Name\"), React.createElement(Collapse, {\n        isOpen: this.state.currentSystemIndex == item.id ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, item.services ? item.services.map((service, i) => {\n        return React.createElement(\"div\", {\n          id: service.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-grey click\",\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"3rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: services,\n          alt: \"starlify\",\n          className: \"m-r-15 m-b-5 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }), service.name ? service.name : \"Empty Service Name\"));\n      }) : \"\", item.references ? item.references.map((referenceData, i) => {\n        return React.createElement(\"p\", {\n          className: \"text-grey click\",\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"3rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: reference,\n          alt: \"starlify\",\n          className: \"m-r-15 m-b-5 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }), referenceData.name ? referenceData.name : \"Empty Reference Name\");\n      }) : \"\", item.subSystems ? item.subSystems.map((subSystems, i) => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-grey click\",\n          onClick: () => this.subSystemToggle(subSystems.id),\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"3rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: subsystem,\n          alt: \"starlify\",\n          className: \"m-r-15 m-b-5 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        }), subSystems.name ? subSystems.name : \"Empty Subsystem Name\"), React.createElement(Collapse, {\n          isOpen: this.state.currentSubSystemIndex == subSystems.id ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, subSystems.services ? subSystems.services.map((service, i) => {\n          return React.createElement(\"div\", {\n            id: service.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 394\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-grey click\",\n            style: {\n              marginBottom: \"1rem\",\n              marginLeft: \"4rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 395\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: services,\n            alt: \"starlify\",\n            className: \"m-r-15 m-b-5 \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 402\n            },\n            __self: this\n          }), service.name ? service.name : \"Empty Service Name\"));\n        }) : \"\", subSystems.references ? subSystems.references.map((references, i) => {\n          return React.createElement(\"div\", {\n            id: references.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 420\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-grey click\",\n            style: {\n              marginBottom: \"1rem\",\n              marginLeft: \"4rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 421\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: reference,\n            alt: \"starlify\",\n            className: \"m-r-15 m-b-5 \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 428\n            },\n            __self: this\n          }), references.name ? reference.name : \"Empty Reference Name\"));\n        }) : \"\"));\n      }) : \"\"));\n    }) : \"\"))), React.createElement(\"div\", {\n      className: \"flows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(VerticalScrollbars, {\n      style: {\n        height: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white click\",\n      onClick: this.flowsToggle,\n      style: {\n        marginBottom: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Flows \", React.createElement(\"i\", {\n      class: \"fas fa-chevron-down system-down-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      class: \"fas fa-plus system-down-icon\",\n      id: \"flows\",\n      onClick: this.addClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    })), this.createFlow(), React.createElement(Collapse, {\n      isOpen: this.state.flowsCollapse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, this.state.systemData.flow ? this.state.systemData.flow.map((item, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey click\",\n        style: {\n          marginBottom: \"1rem\",\n          marginLeft: \"2rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, item.name ? item.name : \"Empty System Name\"));\n    }) : \"\"))))));\n  }\n\n}\n\nexport default Systems;","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/Systems.js"],"names":["React","Component","Collapse","VerticalScrollbars","subsystem","services","reference","Systems","constructor","props","systemMenuToggle","bind","systemToggle","flowsToggle","subSystemToggle","searchSystem","systemSelected","rotateCaret","state","addClass","romoveClass","flowsCollapse","systemsCollapse","collapseSystem","collapseSubSystem","currentSystemIndex","currentSubSystemIndex","systemData","system","showsystemDetail","systemDetails","values","flow","setState","rotate","componentWillMount","fetch","process","env","REACT_APP_API","method","headers","then","response","json","responseJson","createSystem","map","el","i","handleChange","removeClick","createFlow","event","type","target","id","systemName","value","splice","body","JSON","stringify","name","addClick","prevState","systemId","collapse","searchedPara","document","querySelector","words","currentTarget","regex","RegExp","replacement","newHTML","textContent","replace","innerHTML","toggle","removeToggle","render","boxClass","push","box1Class","display","width","join","height","marginBottom","systems","item","index","marginLeft","service","references","referenceData","subSystems"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Collapse } from \"reactstrap\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport subsystem from \"../../../_assets/images/subsystem.png\";\nimport services from \"../../../_assets/images/services.png\";\nimport reference from \"../../../_assets/images/reference.png\";\n\nclass Systems extends Component {\n  constructor(props) {\n    super(props);\n    this.systemMenuToggle = this.systemMenuToggle.bind(this);\n    this.systemToggle = this.systemToggle.bind(this);\n    this.flowsToggle = this.flowsToggle.bind(this);\n    this.subSystemToggle = this.subSystemToggle.bind(this);\n    this.searchSystem = this.searchSystem.bind(this);\n    this.systemSelected = this.systemSelected.bind(this);\n    this.rotateCaret = this.rotateCaret.bind(this);\n    this.state = {\n      rotateCaret: false,\n      addClass: false,\n      romoveClass: false,\n      flowsCollapse: true,\n      systemsCollapse: true,\n      collapseSystem: false,\n      collapseSubSystem: false,\n      currentSystemIndex: \"\",\n      currentSubSystemIndex: \"\",\n      systemData: { system: \"\" },\n      showsystemDetail: false,\n      systemDetails: {},\n      values: [],\n      system: [],\n      flow: []\n    };\n  }\n  rotateCaret() {\n    this.setState({\n\t\t\trotate: !this.state.rotate\n\t\t});\n  }\n  componentWillMount() {\n    return fetch(\n      process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c\",\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    )\n      .then(response => response.json())\n      .then(responseJson => {\n        this.setState({ systemData: responseJson });\n      });\n  }\n\n  createSystem() {\n    return this.state.system\n      ? this.state.system.map((el, i) => (\n          <div key={i} className=\"extra-add\">\n            <input\n              type=\"text\"\n              id=\"system\"\n              onBlur={this.handleChange.bind(this, i)}\n            />\n            <button type=\"button\" onClick={this.removeClick.bind(this, i)}>\n              <i class=\"fas fa-times\" />\n            </button>\n          </div>\n        ))\n      : \"\";\n  }\n\n  createFlow() {\n    return this.state.flow\n      ? this.state.flow.map((el, i) => (\n          <div key={i} className=\"extra-add\">\n            <input\n              type=\"text\"\n              id=\"flow\"\n              onBlur={this.handleChange.bind(this, i)}\n            />\n            <button type=\"button\" onClick={this.removeClick.bind(this, i)}>\n              <i class=\"fas fa-times\" />\n            </button>\n          </div>\n        ))\n      : \"\";\n  }\n\n  handleChange(i, event) {\n    let type = event.target.id;\n    let systemName = event.target.value;\n\n    if (type == \"system\") {\n      let values = [...this.state.system];\n      values[i] = event.target.value;\n      this.setState({ values });\n      this.state.system.splice(i, 1);\n      return fetch(\n        process.env.REACT_APP_API +\n          \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          return fetch(\n            process.env.REACT_APP_API +\n              \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/\" +\n              responseJson.id,\n            {\n              method: \"PATCH\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({ name: systemName })\n            }\n          )\n            .then(response => response.json())\n            .then(responseJson => {});\n        });\n    } else {\n      let values = [...this.state.flow];\n      values[i] = event.target.value;\n      this.setState({ values });\n      //this.state.system.splice(i, 1);\n      //console.log(this.state.system)\n      this.state.flow.splice(i, 1);\n      return fetch(\n        process.env.REACT_APP_API +\n          \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          return fetch(\n            process.env.REACT_APP_API +\n              \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow/\" +\n              responseJson.id,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({ name: systemName })\n            }\n          )\n            .then(response => response.json())\n            .then(responseJson => {});\n        });\n    }\n  }\n\n  addClick(event) {\n    if (event.target.id == \"system\")\n      this.setState(prevState => ({ system: [...prevState.system, \"\"] }));\n    else this.setState(prevState => ({ flow: [...prevState.flow, \"\"] }));\n  }\n\n  removeClick(i) {\n    //let value = [...this.state.values];\n    //value.splice(i, 1);\n    //this.setState({ values : value });\n    // console.log(values)\n  }\n\n  systemSelected(systemId) {\n    this.props.systemSelected(systemId);\n  }\n\n  systemMenuToggle() {\n    this.setState(state => ({ systemsCollapse: !state.systemsCollapse }));\n  }\n\n  flowsToggle() {\n    this.setState(state => ({ flowsCollapse: !state.flowsCollapse }));\n  }\n\n  systemToggle(systemId) {\n    this.systemSelected(systemId);\n    this.setState({ collapse: !this.state.collapse });\n    if (this.state.currentSystemIndex == systemId) {\n      this.state.currentSystemIndex = 0;\n    } else {\n      this.setState({ currentSystemIndex: systemId });\n      this.setState({ showsystemDetail: true });\n      return fetch(\n        process.env.REACT_APP_API +\n          \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/f1dc3452-e1a5-4a4e-9ae4-5fee3b34b647\",\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n        .then(response => response.json())\n        .then(responseJson => {\n          this.setState({ systemDetails: responseJson });\n        });\n    }\n  }\n\n  subSystemToggle(systemId) {\n    this.setState({ collapseSubSystem: !this.state.collapseSubSystem });\n    if (this.state.currentSubSystemIndex == systemId) {\n      this.state.currentSubSystemIndex = 0;\n    } else {\n      this.setState({ currentSubSystemIndex: systemId });\n    }\n  }\n\n  searchSystem(event) {\n    var searchedPara = document.querySelector(\".systems\");\n    var words = event.currentTarget.value;\n    var regex = RegExp(words, \"gi\");\n    var replacement = \"<span>\" + words + \"</span>\";\n    var newHTML = searchedPara.textContent.replace(regex, replacement);\n    searchedPara.innerHTML = newHTML;\n  }\n  toggle() {\n    this.setState({ addClass: !this.state.addClass });\n  }\n  removeToggle() {\n    this.setState({ romoveClass: !this.state.romoveClass });\n  }\n  render() {\n    let boxClass = [\"_search\"];\n    if (this.state.addClass) {\n      boxClass.push(\"active\");\n    }\n    let box1Class = [\"_search\"];\n    if (this.state.romoveClass) {\n      box1Class.push(\"active\");\n    }\n    var rotateCaret = {\n\t\t\tdisplay: this.state.rotateCaret ? \"block\" : \"none\"\n\t\t};\n    return (\n      <div className=\"org_browser\" onClick={this.removeToggle.bind(this)}>\n        <h3 className=\"text-center text-white\">\n          Systems and Flows <i class=\"fas fa-times system-down-icon\" />\n        </h3>\n        <VerticalScrollbars style={{ width: 350 }} autoHide>\n          <div className=\"browser_wrapper\">\n            <div className=\"org-selector\">\n              <p className=\"text-white text-left\">Selector</p>\n              <div className={(boxClass.join(\" \"), box1Class.join(\" \"))}>\n                <input\n                  type=\"text\"\n                  className=\"search-input\"\n                  onKeyUp={this.searchSystem}\n                  onClick={this.toggle.bind(this)}\n                />\n                <span className=\"icon icon-Search search-icon\" />\n              </div>\n            </div>\n            <div className=\"systems w-100 d-inline-block montserrat text-grey\">\n              <div className=\"system-search montserrat\" />\n              <VerticalScrollbars style={{ height: 220 }}>\n                <p\n                  className=\"text-white click\"\n                  onClick={this.systemMenuToggle}\n                  style={{ marginBottom: \"1rem\" }}\n                >\n                  Systems <i className=\"fas fa-chevron-down system-down-icon\" />\n                  <i\n                    className=\"fas fa-plus system-down-icon\"\n                    id=\"system\"\n                    onClick={this.addClick.bind(this)}\n                  />\n                </p>\n                {this.createSystem()}\n\n                <Collapse isOpen={this.state.systemsCollapse}>\n                  {this.state.systemData.systems\n                    ? this.state.systemData.systems.map((item, index) => {\n                        return (\n                          <div>\n                            <p\n                              className=\"text-grey click\"\n                              onClick={() => this.systemToggle(item.id)}\n                              style={{\n                                marginBottom: \"1rem\",\n                                marginLeft: \"1rem\"\n                              }}\n                            >\n                              <img\n                                src={subsystem}\n                                alt=\"starlify\"\n                                className=\"m-r-15 m-b-5 \"\n                              />\n                              {item.name ? item.name : \"Empty System Name\"}\n                            </p>\n                            <Collapse\n                              isOpen={\n                                this.state.currentSystemIndex == item.id\n                                  ? true\n                                  : false\n                              }\n                            >\n                              {item.services\n                                ? item.services.map((service, i) => {\n                                    return (\n                                      <div id={service.id}>\n                                        <p\n                                          className=\"text-grey click\"\n                                          style={{\n                                            marginBottom: \"1rem\",\n                                            marginLeft: \"3rem\"\n                                          }}\n                                        >\n                                          <img\n                                            src={services}\n                                            alt=\"starlify\"\n                                            className=\"m-r-15 m-b-5 \"\n                                          />\n                                          {service.name\n                                            ? service.name\n                                            : \"Empty Service Name\"}\n                                        </p>\n                                      </div>\n                                    );\n                                  })\n                                : \"\"}\n\n                              {item.references\n                                ? item.references.map((referenceData, i) => {\n                                    return (\n                                      <p\n                                        className=\"text-grey click\"\n                                        style={{\n                                          marginBottom: \"1rem\",\n                                          marginLeft: \"3rem\"\n                                        }}\n                                      >\n                                        <img\n                                          src={reference}\n                                          alt=\"starlify\"\n                                          className=\"m-r-15 m-b-5 \"\n                                        />\n                                        {referenceData.name\n                                          ? referenceData.name\n                                          : \"Empty Reference Name\"}\n                                      </p>\n                                    );\n                                  })\n                                : \"\"}\n                              {item.subSystems\n                                ? item.subSystems.map((subSystems, i) => {\n                                    return (\n                                      <div>\n                                        <p\n                                          className=\"text-grey click\"\n                                          onClick={() =>\n                                            this.subSystemToggle(subSystems.id)\n                                          }\n                                          style={{\n                                            marginBottom: \"1rem\",\n                                            marginLeft: \"3rem\"\n                                          }}\n                                        >\n                                          <img\n                                            src={subsystem}\n                                            alt=\"starlify\"\n                                            className=\"m-r-15 m-b-5 \"\n                                          />\n                                          {subSystems.name\n                                            ? subSystems.name\n                                            : \"Empty Subsystem Name\"}\n                                        </p>\n                                        <Collapse\n                                          isOpen={\n                                            this.state.currentSubSystemIndex ==\n                                            subSystems.id\n                                              ? true\n                                              : false\n                                          }\n                                        >\n                                          {subSystems.services\n                                            ? subSystems.services.map(\n                                                (service, i) => {\n                                                  return (\n                                                    <div id={service.id}>\n                                                      <p\n                                                        className=\"text-grey click\"\n                                                        style={{\n                                                          marginBottom: \"1rem\",\n                                                          marginLeft: \"4rem\"\n                                                        }}\n                                                      >\n                                                        <img\n                                                          src={services}\n                                                          alt=\"starlify\"\n                                                          className=\"m-r-15 m-b-5 \"\n                                                        />\n                                                        {service.name\n                                                          ? service.name\n                                                          : \"Empty Service Name\"}\n                                                      </p>\n                                                    </div>\n                                                  );\n                                                }\n                                              )\n                                            : \"\"}\n                                          {subSystems.references\n                                            ? subSystems.references.map(\n                                                (references, i) => {\n                                                  return (\n                                                    <div id={references.id}>\n                                                      <p\n                                                        className=\"text-grey click\"\n                                                        style={{\n                                                          marginBottom: \"1rem\",\n                                                          marginLeft: \"4rem\"\n                                                        }}\n                                                      >\n                                                        <img\n                                                          src={reference}\n                                                          alt=\"starlify\"\n                                                          className=\"m-r-15 m-b-5 \"\n                                                        />\n                                                        {references.name\n                                                          ? reference.name\n                                                          : \"Empty Reference Name\"}\n                                                      </p>\n                                                    </div>\n                                                  );\n                                                }\n                                              )\n                                            : \"\"}\n                                        </Collapse>\n                                      </div>\n                                    );\n                                  })\n                                : \"\"}\n                            </Collapse>\n                          </div>\n                        );\n                      })\n                    : \"\"}\n                </Collapse>\n              </VerticalScrollbars>\n            </div>\n            <div className=\"flows\">\n              <VerticalScrollbars style={{ height: 200 }}>\n                <p\n                  className=\"text-white click\"\n                  onClick={this.flowsToggle}\n                  style={{ marginBottom: \"1rem\" }}\n                >\n                  Flows <i class=\"fas fa-chevron-down system-down-icon\" />\n                  <i\n                    class=\"fas fa-plus system-down-icon\"\n                    id=\"flows\"\n                    onClick={this.addClick.bind(this)}\n                  />\n                </p>\n                {this.createFlow()}\n                <Collapse isOpen={this.state.flowsCollapse}>\n                  {this.state.systemData.flow\n                    ? this.state.systemData.flow.map((item, index) => {\n                        return (\n                          <div>\n                            <p\n                              className=\"text-grey click\"\n                              style={{\n                                marginBottom: \"1rem\",\n                                marginLeft: \"2rem\"\n                              }}\n                            >\n                              {item.name ? item.name : \"Empty System Name\"}\n                            </p>\n                          </div>\n                        );\n                      })\n                    : \"\"}\n                </Collapse>\n              </VerticalScrollbars>\n            </div>\n          </div>\n        </VerticalScrollbars>\n      </div>\n    );\n  }\n}\n\nexport default Systems;\n"]},"metadata":{},"sourceType":"module"}