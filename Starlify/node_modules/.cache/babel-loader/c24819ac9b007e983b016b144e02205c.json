{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/_partials/usermenu/Usermenu.js\";\nimport React, { Component } from \"react\";\nimport { FormGroup, Input, TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from \"reactstrap\";\nimport photo from \"../../_assets/images/photo.jpg\";\nimport { connect } from \"react-redux\";\nimport { fetchModel } from \"../../store/model/modelActions\";\nimport { fetchFlows } from \"../../store/system/systemActions\";\nimport classnames from 'classnames';\n\nclass Usermenu extends Component {\n  constructor() {\n    super();\n\n    this.domainChange = e => {\n      this.props.onDomainSelect(e);\n\n      if (e.target.value !== \"\") {\n        this.fetchModels(e.target.value);\n      } else {\n        this.setState({\n          models: []\n        });\n      }\n    };\n\n    this.fetchModels = domainID => {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainID).then(res => res.json()).then(async domain => {\n        this.setState({\n          models: domain.links\n        });\n      });\n    };\n\n    this.fetchModels = this.fetchModels.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      domains: [],\n      models: [],\n      activeTab: '1'\n    };\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  componentDidMount() {\n    fetch(process.env.REACT_APP_API + \"/hypermedia/domains\").then(res => res.json()).then(result => {\n      this.setState({\n        domains: result\n      });\n    });\n\n    if (this.props.domain !== \"\") {\n      this.fetchModels(this.props.domain);\n    }\n  }\n\n  render() {\n    const domains = this.state.domains;\n    const models = this.state.models;\n    return React.createElement(\"div\", {\n      className: \"usermenu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"usermenuHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"8\",\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Your Profile\"), React.createElement(Col, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"profileSwitch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: classnames({\n        active: this.state.activeTab === '1'\n      }),\n      onClick: () => {\n        this.toggle('1');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"fas fa-user text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      className: classnames({\n        active: this.state.activeTab === '2'\n      }),\n      onClick: () => {\n        this.toggle('2');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"fas fa-bell text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))))), React.createElement(TabContent, {\n      activeTab: this.state.activeTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tabId: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"userarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: photo,\n      alt: \"starlify\",\n      className: \"photo-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), \" \", React.createElement(\"span\", {\n      className: \"name text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Name Surname\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"text-grey no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-cog submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), \"Settings\"), React.createElement(\"li\", {\n      className: \"text-grey no-border m-t-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-newspaper submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), \"News\"), React.createElement(\"li\", {\n      className: \"text-grey no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-question-circle submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), \"Help\"), React.createElement(\"li\", {\n      className: \"text-grey no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-sign-out-alt submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), \"Sign out\")))), React.createElement(TabPane, {\n      tabId: \"2\",\n      classnames: \"notificationWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      classnames: \"newsCatHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"New\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain,\n    model: state.model.modelUri\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onDomainSelect: e => {\n      const action = {\n        type: \"SELECTDOMAIN\",\n        domain: e.target.value\n      };\n      dispatch(action);\n    },\n    onModelSelect: e => {\n      const selectedIndex = e.target.options.selectedIndex;\n      const modelId = e.target.options[selectedIndex].getAttribute(\"data-key\");\n      const action = {\n        type: \"SELECTMODEL\",\n        model: e.target.value,\n        modelId: modelId\n      };\n      dispatch(fetchModel(modelId));\n      dispatch(fetchFlows(modelId));\n      dispatch(action);\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Usermenu);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/_partials/usermenu/Usermenu.js"],"names":["React","Component","FormGroup","Input","TabContent","TabPane","Nav","NavItem","NavLink","Card","Button","CardTitle","CardText","Row","Col","photo","connect","fetchModel","fetchFlows","classnames","Usermenu","constructor","domainChange","e","props","onDomainSelect","target","value","fetchModels","setState","models","domainID","fetch","process","env","REACT_APP_API","then","res","json","domain","links","bind","toggle","state","domains","activeTab","tab","componentDidMount","result","render","active","mapStateToProps","model","modelUri","mapDispatchToProps","dispatch","action","type","onModelSelect","selectedIndex","options","modelId","getAttribute"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { FormGroup, Input, TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from \"reactstrap\";\nimport photo from \"../../_assets/images/photo.jpg\";\nimport { connect } from \"react-redux\";\nimport { fetchModel } from \"../../store/model/modelActions\";\nimport { fetchFlows } from \"../../store/system/systemActions\";\nimport classnames from 'classnames';\n\nclass Usermenu extends Component {\n  constructor() {\n    super();\n    this.fetchModels = this.fetchModels.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      domains: [],\n      models: [],\n      activeTab: '1'\n    };\n  }\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n  componentDidMount() {\n    fetch(process.env.REACT_APP_API + \"/hypermedia/domains\")\n      .then(res => res.json())\n      .then(result => {\n        this.setState({ domains: result });\n      });\n    if (this.props.domain !== \"\") {\n      this.fetchModels(this.props.domain);\n    }\n  }\n\n  domainChange = e => {\n    this.props.onDomainSelect(e);\n    if (e.target.value !== \"\") {\n      this.fetchModels(e.target.value);\n    } else {\n      this.setState({ models: [] });\n    }\n  };\n\n  fetchModels = domainID => {\n    fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainID)\n      .then(res => res.json())\n      .then(async domain => {\n        this.setState({ models: domain.links });\n      });\n  };\n\n  render() {\n    const domains = this.state.domains;\n    const models = this.state.models;\n    return (\n      <div className=\"usermenu\">\n        <Row className=\"usermenuHeader\">\n          <Col md=\"8\" className=\"text-white\">Your Profile</Col>\n          <Col md=\"4\">\n            <ul className=\"profileSwitch\">\n              <li  className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}> <i className=\"fas fa-user text-white\"></i></li>\n              <li className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}> <i className=\"fas fa-bell text-white\"></i></li>\n            </ul>\n          </Col>\n        </Row>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n          <ul>\n          <li className=\"userarea\">\n            <img src={photo} alt=\"starlify\" className=\"photo-icon\" />{\" \"}\n            <span className=\"name text-white\">Name Surname</span>\n          </li>\n              <ul>\n              <li className=\"text-grey no-border\">\n              <i className=\"fas fa-cog submenu-icon\" />\n              Settings\n            </li>\n            <li className=\"text-grey no-border m-t-15\">\n            <i className=\"fas fa-newspaper submenu-icon\" />\n              News\n            </li>\n            <li className=\"text-grey no-border\">\n            <i className=\"fas fa-question-circle submenu-icon\" />\n              Help\n            </li>\n            \n            <li className=\"text-grey no-border\">\n            <i className=\"fas fa-sign-out-alt submenu-icon\"/>\n              Sign out\n            </li>\n          </ul>\n        </ul>\n          </TabPane>\n          <TabPane tabId=\"2\" classnames=\"notificationWrapper\">\n            <p classnames=\"newsCatHead\">New</p>\n            <ul>\n              <li></li>\n            </ul>\n            <ul>\n              <li></li>\n            </ul>\n          </TabPane>\n        </TabContent>\n        \n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain,\n    model: state.model.modelUri\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onDomainSelect: e => {\n      const action = { type: \"SELECTDOMAIN\", domain: e.target.value };\n      dispatch(action);\n    },\n\n    onModelSelect: e => {\n      const selectedIndex = e.target.options.selectedIndex;\n      const modelId = e.target.options[selectedIndex].getAttribute(\"data-key\");\n      const action = {\n        type: \"SELECTMODEL\",\n        model: e.target.value,\n        modelId: modelId\n      };\n      dispatch(fetchModel(modelId));\n      dispatch(fetchFlows(modelId));\n      dispatch(action);\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Usermenu);\n"]},"metadata":{},"sourceType":"module"}