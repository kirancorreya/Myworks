{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/_partials/RightButtons.js\";\nimport React, { Component } from 'react';\nimport { toggleFullScreen } from '../_helpers/shortkeys';\nimport { Tooltip } from 'reactstrap';\n\nclass RightButtons extends Component {\n  constructor() {\n    super();\n    this.updateFullscreen = this.updateFullscreen.bind(this);\n    this.updateReload = this.updateReload.bind(this);\n    this.state = {\n      fullscreen: false,\n      tooltipScreen: false,\n      tooltipReset: false\n    };\n  }\n\n  updateFullscreen() {\n    toggleFullScreen();\n    const currentState = this.state.fullscreen;\n    this.setState({\n      fullscreen: !currentState\n    });\n  }\n\n  updateReload() {\n    window.location.reload(true);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"RightButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"right-btns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.updateFullscreen,\n      id: \"screenbtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.state.fullscreen ? 'icon icon-ExitFullScreen' : 'icon icon-FullScreen',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(Tooltip, {\n      placement: \"right\",\n      isOpen: this.state.tooltipScreen,\n      target: \"screenbtn\",\n      toggle: () => {\n        this.setState({\n          tooltipScreen: !this.state.tooltipScreen\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Fullscreen\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.updateReload,\n      id: \"resetbtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon icon-Restart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(Tooltip, {\n      placement: \"right\",\n      isOpen: this.state.tooltipReset,\n      toggle: () => {\n        this.setState({\n          tooltipReset: !this.state.tooltipReset\n        });\n      },\n      target: \"resetbtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Reset View\"))));\n  }\n\n}\n\nexport default RightButtons;","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/_partials/RightButtons.js"],"names":["React","Component","toggleFullScreen","Tooltip","RightButtons","constructor","updateFullscreen","bind","updateReload","state","fullscreen","tooltipScreen","tooltipReset","currentState","setState","window","location","reload","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,gBAAR,QAA+B,uBAA/B;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAEpCI,EAAAA,WAAW,GAAE;AACZ;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,KAAL,GAAa;AACZC,MAAAA,UAAU,EAAE,KADA;AAEZC,MAAAA,aAAa,EAAE,KAFH;AAGZC,MAAAA,YAAY,EAAE;AAHF,KAAb;AAKA;;AAEDN,EAAAA,gBAAgB,GAAE;AACjBJ,IAAAA,gBAAgB;AAChB,UAAMW,YAAY,GAAG,KAAKJ,KAAL,CAAWC,UAAhC;AACM,SAAKI,QAAL,CAAc;AAAEJ,MAAAA,UAAU,EAAE,CAACG;AAAf,KAAd;AACN;;AACDL,EAAAA,YAAY,GAAG;AACdO,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACA;;AAEAC,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,OAAO,EAAE,KAAKZ,gBAAtB;AAAwC,MAAA,EAAE,EAAC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuD;AAAM,MAAA,SAAS,EAAE,KAAKG,KAAL,CAAWC,UAAX,GAAwB,0BAAxB,GAAoD,sBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvD,CADD,EAEC,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,OAAnB;AAA2B,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,aAA9C;AAA6D,MAAA,MAAM,EAAC,WAApE;AAAgF,MAAA,MAAM,EAAE,MAAM;AAAE,aAAKG,QAAL,CAAc;AAAEH,UAAAA,aAAa,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAA7B,SAAd;AAA2D,OAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,CADK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,OAAO,EAAE,KAAKH,YAAtB;AAAoC,MAAA,EAAE,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkD;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlD,CADD,EAEC,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,OAAnB;AAA2B,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWG,YAA9C;AAA4D,MAAA,MAAM,EAAE,MAAM;AAAE,aAAKE,QAAL,CAAc;AAAEF,UAAAA,YAAY,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAA5B,SAAd;AAAyD,OAArI;AAAuI,MAAA,MAAM,EAAC,UAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,CALK,CADF,CADF;AAcD;;AAtCkC;;AAyCrC,eAAeR,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport {toggleFullScreen} from '../_helpers/shortkeys';\nimport { Tooltip } from 'reactstrap';\n\nclass RightButtons extends Component {\n\t\n\tconstructor(){\n\t\tsuper();\n\t\tthis.updateFullscreen = this.updateFullscreen.bind(this);\n\t\tthis.updateReload = this.updateReload.bind(this);\n\t\tthis.state = {\n\t\t\tfullscreen: false,\n\t\t\ttooltipScreen: false,\n\t\t\ttooltipReset: false,\n\t\t};\n\t}\n\n\tupdateFullscreen(){\n\t\ttoggleFullScreen();\n\t\tconst currentState = this.state.fullscreen;\n        this.setState({ fullscreen: !currentState });\n\t}\n\tupdateReload (){\n\t\twindow.location.reload(true);\n\t}\n\n  render() {\n\t\n    return (\n      <div className=\"RightButtons\">\n        <ul className=\"right-btns\">\n\t\t\t<li>\n\t\t\t\t<button onClick={this.updateFullscreen} id=\"screenbtn\"><span className={this.state.fullscreen ? 'icon icon-ExitFullScreen': 'icon icon-FullScreen'}></span></button>\n\t\t\t\t<Tooltip placement=\"right\" isOpen={this.state.tooltipScreen} target=\"screenbtn\" toggle={() => { this.setState({ tooltipScreen: !this.state.tooltipScreen})}}>Fullscreen</Tooltip>\n\t\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<button onClick={this.updateReload} id=\"resetbtn\"><span className=\"icon icon-Restart\"></span></button>\n\t\t\t\t<Tooltip placement=\"right\" isOpen={this.state.tooltipReset} toggle={() => { this.setState({ tooltipReset: !this.state.tooltipReset})}} target=\"resetbtn\" >Reset View</Tooltip>\n\t\t\t</li>\n\t\t</ul>\n      </div>\n    )\n  }\n}\n\nexport default RightButtons;\n"]},"metadata":{},"sourceType":"module"}