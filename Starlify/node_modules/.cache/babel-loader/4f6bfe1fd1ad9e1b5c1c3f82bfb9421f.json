{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/ModalAcess.js\";\nimport React, { Component } from \"react\";\nimport { Table, Modal, ModalBody, Input, FormGroup } from \"reactstrap\";\nimport pen from \"../../../_assets/icons/icons/edit-icon.svg\";\nimport list from \"../../../_assets/icons/icons/List-icon.svg\";\nimport { connect } from \"react-redux\";\n\nclass ModalAcess extends Component {\n  constructor(props) {\n    super(props);\n\n    this.modalToggle = () => {\n      this.setState({\n        popup: !this.state.popup,\n        eventType: null\n      });\n    };\n\n    this.selectModel = e => {\n      this.setState({\n        modeluri: e.target.value\n      });\n      fetch(process.env.REACT_APP_API + e.target.value).then(res => res.json()).then(result => {\n        this.setState({\n          model: result,\n          popup: false,\n          accessEditor: true\n        });\n      });\n      var modelArr = e.target.value.split(\"/\");\n      this.fetchModelGrants(modelArr[2]);\n      this.fetchDivisions(this.props.domain);\n    };\n\n    this.fetchModelGrants = modelId => {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/grant/\" + modelId).then(res => res.json()).then(json => {\n        this.setState({\n          grants: json\n        });\n      });\n    };\n\n    this.fetchDivisions = domainId => {\n      return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId).then(res => res.json()).then(result => {\n        var org = result.organisation;\n        fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + org.id + \"/organisations\").then(res => res.json()).then(json => {\n          var organisations = json;\n\n          for (var i = 0; i < organisations.length; i++) {\n            let org = organisations[i];\n            org[\"teams\"] = [];\n\n            if (org._links && org._links.length !== 0) {\n              this.fetchTeams(domainId, this.state.model.id, org.id).then(teams => org[\"teams\"] = teams);\n            }\n          }\n\n          this.setState({\n            divisions: organisations\n          });\n          return true;\n        });\n      });\n    };\n\n    this.fetchTeams = (domainId, modelId, orgid) => {\n      return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + orgid + \"/organisations\").then(res => res.json()).then(json => {\n        var organisations = json;\n\n        for (var i = 0; i < organisations.length; i++) {\n          let org = organisations[i];\n          org[\"persons\"] = [];\n\n          if (org._links && org._links.length !== 0) {\n            this.fetchPersons(domainId, modelId, org.id).then(persons => org[\"persons\"] = persons);\n          }\n        }\n\n        return organisations;\n      });\n    };\n\n    this.fetchPersons = (domainId, modelId, orgid) => {\n      return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + orgid + \"/persons\").then(res => res.json()).then(persons => {\n        return persons;\n      });\n    };\n\n    this.onGrantChange = (e, grantid) => {\n      if (e.target.checked) {\n        this.addGrantAccess(this.props.domain, this.state.model.id, grantid, e.target.value);\n      } else {\n        this.deleteGrantAccess(this.props.domain, this.state.model.id, grantid, e.target.value);\n      }\n    };\n\n    this.addGrantAccess = (domainId, modelId, grantid, value) => {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/grant/\" + modelId + \"/\" + grantid + \"/permission/\" + value, {\n        method: \"POST\"\n      }).then(result => {\n        this.fetchModelGrants(this.state.model.id);\n      });\n    };\n\n    this.deleteGrantAccess = (domainId, modelId, grantid, value) => {\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/grant/\" + modelId + \"/\" + grantid + \"/permission/\" + value, {\n        method: \"DELETE\"\n      }).then(result => {\n        this.fetchModelGrants(this.state.model.id);\n      });\n    };\n\n    this.close = this.close.bind(this);\n    this.fetchDivisions = this.fetchDivisions.bind(this);\n    this.fetchTeams = this.fetchTeams.bind(this);\n    this.fetchPersons = this.fetchPersons.bind(this);\n    this.fetchModelGrants = this.fetchModelGrants.bind(this);\n    this.state = {\n      modeluri: \"\",\n      model: null,\n      models: [],\n      chosenModel: null,\n      divisions: [],\n      grants: [],\n      accessEditor: false,\n      popup: false,\n      eventType: null\n    };\n  }\n\n  close(type) {\n    this.props.close(type);\n  }\n\n  componentDidMount() {\n    var domainID = this.props.domain;\n\n    if (domainID !== \"\") {\n      fetch(process.env.REACT_APP_API + \"/domain/\" + domainID).then(res => res.json()).then(result => {\n        this.setState({\n          models: result.links\n        });\n      }).catch(error => {\n        this.setState({\n          models: []\n        });\n      });\n    }\n  }\n\n  render() {\n    const models = this.state.models;\n    return React.createElement(\"div\", {\n      className: \"browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.popup,\n      toggle: this.modalToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, this.state.eventType === \"model-choose\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"text-center m-b-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Choose model\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      onChange: this.selectModel.bind(this),\n      value: this.state.modeluri,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Select Model\"), models.map(item => React.createElement(\"option\", {\n      key: item.uri,\n      value: item.uri,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, item.title))))))), this.state.accessEditor === false && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_header text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-key submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Models Access\"), React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon\",\n      onClick: () => this.close(\"modelAccess\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn grey-btn\",\n      onClick: () => {\n        this.setState({\n          eventType: \"model-choose\",\n          popup: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Choose model \", React.createElement(\"img\", {\n      src: list,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"browser_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center text-white m-t-65\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"So you need to give access to your division, teams or developers?\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), \"You\\u2019ve come to the right place.\"), React.createElement(\"p\", {\n      className: \"text-center text-white m-t-65\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Just click the Choose model button and choose what \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), \"model you need to work in and then you can start adding \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), \"your division, teams and developers.\"), React.createElement(\"h1\", {\n      className: \"text-center text-white m-t-65\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"No chosen model\"))), this.state.accessEditor === true && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_header text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-key submenu-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Models Access\"), React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon\",\n      onClick: () => this.close(\"modelAccess\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \" \", \"Edit models access for \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, this.state.model.name), \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn grey-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Change model \", React.createElement(\"img\", {\n      src: pen,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"browser_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"division_model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_body_header text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Divisions\")), React.createElement(\"div\", {\n      className: \"browser_body_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"50%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      width: \"25%\",\n      className: \"text-white text-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Read\"), React.createElement(\"th\", {\n      width: \"25%\",\n      className: \"text-white text-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Write\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, this.state.divisions && this.state.divisions.length !== 0 && this.state.divisions.map((division, index) => {\n      const perms = [\"RESOURCE_ANY\", \"RESOURCE_READ\"];\n      var divRead = false;\n      var divWrite = false;\n      this.state.grants.forEach((item, i) => {\n        if (item.principal.id === division.id) {\n          divRead = perms.some(r => item.permissions.includes(r)) ? \"checked\" : \"\";\n          divWrite = item.permissions.includes(\"RESOURCE_ANY\") ? \"checked\" : \"\";\n        }\n      });\n      return React.createElement(\"tr\", {\n        key: division.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"50%\",\n        className: \"text-grey text-left \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, division.name, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"test\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"test\"))))), React.createElement(\"td\", {\n        width: \"25%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"customCheckbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"read_\" + division.id,\n        checked: divRead,\n        defaultValue: \"RESOURCE_READ\",\n        onChange: e => {\n          this.onGrantChange(e, division.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"read_\" + division.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"test\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"test\"))))), React.createElement(\"td\", {\n        width: \"25%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"customCheckbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultValue: \"RESOURCE_ANY\",\n        id: \"write_\" + division.id,\n        checked: divWrite,\n        onChange: e => {\n          this.onGrantChange(e, division.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"write_\" + division.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"test\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"test\"))))));\n    }))))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain\n  };\n}\n\nexport default connect(mapStateToProps)(ModalAcess);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/ModalAcess.js"],"names":["React","Component","Table","Modal","ModalBody","Input","FormGroup","connect","ModalAcess","constructor","props","modalToggle","setState","popup","state","eventType","selectModel","e","modeluri","target","value","fetch","process","env","REACT_APP_API","then","res","json","result","model","accessEditor","modelArr","split","fetchModelGrants","fetchDivisions","domain","modelId","grants","domainId","org","organisation","id","organisations","i","length","_links","fetchTeams","teams","divisions","orgid","fetchPersons","persons","onGrantChange","grantid","checked","addGrantAccess","deleteGrantAccess","method","close","bind","models","chosenModel","type","componentDidMount","domainID","links","catch","error","render","map","item","uri","title","list","name","pen","division","index","perms","divRead","divWrite","forEach","principal","some","r","permissions","includes","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Modal, ModalBody, Input, FormGroup } from \"reactstrap\";\nimport pen from \"../../../_assets/icons/icons/edit-icon.svg\";\nimport list from \"../../../_assets/icons/icons/List-icon.svg\";\nimport { connect } from \"react-redux\";\n\nclass ModalAcess extends Component {\n  constructor(props) {\n    super(props);\n    this.close = this.close.bind(this);\n    this.fetchDivisions = this.fetchDivisions.bind(this);\n    this.fetchTeams = this.fetchTeams.bind(this);\n    this.fetchPersons = this.fetchPersons.bind(this);\n    this.fetchModelGrants = this.fetchModelGrants.bind(this);\n    this.state = {\n      modeluri: \"\",\n      model: null,\n      models: [],\n      chosenModel: null,\n      divisions: [],\n      grants: [],\n      accessEditor: false,\n      popup: false,\n      eventType: null\n    };\n  }\n  close(type) {\n    this.props.close(type);\n  }\n\n  modalToggle = () => {\n    this.setState({\n      popup: !this.state.popup,\n      eventType: null\n    });\n  };\n\n  selectModel = e => {\n    this.setState({ modeluri: e.target.value });\n    fetch(process.env.REACT_APP_API + e.target.value)\n      .then(res => res.json())\n      .then(result => {\n        this.setState({\n          model: result,\n          popup: false,\n          accessEditor: true\n        });\n      });\n    var modelArr = e.target.value.split(\"/\");\n    this.fetchModelGrants(modelArr[2]);\n    this.fetchDivisions(this.props.domain);\n  };\n\n  fetchModelGrants = modelId => {\n    fetch(\n      process.env.REACT_APP_API +\n        \"/hypermedia/domain/\" +\n        this.props.domain +\n        \"/grant/\" +\n        modelId\n    )\n      .then(res => res.json())\n      .then(json => {\n        this.setState({ grants: json });\n      });\n  };\n\n  fetchDivisions = domainId => {\n    return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId)\n      .then(res => res.json())\n      .then(result => {\n        var org = result.organisation;\n        fetch(\n          process.env.REACT_APP_API +\n            \"/hypermedia/domain/\" +\n            domainId +\n            \"/organisation/\" +\n            org.id +\n            \"/organisations\"\n        )\n          .then(res => res.json())\n          .then(json => {\n            var organisations = json;\n            for (var i = 0; i < organisations.length; i++) {\n              let org = organisations[i];\n              org[\"teams\"] = [];\n              if (org._links && org._links.length !== 0) {\n                this.fetchTeams(domainId, this.state.model.id, org.id).then(\n                  teams => (org[\"teams\"] = teams)\n                );\n              }\n            }\n            this.setState({\n              divisions: organisations\n            });\n            return true;\n          });\n      });\n  };\n\n  fetchTeams = (domainId, modelId, orgid) => {\n    return fetch(\n      process.env.REACT_APP_API +\n        \"/hypermedia/domain/\" +\n        domainId +\n        \"/organisation/\" +\n        orgid +\n        \"/organisations\"\n    )\n      .then(res => res.json())\n      .then(json => {\n        var organisations = json;\n        for (var i = 0; i < organisations.length; i++) {\n          let org = organisations[i];\n          org[\"persons\"] = [];\n          if (org._links && org._links.length !== 0) {\n            this.fetchPersons(domainId, modelId, org.id).then(\n              persons => (org[\"persons\"] = persons)\n            );\n          }\n        }\n        return organisations;\n      });\n  };\n\n  fetchPersons = (domainId, modelId, orgid) => {\n    return fetch(\n      process.env.REACT_APP_API +\n        \"/hypermedia/domain/\" +\n        domainId +\n        \"/organisation/\" +\n        orgid +\n        \"/persons\"\n    )\n      .then(res => res.json())\n      .then(persons => {\n        return persons;\n      });\n  };\n\n  onGrantChange = (e, grantid) => {\n    if (e.target.checked) {\n      this.addGrantAccess(\n        this.props.domain,\n        this.state.model.id,\n        grantid,\n        e.target.value\n      );\n    } else {\n      this.deleteGrantAccess(\n        this.props.domain,\n        this.state.model.id,\n        grantid,\n        e.target.value\n      );\n    }\n  };\n\n  addGrantAccess = (domainId, modelId, grantid, value) => {\n    fetch(\n      process.env.REACT_APP_API +\n        \"/hypermedia/domain/\" +\n        domainId +\n        \"/grant/\" +\n        modelId +\n        \"/\" +\n        grantid +\n        \"/permission/\" +\n        value,\n      { method: \"POST\" }\n    ).then(result => {\n      this.fetchModelGrants(this.state.model.id);\n    });\n  };\n\n  deleteGrantAccess = (domainId, modelId, grantid, value) => {\n    fetch(\n      process.env.REACT_APP_API +\n        \"/hypermedia/domain/\" +\n        domainId +\n        \"/grant/\" +\n        modelId +\n        \"/\" +\n        grantid +\n        \"/permission/\" +\n        value,\n      { method: \"DELETE\" }\n    ).then(result => {\n      this.fetchModelGrants(this.state.model.id);\n    });\n  };\n\n  componentDidMount() {\n    var domainID = this.props.domain;\n    if (domainID !== \"\") {\n      fetch(process.env.REACT_APP_API + \"/domain/\" + domainID)\n        .then(res => res.json())\n        .then(result => {\n          this.setState({\n            models: result.links\n          });\n        })\n        .catch(error => {\n          this.setState({ models: [] });\n        });\n    }\n  }\n\n  render() {\n    const models = this.state.models;\n\n    return (\n      <div className=\"browser\">\n        <Modal isOpen={this.state.popup} toggle={this.modalToggle}>\n          <ModalBody>\n            {this.state.eventType === \"model-choose\" && (\n              <div>\n                <h4 className=\"text-center m-b-30\">Choose model</h4>\n                <FormGroup>\n                  <Input\n                    type=\"select\"\n                    onChange={this.selectModel.bind(this)}\n                    value={this.state.modeluri}\n                  >\n                    <option value=\"\">Select Model</option>\n                    {models.map(item => (\n                      <option key={item.uri} value={item.uri}>\n                        {item.title}\n                      </option>\n                    ))}\n                  </Input>\n                </FormGroup>\n              </div>\n            )}\n          </ModalBody>\n        </Modal>\n        {this.state.accessEditor === false && (\n          <div>\n            <div className=\"browser_header text-white\">\n              <i className=\"fas fa-key submenu-icon\"></i>\n              <h3 className=\"d-inline-block\">Models Access</h3>\n              <i\n                className=\"fas fa-times system-down-icon\"\n                onClick={() => this.close(\"modelAccess\")}\n              />\n              <div>\n                <button\n                  className=\"btn grey-btn\"\n                  onClick={() => {\n                    this.setState({ eventType: \"model-choose\", popup: true });\n                  }}\n                >\n                  Choose model <img src={list} alt=\"\" />\n                </button>\n              </div>\n            </div>\n            <div className=\"browser_body\">\n              <p className=\"text-center text-white m-t-65\">\n                So you need to give access to your division, teams or\n                developers?\n                <br />\n                You’ve come to the right place.\n              </p>\n              <p className=\"text-center text-white m-t-65\">\n                Just click the Choose model button and choose what <br />\n                model you need to work in and then you can start adding <br />\n                your division, teams and developers.\n              </p>\n              <h1 className=\"text-center text-white m-t-65\">No chosen model</h1>\n            </div>\n          </div>\n        )}\n\n        {this.state.accessEditor === true && (\n          <div>\n            <div className=\"browser_header text-white\">\n              <i className=\"fas fa-key submenu-icon\"></i>\n              <h3 className=\"d-inline-block\">Models Access</h3>\n              <i\n                className=\"fas fa-times system-down-icon\"\n                onClick={() => this.close(\"modelAccess\")}\n              />\n              <p>\n                {\" \"}\n                Edit models access for <span>{this.state.model.name}</span>{\" \"}\n              </p>\n              <div>\n                <button className=\"btn grey-btn\">\n                  Change model <img src={pen} alt=\"\" />\n                </button>\n              </div>\n            </div>\n            <div className=\"browser_body\">\n              <div className=\"division_model\">\n                <div className=\"browser_body_header text-white\">\n                  <h4 className=\"d-inline-block\">Divisions</h4>\n                </div>\n                <div className=\"browser_body_content\">\n                  <Table className=\"text-white\">\n                    <thead>\n                      <tr>\n                        <th width=\"50%\"></th>\n                        <th width=\"25%\" className=\"text-white text-small\">\n                          Read\n                        </th>\n                        <th width=\"25%\" className=\"text-white text-small\">\n                          Write\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.divisions &&\n                        this.state.divisions.length !== 0 &&\n                        this.state.divisions.map((division, index) => {\n                          const perms = [\"RESOURCE_ANY\", \"RESOURCE_READ\"];\n                          var divRead = false;\n                          var divWrite = false;\n                          this.state.grants.forEach((item, i) => {\n                            if (item.principal.id === division.id) {\n                              divRead = perms.some(r =>\n                                item.permissions.includes(r)\n                              )\n                                ? \"checked\"\n                                : \"\";\n                              divWrite = item.permissions.includes(\n                                \"RESOURCE_ANY\"\n                              )\n                                ? \"checked\"\n                                : \"\";\n                            }\n                          });\n                          return (\n                            <tr key={division.id}>\n                              <td width=\"50%\" className=\"text-grey text-left \">\n                                {division.name}\n                                <ul>\n                                  <li>\n                                    test\n                                    <ul>\n                                      <li>test</li>\n                                    </ul>\n                                  </li>\n                                </ul>\n                              </td>\n                              <td width=\"25%\">\n                                <div className=\"customCheckbox\">\n                                  <input\n                                    type=\"checkbox\"\n                                    id={\"read_\" + division.id}\n                                    checked={divRead}\n                                    defaultValue=\"RESOURCE_READ\"\n                                    onChange={e => {\n                                      this.onGrantChange(e, division.id);\n                                    }}\n                                  />\n                                  <label\n                                    htmlFor={\"read_\" + division.id}\n                                  ></label>\n                                </div>\n                                <ul>\n                                  <li>\n                                    test\n                                    <ul>\n                                      <li>test</li>\n                                    </ul>\n                                  </li>\n                                </ul>\n                              </td>\n                              <td width=\"25%\">\n                                <div className=\"customCheckbox\">\n                                  <input\n                                    type=\"checkbox\"\n                                    defaultValue=\"RESOURCE_ANY\"\n                                    id={\"write_\" + division.id}\n                                    checked={divWrite}\n                                    onChange={e => {\n                                      this.onGrantChange(e, division.id);\n                                    }}\n                                  />\n                                  <label\n                                    htmlFor={\"write_\" + division.id}\n                                  ></label>\n                                </div>\n                                <ul>\n                                  <li>\n                                    test\n                                    <ul>\n                                      <li>test</li>\n                                    </ul>\n                                  </li>\n                                </ul>\n                              </td>\n                            </tr>\n                          );\n                        })}\n                    </tbody>\n                  </Table>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain\n  };\n}\n\nexport default connect(mapStateToProps)(ModalAcess);\n"]},"metadata":{},"sourceType":"module"}