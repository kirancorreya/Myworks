{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/Systems.js\";\nimport React, { Component } from \"react\";\nimport { Collapse } from \"reactstrap\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport subsystem from \"../../../_assets/images/subsystem.png\";\nimport services from \"../../../_assets/images/services.png\";\nimport reference from \"../../../_assets/images/reference.png\";\n\nclass Systems extends Component {\n  constructor(props) {\n    super(props);\n    this.systemMenuToggle = this.systemMenuToggle.bind(this);\n    this.flowsMenuToggle = this.flowsMenuToggle.bind(this);\n    this.systemToggle = this.systemToggle.bind(this);\n    this.flowsToggle = this.flowsToggle.bind(this);\n    this.subSystemToggle = this.subSystemToggle.bind(this);\n    this.searchSystem = this.searchSystem.bind(this);\n    this.systemSelected = this.systemSelected.bind(this);\n    this.close = this.close.bind(this);\n    this.flowsSelected = this.flowsSelected.bind(this);\n    this.state = {\n      addClass: false,\n      romoveClass: false,\n      flowsCollapse: true,\n      systemsCollapse: true,\n      collapseSystem: false,\n      collapseSubSystem: false,\n      currentSystemIndex: \"\",\n      currentSubSystemIndex: \"\",\n      currentFlowIndex: \"\",\n      systemData: {\n        system: \"\"\n      },\n      showsystemDetail: false,\n      showflowDetail: false,\n      systemDetails: {},\n      flowDetails: {},\n      values: [],\n      system: [],\n      flow: [],\n      searchString: \"\",\n      ids: [],\n      search: false,\n      boxClass: ['_search'],\n      box1Class: ['_search']\n    };\n  }\n\n  componentWillMount() {\n    return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(responseJson => {\n      this.setState({\n        systemData: responseJson\n      });\n    });\n  }\n\n  createSystem() {// return this.state.system\n    //     ? this.state.system.map((el, i) => (\n    //         <div key={i} className=\"extra-add\">\n    //             <input\n    //                 type=\"text\"\n    //                 id=\"system\"\n    //                 onBlur={this.handleChange.bind(this, i)}\n    //             />\n    //             <button type=\"button\" onClick={this.removeClick.bind(this, i)}>\n    //                 <i class=\"fas fa-times\" />\n    //             </button>\n    //         </div>\n    //     ))\n    //     : \"\";\n  }\n\n  createFlow() {// return this.state.flow\n    //     ? this.state.flow.map((el, i) => (\n    //         <div key={i} className=\"extra-add\">\n    //             <input\n    //                 type=\"text\"\n    //                 id=\"flow\"\n    //                 onBlur={this.handleChange.bind(this, i)}\n    //             />\n    //             <button type=\"button\" onClick={this.removeClick.bind(this, i)}>\n    //                 <i class=\"fas fa-times\" />\n    //             </button>\n    //         </div>\n    //     ))\n    //     : \"\";\n  }\n\n  handleChange(i, event) {\n    let type = event.target.id;\n    let systemName = event.target.value;\n\n    if (type === \"system\") {\n      let values = [...this.state.system];\n      values[i] = event.target.value;\n      this.setState({\n        values\n      });\n      this.state.system.splice(i, 1);\n      return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/\" + responseJson.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: systemName\n          })\n        }).then(response => response.json()).then(responseJson => {});\n      });\n    } else {\n      let values = [...this.state.flow];\n      values[i] = event.target.value;\n      this.setState({\n        values\n      });\n      this.state.flow.splice(i, 1);\n      return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow/\" + responseJson.id, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: systemName\n          })\n        }).then(response => response.json()).then(responseJson => {});\n      });\n    }\n  }\n\n  addClick(event) {\n    if (event.target.id === \"system\") this.setState(prevState => ({\n      system: [...prevState.system, \"\"]\n    }));else this.setState(prevState => ({\n      flow: [...prevState.flow, \"\"]\n    }));\n  }\n\n  removeClick(i) {//let value = [...this.state.values];\n    //value.splice(i, 1);\n    //this.setState({ values : value });\n    // console.log(values)\n  }\n\n  systemSelected(systemId) {\n    this.props.systemSelected(systemId);\n  }\n\n  close(type) {\n    this.props.close(type);\n  }\n\n  flowsSelected(flowId) {\n    this.props.flowsSelected(flowId);\n  }\n\n  systemMenuToggle() {\n    this.setState(state => ({\n      systemsCollapse: !state.systemsCollapse\n    }));\n  }\n\n  flowsMenuToggle() {\n    this.setState(state => ({\n      flowsCollapse: !state.flowsCollapse\n    }));\n  }\n\n  flowsToggle(flowId) {\n    this.flowsSelected(flowId);\n\n    if (this.state.currentFlowIndex === flowId || !this.state.showflowDetail && this.state.search) {\n      this.setState({\n        search: false\n      });\n      this.setState({\n        currentFlowIndex: 0\n      });\n    } else {\n      this.setState({\n        currentFlowIndex: flowId\n      });\n      this.setState({\n        showflowDetail: true\n      });\n      return fetch(process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow/72ad974f-e4e2-41c2-8838-79ebd240f315\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(responseJson => {\n        this.setState({\n          flowDetail: responseJson\n        });\n      });\n    }\n  }\n\n  systemToggle(systemId) {\n    this.systemSelected(systemId);\n    this.setState({\n      collapse: !this.state.collapse\n    });\n\n    if (this.state.currentSystemIndex === systemId || !this.state.showsystemDetail && this.state.search) {\n      this.setState({\n        search: false\n      });\n      this.setState({\n        currentSystemIndex: 0\n      });\n    } else {\n      this.setState({\n        currentSystemIndex: systemId\n      });\n      this.setState({\n        showsystemDetail: true\n      }); // return fetch(\n      //     process.env.REACT_APP_API +\n      //     \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/f1dc3452-e1a5-4a4e-9ae4-5fee3b34b647\",\n      //     {\n      //         method: \"GET\",\n      //         headers: {\n      //             \"Content-Type\": \"application/json\"\n      //         }\n      //     }\n      // )\n      //     .then(response => response.json())\n      //     .then(responseJson => {\n      //         this.setState({ systemDetails: responseJson });\n      //     });\n    }\n  }\n\n  subSystemToggle(systemId) {\n    this.setState({\n      collapseSubSystem: !this.state.collapseSubSystem\n    });\n\n    if (this.state.currentSubSystemIndex === systemId) {\n      this.setState({\n        currentSubSystemIndex: 0\n      });\n    } else {\n      this.setState({\n        currentSubSystemIndex: systemId\n      });\n    }\n  }\n\n  searchSystem(event) {\n    alert('TEST');\n    this.state.ids = [];\n    this.setState({\n      search: true\n    });\n    var lis = [];\n    var lis = document.getElementById(\"systemListing\").getElementsByTagName(\"span\");\n\n    for (var i = 0; i < lis.length; i++) {\n      var stringText = lis[i].innerHTML.toLowerCase();\n\n      if (event.currentTarget.value && stringText.includes(event.currentTarget.value.toLowerCase())) {\n        this.state.ids.push(lis[i].id);\n      }\n    }\n\n    var lis = document.getElementById(\"FlowListing\").getElementsByTagName(\"span\");\n\n    for (var i = 0; i < lis.length; i++) {\n      var stringText = lis[i].innerHTML;\n\n      if (event.currentTarget.value && stringText.includes(event.currentTarget.value)) {\n        this.state.ids.push(lis[i].id);\n      }\n    }\n  }\n\n  toggle() {\n    document.getElementById(\"searchControl\").className = \"_search active\";\n  }\n\n  removeToggle(event) {\n    if (event.target.value == '') {\n      document.getElementById(\"searchControl\").className = \"_search\";\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"org_browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Systems and Flows\", \" \", React.createElement(\"i\", {\n      className: \"fas fa-times system-down-icon browser_close\",\n      onClick: () => this.close('system'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      style: {\n        width: 350\n      },\n      autoHide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"browser_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"org-selector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Selector\"), React.createElement(\"div\", {\n      className: \"_search\",\n      id: \"searchControl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-input\",\n      onKeyUp: this.searchSystem,\n      onClick: this.toggle.bind(this),\n      onBlur: this.removeToggle.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"icon icon-Search search-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"systems w-100 d-inline-block montserrat text-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"system-search montserrat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-white click\",\n      style: {\n        marginBottom: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.systemMenuToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"Systems\", React.createElement(\"i\", {\n      className: \"fas fa-chevron-down system-down-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    })), React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon\",\n      id: \"system\",\n      onClick: this.addClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      style: {\n        height: 220\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, this.createSystem(), React.createElement(Collapse, {\n      isOpen: this.state.systemsCollapse,\n      id: \"systemListing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, this.state.systemData.systems ? this.state.systemData.systems.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: item.id,\n        className: \"listingItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey click\",\n        onClick: () => this.systemToggle(item.id),\n        style: {\n          marginBottom: \"1rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-chevron-down system-down-icon left text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        src: subsystem,\n        alt: \"starlify\",\n        className: \"m-r-15 m-b-5 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: item.id,\n        className: this.state.ids.includes(item.id) ? \"highlight\" : \"test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, item.name ? item.name : \"Empty System Name\")), React.createElement(Collapse, {\n        isOpen: this.state.currentSystemIndex === item.id || this.state.search ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, item.services ? item.services.map((service, i) => {\n        return React.createElement(\"div\", {\n          id: service.id,\n          key: service.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-grey click\",\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"3rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: services,\n          alt: \"starlify\",\n          className: \"m-r-15 m-b-5 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401\n          },\n          __self: this\n        }), service.name ? service.name : \"Empty Service Name\"));\n      }) : \"\", item.references ? item.references.map((referenceData, i) => {\n        return React.createElement(\"p\", {\n          key: referenceData.id,\n          className: \"text-grey click\",\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"3rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: reference,\n          alt: \"starlify\",\n          className: \"m-r-15 m-b-5 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425\n          },\n          __self: this\n        }), referenceData.name ? referenceData.name : \"Empty Reference Name\");\n      }) : \"\", item.subSystems ? item.subSystems.map((subSystems, i) => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-grey click\",\n          onClick: () => this.subSystemToggle(subSystems.id),\n          style: {\n            marginBottom: \"1rem\",\n            marginLeft: \"3rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: subsystem,\n          alt: \"starlify\",\n          className: \"m-r-15 m-b-5 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 453\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          id: subSystems.id,\n          className: this.state.ids.includes(subSystems.id) ? \"highlight\" : \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458\n          },\n          __self: this\n        }, \" \", subSystems.name ? subSystems.name : \"Empty Subsystem Name\")), React.createElement(Collapse, {\n          isOpen: this.state.currentSubSystemIndex === subSystems.id ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474\n          },\n          __self: this\n        }, subSystems.services ? subSystems.services.map((service, i) => {\n          return React.createElement(\"div\", {\n            id: service.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 487\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-grey click\",\n            style: {\n              marginBottom: \"1rem\",\n              marginLeft: \"4rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 488\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: services,\n            alt: \"starlify\",\n            className: \"m-r-15 m-b-5 \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 496\n            },\n            __self: this\n          }), service.name ? service.name : \"Empty Service Name\"));\n        }) : \"\", subSystems.references ? subSystems.references.map((references, i) => {\n          return React.createElement(\"div\", {\n            id: references.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 514\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-grey click\",\n            style: {\n              marginBottom: \"1rem\",\n              marginLeft: \"4rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 515\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: reference,\n            alt: \"starlify\",\n            className: \"m-r-15 m-b-5 \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 523\n            },\n            __self: this\n          }), references.name ? reference.name : \"Empty Reference Name\"));\n        }) : \"\"));\n      }) : \"\"));\n    }) : \"\"))), React.createElement(\"div\", {\n      className: \"flows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-white click\",\n      style: {\n        marginBottom: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, \"Flows\", React.createElement(\"i\", {\n      className: \"fas fa-chevron-down system-down-icon\",\n      onClick: this.flowsMenuToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fas fa-plus system-down-icon\",\n      id: \"flows\",\n      onClick: this.addClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    })), React.createElement(VerticalScrollbars, {\n      style: {\n        height: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, this.createFlow(), React.createElement(Collapse, {\n      isOpen: this.state.flowsCollapse,\n      id: \"FlowListing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, this.state.systemData.flow ? this.state.systemData.flow.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-grey click\",\n        style: {\n          marginBottom: \"1rem\",\n          marginLeft: \"2rem\"\n        },\n        onClick: () => this.flowsToggle(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: item.id,\n        className: this.state.ids.includes(item.id) ? \"highlight\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, item.name ? item.name : \"Empty Flow Name\")));\n    }) : \"\")))))));\n  }\n\n}\n\nexport default Systems;","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/pages/dashboard/browsers/Systems.js"],"names":["React","Component","Collapse","VerticalScrollbars","subsystem","services","reference","Systems","constructor","props","systemMenuToggle","bind","flowsMenuToggle","systemToggle","flowsToggle","subSystemToggle","searchSystem","systemSelected","close","flowsSelected","state","addClass","romoveClass","flowsCollapse","systemsCollapse","collapseSystem","collapseSubSystem","currentSystemIndex","currentSubSystemIndex","currentFlowIndex","systemData","system","showsystemDetail","showflowDetail","systemDetails","flowDetails","values","flow","searchString","ids","search","boxClass","box1Class","componentWillMount","fetch","process","env","REACT_APP_API","method","headers","then","response","json","responseJson","setState","createSystem","createFlow","handleChange","i","event","type","target","id","systemName","value","splice","body","JSON","stringify","name","addClick","prevState","removeClick","systemId","flowId","flowDetail","collapse","alert","lis","document","getElementById","getElementsByTagName","length","stringText","innerHTML","toLowerCase","currentTarget","includes","push","toggle","className","removeToggle","render","width","marginBottom","height","systems","map","item","index","service","marginLeft","references","referenceData","subSystems"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Collapse } from \"reactstrap\";\nimport VerticalScrollbars from \"../../../_assets/Scrollbars/VerticalScrollbars\";\nimport subsystem from \"../../../_assets/images/subsystem.png\";\nimport services from \"../../../_assets/images/services.png\";\nimport reference from \"../../../_assets/images/reference.png\";\n\nclass Systems extends Component {\n    constructor(props) {\n        super(props);\n        this.systemMenuToggle = this.systemMenuToggle.bind(this);\n        this.flowsMenuToggle = this.flowsMenuToggle.bind(this);\n        this.systemToggle = this.systemToggle.bind(this);\n        this.flowsToggle = this.flowsToggle.bind(this);\n        this.subSystemToggle = this.subSystemToggle.bind(this);\n        this.searchSystem = this.searchSystem.bind(this);\n        this.systemSelected = this.systemSelected.bind(this);\n        this.close = this.close.bind(this);\n        this.flowsSelected = this.flowsSelected.bind(this);\n        this.state = {\n            addClass: false,\n            romoveClass: false,\n            flowsCollapse: true,\n            systemsCollapse: true,\n            collapseSystem: false,\n            collapseSubSystem: false,\n            currentSystemIndex: \"\",\n            currentSubSystemIndex: \"\",\n            currentFlowIndex: \"\",\n            systemData: { system: \"\" },\n            showsystemDetail: false,\n            showflowDetail: false,\n            systemDetails: {},\n            flowDetails: {},\n            values: [],\n            system: [],\n            flow: [],\n            searchString: \"\",\n            ids: [],\n            search: false,\n            boxClass:['_search'],\n            box1Class:['_search']\n        };\n    }\n\n    componentWillMount() {\n        return fetch(\n            process.env.REACT_APP_API + \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c\",\n            {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            }\n        )\n            .then(response => response.json())\n            .then(responseJson => {\n                this.setState({ systemData: responseJson });\n            });\n    }\n\n    createSystem() {\n        // return this.state.system\n        //     ? this.state.system.map((el, i) => (\n        //         <div key={i} className=\"extra-add\">\n        //             <input\n        //                 type=\"text\"\n        //                 id=\"system\"\n        //                 onBlur={this.handleChange.bind(this, i)}\n        //             />\n        //             <button type=\"button\" onClick={this.removeClick.bind(this, i)}>\n        //                 <i class=\"fas fa-times\" />\n        //             </button>\n        //         </div>\n        //     ))\n        //     : \"\";\n    }\n\n    createFlow() {\n        // return this.state.flow\n        //     ? this.state.flow.map((el, i) => (\n        //         <div key={i} className=\"extra-add\">\n        //             <input\n        //                 type=\"text\"\n        //                 id=\"flow\"\n        //                 onBlur={this.handleChange.bind(this, i)}\n        //             />\n        //             <button type=\"button\" onClick={this.removeClick.bind(this, i)}>\n        //                 <i class=\"fas fa-times\" />\n        //             </button>\n        //         </div>\n        //     ))\n        //     : \"\";\n    }\n\n    handleChange(i, event) {\n        let type = event.target.id;\n        let systemName = event.target.value;\n\n        if (type === \"system\") {\n            let values = [...this.state.system];\n            values[i] = event.target.value;\n            this.setState({ values });\n            this.state.system.splice(i, 1);\n            return fetch(\n                process.env.REACT_APP_API +\n                \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system\",\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                }\n            )\n                .then(response => response.json())\n                .then(responseJson => {\n                    return fetch(\n                        process.env.REACT_APP_API +\n                        \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/\" +\n                        responseJson.id,\n                        {\n                            method: \"PATCH\",\n                            headers: {\n                                \"Content-Type\": \"application/json\"\n                            },\n                            body: JSON.stringify({ name: systemName })\n                        }\n                    )\n                        .then(response => response.json())\n                        .then(responseJson => { });\n                });\n        } else {\n            let values = [...this.state.flow];\n            values[i] = event.target.value;\n            this.setState({ values });\n            this.state.flow.splice(i, 1);\n            return fetch(\n                process.env.REACT_APP_API +\n                \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow\",\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                }\n            )\n                .then(response => response.json())\n                .then(responseJson => {\n                    return fetch(\n                        process.env.REACT_APP_API +\n                        \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow/\" +\n                        responseJson.id,\n                        {\n                            method: \"POST\",\n                            headers: {\n                                \"Content-Type\": \"application/json\"\n                            },\n                            body: JSON.stringify({ name: systemName })\n                        }\n                    )\n                        .then(response => response.json())\n                        .then(responseJson => { });\n                });\n        }\n    }\n\n    addClick(event) {\n        if (event.target.id === \"system\")\n            this.setState(prevState => ({ system: [...prevState.system, \"\"] }));\n        else this.setState(prevState => ({ flow: [...prevState.flow, \"\"] }));\n    }\n\n    removeClick(i) {\n        //let value = [...this.state.values];\n        //value.splice(i, 1);\n        //this.setState({ values : value });\n        // console.log(values)\n    }\n\n    systemSelected(systemId) {\n        this.props.systemSelected(systemId);\n    }\n\n    close(type) {\n        this.props.close(type);\n    }\n\n    flowsSelected(flowId) {\n        this.props.flowsSelected(flowId);\n    }\n\n    systemMenuToggle() {\n        this.setState(state => ({ systemsCollapse: !state.systemsCollapse }));\n    }\n    flowsMenuToggle() {\n        this.setState(state => ({ flowsCollapse: !state.flowsCollapse }));\n    }\n\n    flowsToggle(flowId) {\n        this.flowsSelected(flowId);\n        if (\n            this.state.currentFlowIndex === flowId ||\n            (!this.state.showflowDetail && this.state.search)\n        ) {\n            this.setState({ search: false })\n            this.setState({ currentFlowIndex: 0 })\n                ;\n        } else {\n            this.setState({ currentFlowIndex: flowId });\n            this.setState({ showflowDetail: true });\n            return fetch(\n                process.env.REACT_APP_API +\n                \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/flow/72ad974f-e4e2-41c2-8838-79ebd240f315\",\n                {\n                    method: \"GET\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                }\n            )\n                .then(response => response.json())\n                .then(responseJson => {\n                    this.setState({ flowDetail: responseJson });\n                });\n        }\n    }\n\n    systemToggle(systemId) {\n        this.systemSelected(systemId);\n        this.setState({ collapse: !this.state.collapse });\n        if (\n            this.state.currentSystemIndex === systemId ||\n            (!this.state.showsystemDetail && this.state.search)\n        ) {\n            this.setState({ search: false })\n            this.setState({ currentSystemIndex: 0 })\n        } else {\n            this.setState({ currentSystemIndex: systemId });\n            this.setState({ showsystemDetail: true });\n            // return fetch(\n            //     process.env.REACT_APP_API +\n            //     \"model/2d0a2236-3083-4572-ad7b-a8d2ea94c18c/system/f1dc3452-e1a5-4a4e-9ae4-5fee3b34b647\",\n            //     {\n            //         method: \"GET\",\n            //         headers: {\n            //             \"Content-Type\": \"application/json\"\n            //         }\n            //     }\n            // )\n            //     .then(response => response.json())\n            //     .then(responseJson => {\n            //         this.setState({ systemDetails: responseJson });\n            //     });\n        }\n    }\n\n    subSystemToggle(systemId) {\n        this.setState({ collapseSubSystem: !this.state.collapseSubSystem });\n        if (this.state.currentSubSystemIndex === systemId) {\n            this.setState({ currentSubSystemIndex: 0 })\n        } else {\n            this.setState({ currentSubSystemIndex: systemId });\n        }\n    }\n\n    searchSystem(event) {alert('TEST')\n        this.state.ids = [];\n        this.setState({ search: true });\n        var lis = [];\n    \n        var lis = document\n          .getElementById(\"systemListing\")\n          .getElementsByTagName(\"span\");\n        for (var i = 0; i < lis.length; i++) {\n          var stringText = lis[i].innerHTML.toLowerCase();\n          if (\n            event.currentTarget.value &&\n            stringText.includes(event.currentTarget.value.toLowerCase())\n          ) {\n            this.state.ids.push(lis[i].id);\n          }\n        }\n    \n        var lis = document\n          .getElementById(\"FlowListing\")\n          .getElementsByTagName(\"span\");\n        for (var i = 0; i < lis.length; i++) {\n          var stringText = lis[i].innerHTML;\n          if (\n            event.currentTarget.value &&\n            stringText.includes(event.currentTarget.value)\n          ) {\n            this.state.ids.push(lis[i].id);\n          }\n        }\n      }\n\n    toggle() {\n        document.getElementById(\"searchControl\").className = \"_search active\";\n    }\n\n    removeToggle(event) {\n        if(event.target.value == '') {\n           document.getElementById(\"searchControl\").className = \"_search\";\n        }\n    }\n\n    render() {\n        \n        return (\n            <div className=\"org_browser\" >\n                <h3 className=\"text-center text-white\">\n                    Systems and Flows{\" \"}\n                    <i className=\"fas fa-times system-down-icon browser_close\" onClick={() => this.close('system')} />\n                </h3>\n                <VerticalScrollbars style={{ width: 350 }} autoHide>\n                    <div className=\"browser_wrapper\">\n                        <div className=\"org-selector\">\n                            <p className=\"text-white text-left\">Selector</p>\n                            <div className=\"_search\" id=\"searchControl\">\n                                <input\n                                    type=\"text\"\n                                    className=\"search-input\"\n                                    onKeyUp={this.searchSystem}\n                                    onClick={this.toggle.bind(this)}\n                                    onBlur={this.removeToggle.bind(this)}\n                                />\n                                <span className=\"icon icon-Search search-icon\" />\n                            </div>\n                            <div className=\"systems w-100 d-inline-block montserrat text-grey\">\n                                <div className=\"system-search montserrat\" />\n\n                                <p\n                                    className=\"text-white click\"\n                                    style={{ marginBottom: \"1rem\" }}\n                                >\n                                    <span onClick={this.systemMenuToggle}>\n                                        Systems\n                    <i className=\"fas fa-chevron-down system-down-icon\" />\n                                    </span>\n                                    <i\n                                        className=\"fas fa-plus system-down-icon\"\n                                        id=\"system\"\n                                        onClick={this.addClick.bind(this)}\n                                    />\n                                </p>\n                                <VerticalScrollbars style={{ height: 220 }}>\n                                    {this.createSystem()}\n\n                                    <Collapse\n                                        isOpen={this.state.systemsCollapse}\n                                        id=\"systemListing\"\n                                    >\n                                        {this.state.systemData.systems\n                                            ? this.state.systemData.systems.map((item, index) => {\n                                                return (\n                                                    <div key={item.id} className=\"listingItem\">\n                                                        <p\n                                                            className=\"text-grey click\"\n                                                            onClick={() => this.systemToggle(item.id)}\n                                                            style={{\n                                                                marginBottom: \"1rem\"\n                                                            }}\n                                                        >\n                                                            <i className=\"fas fa-chevron-down system-down-icon left text-white\" />\n                                                            <img\n                                                                src={subsystem}\n                                                                alt=\"starlify\"\n                                                                className=\"m-r-15 m-b-5 \"\n                                                            />\n                                                            <span\n                                                                id={item.id}\n                                                                className={\n                                                                    this.state.ids.includes(item.id)\n                                                                        ? \"highlight\"\n                                                                        : \"test\"\n                                                                }\n                                                            >\n                                                                {item.name ? item.name : \"Empty System Name\"}\n                                                            </span>\n                                                        </p>\n                                                        <Collapse\n                                                            isOpen={\n                                                                this.state.currentSystemIndex === item.id ||\n                                                                    this.state.search\n                                                                    ? true\n                                                                    : false\n                                                            }\n                                                        >\n                                                            {item.services\n                                                                ? item.services.map((service, i) => {\n                                                                    return (\n                                                                        <div id={service.id} key={service.id}>\n                                                                            <p\n                                                                                className=\"text-grey click\"\n                                                                                style={{\n                                                                                    marginBottom: \"1rem\",\n                                                                                    marginLeft: \"3rem\"\n                                                                                }}\n                                                                            >\n                                                                                <img\n                                                                                    src={services}\n                                                                                    alt=\"starlify\"\n                                                                                    className=\"m-r-15 m-b-5 \"\n                                                                                />\n                                                                                {service.name\n                                                                                    ? service.name\n                                                                                    : \"Empty Service Name\"}\n                                                                            </p>\n                                                                        </div>\n                                                                    );\n                                                                })\n                                                                : \"\"}\n\n                                                            {item.references\n                                                                ? item.references.map((referenceData, i) => {\n                                                                    return (\n                                                                        <p key={referenceData.id}\n                                                                            className=\"text-grey click\"\n                                                                            style={{\n                                                                                marginBottom: \"1rem\",\n                                                                                marginLeft: \"3rem\"\n                                                                            }}\n                                                                        >\n                                                                            <img\n                                                                                src={reference}\n                                                                                alt=\"starlify\"\n                                                                                className=\"m-r-15 m-b-5 \"\n                                                                            />\n                                                                            {referenceData.name\n                                                                                ? referenceData.name\n                                                                                : \"Empty Reference Name\"}\n                                                                        </p>\n                                                                    );\n                                                                })\n                                                                : \"\"}\n                                                            {item.subSystems\n                                                                ? item.subSystems.map((subSystems, i) => {\n                                                                    return (\n                                                                        <div>\n                                                                            <p\n                                                                                className=\"text-grey click\"\n                                                                                onClick={() =>\n                                                                                    this.subSystemToggle(\n                                                                                        subSystems.id\n                                                                                    )\n                                                                                }\n                                                                                style={{\n                                                                                    marginBottom: \"1rem\",\n                                                                                    marginLeft: \"3rem\"\n                                                                                }}\n                                                                            >\n                                                                                <img\n                                                                                    src={subsystem}\n                                                                                    alt=\"starlify\"\n                                                                                    className=\"m-r-15 m-b-5 \"\n                                                                                />\n                                                                                <span\n                                                                                    id={subSystems.id}\n                                                                                    className={\n                                                                                        this.state.ids.includes(\n                                                                                            subSystems.id\n                                                                                        )\n                                                                                            ? \"highlight\"\n                                                                                            : \"\"\n                                                                                    }\n                                                                                >\n                                                                                    {\" \"}\n                                                                                    {subSystems.name\n                                                                                        ? subSystems.name\n                                                                                        : \"Empty Subsystem Name\"}\n                                                                                </span>\n                                                                            </p>\n                                                                            <Collapse\n                                                                                isOpen={\n                                                                                    this.state\n                                                                                        .currentSubSystemIndex ===\n                                                                                        subSystems.id\n                                                                                        ? true\n                                                                                        : false\n                                                                                }\n                                                                            >\n                                                                                {subSystems.services\n                                                                                    ? subSystems.services.map(\n                                                                                        (service, i) => {\n                                                                                            return (\n                                                                                                <div id={service.id}>\n                                                                                                    <p\n                                                                                                        className=\"text-grey click\"\n                                                                                                        style={{\n                                                                                                            marginBottom:\n                                                                                                                \"1rem\",\n                                                                                                            marginLeft: \"4rem\"\n                                                                                                        }}\n                                                                                                    >\n                                                                                                        <img\n                                                                                                            src={services}\n                                                                                                            alt=\"starlify\"\n                                                                                                            className=\"m-r-15 m-b-5 \"\n                                                                                                        />\n                                                                                                        {service.name\n                                                                                                            ? service.name\n                                                                                                            : \"Empty Service Name\"}\n                                                                                                    </p>\n                                                                                                </div>\n                                                                                            );\n                                                                                        }\n                                                                                    )\n                                                                                    : \"\"}\n                                                                                {subSystems.references\n                                                                                    ? subSystems.references.map(\n                                                                                        (references, i) => {\n                                                                                            return (\n                                                                                                <div id={references.id}>\n                                                                                                    <p\n                                                                                                        className=\"text-grey click\"\n                                                                                                        style={{\n                                                                                                            marginBottom:\n                                                                                                                \"1rem\",\n                                                                                                            marginLeft: \"4rem\"\n                                                                                                        }}\n                                                                                                    >\n                                                                                                        <img\n                                                                                                            src={reference}\n                                                                                                            alt=\"starlify\"\n                                                                                                            className=\"m-r-15 m-b-5 \"\n                                                                                                        />\n                                                                                                        {references.name\n                                                                                                            ? reference.name\n                                                                                                            : \"Empty Reference Name\"}\n                                                                                                    </p>\n                                                                                                </div>\n                                                                                            );\n                                                                                        }\n                                                                                    )\n                                                                                    : \"\"}\n                                                                            </Collapse>\n                                                                        </div>\n                                                                    );\n                                                                })\n                                                                : \"\"}\n                                                        </Collapse>\n                                                    </div>\n                                                );\n                                            })\n                                            : \"\"}\n                                    </Collapse>\n                                </VerticalScrollbars>\n                            </div>\n                            <div className=\"flows\">\n                                <p\n                                    className=\"text-white click\"\n                                    style={{ marginBottom: \"1rem\" }}\n                                >\n                                   Flows<i className=\"fas fa-chevron-down system-down-icon\" onClick={this.flowsMenuToggle}/>\n                                    <i\n                                        className=\"fas fa-plus system-down-icon\"\n                                        id=\"flows\"\n                                        onClick={this.addClick.bind(this)}\n                                    />\n                                </p>\n                                <VerticalScrollbars style={{ height: 200 }}>\n                                    {this.createFlow()}\n                                    <Collapse isOpen={this.state.flowsCollapse} id=\"FlowListing\">\n                                        {this.state.systemData.flow\n                                            ? this.state.systemData.flow.map((item, index) => {\n                                                return (\n                                                    <div key={item.id}>\n                                                        <p\n                                                            className=\"text-grey click\"\n                                                            style={{\n                                                                marginBottom: \"1rem\",\n                                                                marginLeft: \"2rem\"\n                                                            }}\n                                                            onClick={() => this.flowsToggle(item.id)}\n                                                         >\n                                                            <span\n                                                                id={item.id}\n                                                                className={\n                                                                    this.state.ids.includes(item.id)\n                                                                        ? \"highlight\"\n                                                                        : \"\"\n                                                                }\n                                                            >\n                                                                {item.name ? item.name : \"Empty Flow Name\"}\n                                                            </span>\n                                                        </p>\n                                                    </div>\n                                                );\n                                            })\n                                            : \"\"}\n                                    </Collapse>\n                                </VerticalScrollbars>\n                            </div>\n                        </div>\n                    </div>\n                </VerticalScrollbars>\n            </div>\n        );\n    }\n}\n\nexport default Systems;\n"]},"metadata":{},"sourceType":"module"}