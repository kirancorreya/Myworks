{"ast":null,"code":"export const fetchTeams = (domainId, divid) => {\n  return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + divid + \"/organisations\").then(res => res.json()).then(async json => {\n    var teams = json;\n\n    for (var i = 0; i < teams.length; i++) {\n      let org = teams[i];\n      org[\"persons\"] = [];\n\n      if (org._links && org._links.length !== 0) {\n        await fetchPersons(domainId, org.id).then(persons => org[\"persons\"] = persons);\n      }\n    }\n\n    return teams;\n  });\n};\n\nconst fetchPersons = (domainId, orgid) => {\n  return fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + orgid + \"/persons\").then(res => res.json()).then(persons => {\n    return persons;\n  });\n};","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/_helpers/FetchTeams.js"],"names":["fetchTeams","domainId","divid","fetch","process","env","REACT_APP_API","then","res","json","teams","i","length","org","_links","fetchPersons","id","persons","orgid"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC9C,SAAOC,KAAK,CAAEC,OAAO,CAACC,GAAR,CAAYC,aAAZ,GAA4B,qBAA5B,GAAoDL,QAApD,GAA+D,gBAA/D,GAAkFC,KAAlF,GAA0F,gBAA5F,CAAL,CACLK,IADK,CACAC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADP,EAELF,IAFK,CAEA,MAAME,IAAN,IAAc;AACnB,QAAIC,KAAK,GAAGD,IAAZ;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACtC,UAAIE,GAAG,GAAGH,KAAK,CAACC,CAAD,CAAf;AACAE,MAAAA,GAAG,CAAC,SAAD,CAAH,GAAiB,EAAjB;;AACA,UAAIA,GAAG,CAACC,MAAJ,IAAcD,GAAG,CAACC,MAAJ,CAAWF,MAAX,KAAsB,CAAxC,EAA2C;AAC1C,cAAMG,YAAY,CAACd,QAAD,EAAWY,GAAG,CAACG,EAAf,CAAZ,CAA+BT,IAA/B,CACLU,OAAO,IAAKJ,GAAG,CAAC,SAAD,CAAH,GAAiBI,OADxB,CAAN;AAGA;AACD;;AACD,WAAOP,KAAP;AACA,GAdK,CAAP;AAeA,CAhBM;;AAkBP,MAAMK,YAAY,GAAG,CAACd,QAAD,EAAWiB,KAAX,KAAqB;AACzC,SAAOf,KAAK,CAAEC,OAAO,CAACC,GAAR,CAAYC,aAAZ,GAA4B,qBAA5B,GAAoDL,QAApD,GAA+D,gBAA/D,GAAkFiB,KAAlF,GAA0F,UAA5F,CAAL,CACLX,IADK,CACAC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADP,EAELF,IAFK,CAEAU,OAAO,IAAI;AAChB,WAAOA,OAAP;AACA,GAJK,CAAP;AAKA,CAND","sourcesContent":["export const fetchTeams = (domainId, divid) => {\n\treturn fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + divid + \"/organisations\" )\n\t\t.then(res => res.json())\n\t\t.then(async json => {\n\t\t\tvar teams = json;\n\t\t\tfor (var i = 0; i < teams.length; i++) {\n\t\t\t\tlet org = teams[i];\n\t\t\t\torg[\"persons\"] = [];\n\t\t\t\tif (org._links && org._links.length !== 0) {\n\t\t\t\t\tawait fetchPersons(domainId, org.id).then(\n\t\t\t\t\t\tpersons => (org[\"persons\"] = persons)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn teams;\n\t\t});\n};\n\nconst fetchPersons = (domainId, orgid) => {\n\treturn fetch( process.env.REACT_APP_API + \"/hypermedia/domain/\" + domainId + \"/organisation/\" + orgid + \"/persons\" )\n\t\t.then(res => res.json())\n\t\t.then(persons => {\n\t\t\treturn persons;\n\t\t});\n};\n"]},"metadata":{},"sourceType":"module"}