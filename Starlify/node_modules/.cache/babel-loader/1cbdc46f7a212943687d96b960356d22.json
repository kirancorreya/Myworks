{"ast":null,"code":"var _jsxFileName = \"/Users/kirancorreya/Site/Starlify/src/_components/organisation/EditTeam.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col } from \"reactstrap\";\nimport check from \"../../_assets/icons/icons/check-icon.svg\";\nimport addCircle from \"../../_assets/icons/icons/add-icon-circle.svg\";\n\nclass EditTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateTeam = () => {\n      const team = this.props.team;\n      const team_name = this.state.team_name;\n\n      if (team_name !== \"\") {\n        fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/organisation/\" + team.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: team_name\n          })\n        }).then(res => res.json()).then(result => {\n          this.props.toggle(true);\n        });\n      } else {\n        this.props.toggle();\n      }\n    };\n\n    this.addPerson = () => {\n      const team = this.props.team;\n      var name = this.state.dev_firstname + \" \" + this.state.dev_lastname;\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/organisation/\" + team.id + \"/person\", {\n        method: \"POST\"\n      }).then(res => res.json()).then(result => {\n        fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/person/\" + result.id, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: name\n          })\n        }).then(res => res.json()).then(result => {\n          team.persons.push(result);\n          this.setState({\n            dev_firstname: \"\",\n            dev_lastname: \"\",\n            dev_email: \"\",\n            dev_add: false\n          });\n        });\n      });\n    };\n\n    this.toggleDevEdit = person => {\n      var firstName = person.name.split(\" \").slice(0, -1).join(\" \");\n      var lastName = person.name.split(\" \").slice(-1).join(\" \");\n      this.setState({\n        dev_edit: true,\n        dev_firstname: firstName,\n        dev_lastname: lastName,\n        dev_data: person\n      });\n    };\n\n    this.updatePerson = () => {\n      const team = this.props.team;\n      const _this$state = this.state,\n            dev_firstname = _this$state.dev_firstname,\n            dev_lastname = _this$state.dev_lastname,\n            dev_data = _this$state.dev_data;\n      var name = dev_firstname + \" \" + dev_lastname;\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/person/\" + dev_data.id, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: name\n        })\n      }).then(res => res.json()).then(result => {\n        team.persons.forEach(person => {\n          if (person.id === dev_data.id) {\n            person.name = result.name;\n          }\n        });\n        this.setState({\n          dev_edit: false,\n          dev_firstname: \"\",\n          dev_lastname: \"\",\n          dev_data: \"\"\n        });\n      });\n    };\n\n    this.deletePerson = () => {\n      const team = this.props.team;\n      const dev_data = this.state.dev_data;\n      fetch(process.env.REACT_APP_API + \"/hypermedia/domain/\" + this.props.domain + \"/person/\" + dev_data.id, {\n        method: \"DELETE\"\n      }).then(result => {\n        switch (result.status) {\n          case 200:\n            team.persons = team.persons.filter(function (person) {\n              return person.id !== dev_data.id;\n            });\n            break;\n\n          default:\n        }\n\n        this.setState({\n          dev_delete: false,\n          dev_data: null\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          dev_delete: false,\n          dev_data: null\n        });\n      });\n    };\n\n    this.state = {\n      team_name: props.team.name,\n      dev_add: false,\n      dev_edit: false,\n      dev_data: null,\n      dev_firstname: \"\",\n      dev_lastname: \"\",\n      dev_email: \"\",\n      dev_delete: false,\n      error: null\n    };\n  }\n\n  render() {\n    const team = this.props.team;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editTeam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"d-inline-block modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \" Edit \", team.name, \" \"), React.createElement(\"button\", {\n      className: \"btn grey-btn modal-top-btn\",\n      onClick: this.updateTeam.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Done \", React.createElement(\"img\", {\n      src: check,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"modalSearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Team name\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.team_name,\n      onChange: e => {\n        this.setState({\n          team_name: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"modalList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Members\"), team.persons.length !== 0 ? React.createElement(\"ul\", {\n      className: \"members\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, team.persons.map((person, i) => {\n      return React.createElement(\"li\", {\n        key: person.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, this.state.dev_delete === true && this.state.dev_data.id === person.id ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \" \", \"Do you really want to delete person\", \" \", this.state.dev_data.name, \"? \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), \" Process cannot be undone!\"), React.createElement(\"div\", {\n        className: \"delete-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn black-btn\",\n        onClick: this.deletePerson.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \" \", \"confirm\", \" \"), React.createElement(\"button\", {\n        className: \"btn transparent-black-btn\",\n        onClick: () => {\n          this.setState({\n            dev_delete: false,\n            dev_data: null\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \" \", \"cancel\", \" \")))) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, person.name), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"email@email.com\"), React.createElement(Col, {\n        sm: \"5\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Accepted\"), \" \"), React.createElement(\"li\", {\n        onClick: () => {\n          this.toggleDevEdit(person);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-pen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: () => {\n          this.setState({\n            dev_delete: true,\n            dev_data: person\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }))))));\n    })) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"No members yet\")), React.createElement(\"div\", {\n      className: \"underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"addModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, this.state.dev_add === true && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Albert\",\n      value: this.state.dev_firstname,\n      onChange: e => {\n        this.setState({\n          dev_firstname: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Einstein\",\n      value: this.state.dev_lastname,\n      onChange: e => {\n        this.setState({\n          dev_lastname: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"relativitytheory@email.com\",\n      value: this.state.dev_email,\n      onChange: e => {\n        this.setState({\n          dev_email: e.target.dev_email\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.addPerson,\n      className: \"modalTransparent-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Add\"))), this.state.dev_add === false && this.state.dev_edit !== true && React.createElement(\"span\", {\n      onClick: () => this.setState({\n        dev_add: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \" \", React.createElement(\"img\", {\n      src: addCircle,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), \" Add member\", \" \"), this.state.dev_edit === true && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Albert\",\n      value: this.state.dev_firstname,\n      onChange: e => {\n        this.setState({\n          dev_firstname: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Einstein\",\n      value: this.state.dev_lastname,\n      onChange: e => {\n        this.setState({\n          dev_lastname: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"relativitytheory@email.com\",\n      value: this.state.dev_email,\n      onChange: e => {\n        this.setState({\n          dev_email: e.target.dev_email\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.updatePerson,\n      className: \"modalTransparent-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"Update\"))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain\n  };\n}\n\nexport default connect(mapStateToProps)(EditTeam);","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/_components/organisation/EditTeam.js"],"names":["React","Component","connect","Row","Col","EditTeam","constructor","props","updateTeam","team","team_name","state","fetch","process","env","REACT_APP_API","domain","id","method","headers","body","JSON","stringify","name","then","res","json","result","toggle","addPerson","dev_firstname","dev_lastname","persons","push","setState","dev_email","dev_add","toggleDevEdit","person","firstName","split","slice","join","lastName","dev_edit","dev_data","updatePerson","forEach","deletePerson","status","filter","dev_delete","catch","error","console","log","render","bind","check","e","target","value","length","map","i","addCircle","mapStateToProps","model"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col } from \"reactstrap\";\n\nimport check from \"../../_assets/icons/icons/check-icon.svg\";\nimport addCircle from \"../../_assets/icons/icons/add-icon-circle.svg\";\n\nclass EditTeam extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      team_name: props.team.name,\n      dev_add: false,\n      dev_edit: false,\n      dev_data: null,\n      dev_firstname: \"\",\n      dev_lastname: \"\",\n      dev_email: \"\",\n      dev_delete: false,\n      error: null\n    };\n  }\n\n  updateTeam = () => {\n    const { team } = this.props;\n    const { team_name } = this.state;\n    if (team_name !== \"\") {\n      fetch(\n        process.env.REACT_APP_API +\n          \"/hypermedia/domain/\" +\n          this.props.domain +\n          \"/organisation/\" +\n          team.id,\n        {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ name: team_name })\n        }\n      )\n        .then(res => res.json())\n        .then(result => {\n          this.props.toggle(true);\n        });\n    } else {\n      this.props.toggle();\n    }\n  };\n\n  addPerson = () => {\n    const { team } = this.props;\n    var name = this.state.dev_firstname + \" \" + this.state.dev_lastname;\n    fetch(\n      process.env.REACT_APP_API +\n        \"/hypermedia/domain/\" +\n        this.props.domain +\n        \"/organisation/\" +\n        team.id +\n        \"/person\",\n      { method: \"POST\" }\n    )\n      .then(res => res.json())\n      .then(result => {\n        fetch(\n          process.env.REACT_APP_API +\n            \"/hypermedia/domain/\" +\n            this.props.domain +\n            \"/person/\" +\n            result.id,\n          {\n            method: \"PATCH\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ name: name })\n          }\n        )\n          .then(res => res.json())\n          .then(result => {\n            team.persons.push(result);\n            this.setState({\n              dev_firstname: \"\",\n              dev_lastname: \"\",\n              dev_email: \"\",\n              dev_add: false\n            });\n          });\n      });\n  };\n\n  toggleDevEdit = person => {\n    var firstName = person.name\n      .split(\" \")\n      .slice(0, -1)\n      .join(\" \");\n    var lastName = person.name\n      .split(\" \")\n      .slice(-1)\n      .join(\" \");\n    this.setState({\n      dev_edit: true,\n      dev_firstname: firstName,\n      dev_lastname: lastName,\n      dev_data: person\n    });\n  };\n\n  updatePerson = () => {\n    const { team } = this.props;\n    const { dev_firstname, dev_lastname, dev_data } = this.state;\n    var name = dev_firstname + \" \" + dev_lastname;\n    fetch(\n      process.env.REACT_APP_API +\n        \"/hypermedia/domain/\" +\n        this.props.domain +\n        \"/person/\" +\n        dev_data.id,\n      {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: name })\n      }\n    )\n      .then(res => res.json())\n      .then(result => {\n        team.persons.forEach(person => {\n          if (person.id === dev_data.id) {\n            person.name = result.name;\n          }\n        });\n        this.setState({\n          dev_edit: false,\n          dev_firstname: \"\",\n          dev_lastname: \"\",\n          dev_data: \"\"\n        });\n      });\n  };\n\n  deletePerson = () => {\n    const { team } = this.props;\n    const { dev_data } = this.state;\n    fetch(\n      process.env.REACT_APP_API +\n        \"/hypermedia/domain/\" +\n        this.props.domain +\n        \"/person/\" +\n        dev_data.id,\n      { method: \"DELETE\" }\n    )\n      .then(result => {\n        switch (result.status) {\n          case 200:\n            team.persons = team.persons.filter(function(person) {\n              return person.id !== dev_data.id;\n            });\n            break;\n          default:\n        }\n        this.setState({ dev_delete: false, dev_data: null });\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState({ dev_delete: false, dev_data: null });\n      });\n  };\n\n  render() {\n    const { team } = this.props;\n    return (\n      <div>\n        <div className=\"editTeam\">\n          <h3 className=\"d-inline-block modal-title\"> Edit {team.name} </h3>\n          <button\n            className=\"btn grey-btn modal-top-btn\"\n            onClick={this.updateTeam.bind(this)}\n          >\n            Done <img src={check} alt=\"\" />\n          </button>\n          <div className=\"modalSearch\">\n            <h4>Team name</h4>\n            <input\n              type=\"text\"\n              value={this.state.team_name}\n              onChange={e => {\n                this.setState({ team_name: e.target.value });\n              }}\n            />\n          </div>\n          <div className=\"modalList\">\n            <h4>Members</h4>\n            {team.persons.length !== 0 ? (\n              <ul className=\"members\">\n                {team.persons.map((person, i) => {\n                  return (\n                    <li key={person.id}>\n                      {this.state.dev_delete === true &&\n                      this.state.dev_data.id === person.id ? (\n                        <React.Fragment>\n                          <div>\n                            <p>\n                              {\" \"}\n                              Do you really want to delete person{\" \"}\n                              {this.state.dev_data.name}? <br /> Process cannot\n                              be undone!\n                            </p>\n                            <div className=\"delete-button\">\n                              <button\n                                className=\"btn black-btn\"\n                                onClick={this.deletePerson.bind(this)}\n                              >\n                                {\" \"}\n                                confirm{\" \"}\n                              </button>\n                              <button\n                                className=\"btn transparent-black-btn\"\n                                onClick={() => {\n                                  this.setState({\n                                    dev_delete: false,\n                                    dev_data: null\n                                  });\n                                }}\n                              >\n                                {\" \"}\n                                cancel{\" \"}\n                              </button>\n                            </div>\n                          </div>\n                        </React.Fragment>\n                      ) : (\n                        <React.Fragment>\n                          <Col sm=\"4\">{person.name}</Col>\n                          <Col sm=\"3\">email@email.com</Col>\n                          <Col sm=\"5\" className=\"text-center\">\n                            <ul className=\"settings\">\n                              <li>\n                                {\" \"}\n                                <span className=\"status\">Accepted</span>{\" \"}\n                              </li>\n                              <li\n                                onClick={() => {\n                                  this.toggleDevEdit(person);\n                                }}\n                              >\n                                <i className=\"fas fa-pen\"></i>\n                              </li>\n                              <li\n                                onClick={() => {\n                                  this.setState({\n                                    dev_delete: true,\n                                    dev_data: person\n                                  });\n                                }}\n                              >\n                                <i className=\"fas fa-trash-alt\"></i>\n                              </li>\n                            </ul>\n                          </Col>\n                        </React.Fragment>\n                      )}\n                    </li>\n                  );\n                })}\n              </ul>\n            ) : (\n              <h1>No members yet</h1>\n            )}\n          </div>\n          <div className=\"underline\"></div>\n          <div className=\"addModal\">\n            {this.state.dev_add === true && (\n              <Row>\n                <Col sm=\"3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Albert\"\n                    value={this.state.dev_firstname}\n                    onChange={e => {\n                      this.setState({ dev_firstname: e.target.value });\n                    }}\n                  />\n                </Col>\n                <Col sm=\"3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Einstein\"\n                    value={this.state.dev_lastname}\n                    onChange={e => {\n                      this.setState({ dev_lastname: e.target.value });\n                    }}\n                  />\n                </Col>\n                <Col sm=\"4\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"relativitytheory@email.com\"\n                    value={this.state.dev_email}\n                    onChange={e => {\n                      this.setState({ dev_email: e.target.dev_email });\n                    }}\n                  />\n                </Col>\n                <Col sm=\"2\">\n                  <button\n                    onClick={this.addPerson}\n                    className=\"modalTransparent-btn\"\n                  >\n                    Add\n                  </button>\n                </Col>\n              </Row>\n            )}\n            {this.state.dev_add === false && this.state.dev_edit !== true && (\n              <span onClick={() => this.setState({ dev_add: true })}>\n                {\" \"}\n                <img src={addCircle} alt=\"\" /> Add member{\" \"}\n              </span>\n            )}\n            {this.state.dev_edit === true && (\n              <Row>\n                <Col sm=\"3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Albert\"\n                    value={this.state.dev_firstname}\n                    onChange={e => {\n                      this.setState({ dev_firstname: e.target.value });\n                    }}\n                  />\n                </Col>\n                <Col sm=\"3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Einstein\"\n                    value={this.state.dev_lastname}\n                    onChange={e => {\n                      this.setState({ dev_lastname: e.target.value });\n                    }}\n                  />\n                </Col>\n                <Col sm=\"4\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"relativitytheory@email.com\"\n                    value={this.state.dev_email}\n                    onChange={e => {\n                      this.setState({ dev_email: e.target.dev_email });\n                    }}\n                  />\n                </Col>\n                <Col sm=\"2\">\n                  <button\n                    onClick={this.updatePerson}\n                    className=\"modalTransparent-btn\"\n                  >\n                    Update\n                  </button>\n                </Col>\n              </Row>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    domain: state.model.domain\n  };\n}\n\nexport default connect(mapStateToProps)(EditTeam);\n"]},"metadata":{},"sourceType":"module"}