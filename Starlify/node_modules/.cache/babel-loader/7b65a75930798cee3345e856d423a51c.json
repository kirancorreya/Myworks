{"ast":null,"code":"import _objectSpread from \"/Users/kirancorreya/Site/Starlify/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport const defaultArrayReducer = {\n  loading: false,\n  has_loaded: false,\n  version: 0,\n  rows: []\n};\nexport default function arrayReducer(id = 'id') {\n  return (state = defaultArrayReducer, action) => {\n    switch (action.type) {\n      case 'SET_ROWS':\n        {\n          return _objectSpread({}, state, {\n            loading: false,\n            has_loaded: true,\n            version: state.version + 1,\n            rows: action.payload\n          });\n        }\n\n      case 'ADD_ROW':\n        {\n          return _objectSpread({}, state, {\n            loading: false,\n            has_loaded: true,\n            version: state.version + 1,\n            rows: [...state.rows, action.payload]\n          });\n        }\n\n      case 'ADD_ROWS':\n        {\n          return _objectSpread({}, state, {\n            loading: false,\n            has_loaded: true,\n            version: state.version + 1,\n            rows: [...state.rows, ...action.payload]\n          });\n        }\n\n      case 'REMOVE_ROW':\n        {\n          let newRows = state.rows.filter(x => x[id] !== action.payload[id]);\n          return _objectSpread({}, state, {\n            loading: false,\n            has_loaded: true,\n            version: state.version + 1,\n            rows: newRows\n          });\n        }\n\n      case 'UPDATE_ROW':\n        {\n          console.info('Update row', action.payload);\n          let index = state.rows.findIndex(x => x[id] === action.payload[id]);\n          console.info('Found index', index);\n\n          if (index === -1) {\n            return state;\n          }\n\n          let newRows = state.rows;\n          newRows[index] = action.payload;\n          return _objectSpread({}, state, {\n            loading: false,\n            has_loaded: true,\n            version: state.version + 1,\n            rows: newRows\n          });\n        }\n\n      case 'LOADING':\n        {\n          return _objectSpread({}, state, {\n            loading: true,\n            has_loaded: false,\n            rows: []\n          });\n        }\n\n      case 'DONE':\n        {\n          return _objectSpread({}, state, {\n            loading: false,\n            has_loaded: true\n          });\n        }\n\n      case 'RESET':\n        {\n          return defaultArrayReducer;\n        }\n\n      default:\n        return state;\n    }\n  };\n}","map":{"version":3,"sources":["/Users/kirancorreya/Site/Starlify/src/lib/utilities/reducers/arrayReducer.js"],"names":["defaultArrayReducer","loading","has_loaded","version","rows","arrayReducer","id","state","action","type","payload","newRows","filter","x","console","info","index","findIndex"],"mappings":"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","sourcesContent":["export const defaultArrayReducer = {\n    loading: false,\n    has_loaded: false,\n    version: 0,\n    rows: []\n};\nexport default function arrayReducer(id = 'id') {\n    return (state = defaultArrayReducer, action) => {\n        switch (action.type) {\n            case 'SET_ROWS': {\n                return {\n                    ...state,\n                    loading: false,\n                    has_loaded: true,\n                    version: state.version + 1,\n                    rows: action.payload\n                }\n            }\n            case 'ADD_ROW': {\n                return {\n                    ...state,\n                    loading: false,\n                    has_loaded: true,\n                    version: state.version + 1,\n                    rows: [\n                        ...state.rows,\n                        action.payload\n                    ]\n                }\n            }\n            case 'ADD_ROWS': {\n                return {\n                    ...state,\n                    loading: false,\n                    has_loaded: true,\n                    version: state.version + 1,\n                    rows: [\n                        ...state.rows,\n                        ...action.payload\n                    ]\n                }\n            }\n            case 'REMOVE_ROW': {\n                let newRows = state.rows.filter(x => x[id] !== action.payload[id]);\n                return {\n                    ...state,\n                    loading: false,\n                    has_loaded: true,\n                    version: state.version + 1,\n                    rows: newRows\n                }\n            }\n            case 'UPDATE_ROW': {\n                console.info('Update row', action.payload);\n                let index = state.rows.findIndex(x => x[id] === action.payload[id]);\n                console.info('Found index', index);\n                if (index === -1) {\n                    return state;\n                }\n                let newRows = state.rows;\n                newRows[index] = action.payload;\n                return {\n                    ...state,\n                    loading: false,\n                    has_loaded: true,\n                    version: state.version + 1,\n                    rows: newRows\n                }\n            }\n            case 'LOADING': {\n                return {\n                    ...state,\n                    loading: true,\n                    has_loaded: false,\n                    rows: []\n                }\n            }\n            case 'DONE': {\n                return {\n                    ...state,\n                    loading: false,\n                    has_loaded: true,\n                }\n            }\n            case 'RESET': {\n                return defaultArrayReducer;\n            }\n            default:\n                return state;\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}